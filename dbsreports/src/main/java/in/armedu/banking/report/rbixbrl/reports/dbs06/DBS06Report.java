package in.armedu.banking.report.rbixbrl.reports.dbs06;



import javax.xml.datatype.DatatypeConstants;
import javax.xml.datatype.DatatypeFactory;
import javax.xml.datatype.XMLGregorianCalendar;
import javax.xml.namespace.QName;
import javax.xml.bind.JAXBContext;
import javax.xml.bind.JAXBElement;
import javax.xml.bind.Marshaller;

import org.xbrl._2003.instance.Context;
import org.xbrl._2003.instance.ContextEntityType;
import org.xbrl._2003.instance.ContextEntityType.Identifier;
import org.xbrl._2006.xbrldi.ExplicitMember;
import org.xbrl._2006.xbrldi.TypedMember;
import org.xbrl._2003.instance.ContextPeriodType;
import org.xbrl._2003.instance.ObjectFactory;
import org.xbrl._2003.instance.Unit;
import org.xbrl._2003.instance.Xbrl;
import org.xbrl._2003.xlink.SimpleType;

// generic import classes
import java.lang.Boolean;
import java.io.StringWriter;
import java.util.ArrayList;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.List;
import java.util.Map;
import java.util.HashMap;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.GregorianCalendar;
import in.armedu.banking.report.rbixbrl.util.DefaultNamespacePrefixMapper;
import lombok.Setter;

// import model class
import in.armedu.banking.report.rbixbrl.model.dbs06.*;
import in.armedu.banking.report.rbixbrl.model.FieldDataValue;
// add xbrl data type and inerface
import in.armedu.banking.report.rbixbrl.reports.XBRLReportIntf;
import in.armedu.banking.report.rbixbrl.util.CommonFns;
import in.armedu.banking.report.rbixbrl.model.ReportData;

// add data type 

                        import org.xbrl._2003.instance.StringItemType;
                        
                        import org.xbrl._2003.instance.DateItemType;
                        
                        import org.rbi.in.xbrl.rbi_type.ReportingScale;
                        
                        import org.rbi.in.xbrl._2012_05_07.in_rbi_rep_types.ReportStatusItemType;
                        
                        import org.xbrl.dtr.type.non_numeric.TextBlockItemType;
                        
                        import org.xbrl._2003.instance.BooleanItemType;
                        
                        import org.xbrl._2003.instance.MonetaryItemType;
                        
                        import org.xbrl.dtr.type.numeric.PercentItemType;
                        

@Setter
public class DBS06Report implements XBRLReportIntf {
       
    
    // logic for main method
    @Override
    public StringWriter generateReport(ReportData reportData){
        JAXBContext jc;
        Marshaller m;
        // TODO should be generated dynamically
        DBS06ReportData mainReportData = (DBS06ReportData) reportData;

        try {
            jc = JAXBContext.newInstance(ObjectFactory.class,
            org.rbi.in.xbrl._2012_05_07.in_rbi_rep_types.ObjectFactory.class,
            org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory.class,
            org.rbi.in.xbrl.rbi_core.ObjectFactory.class,
            org.rbi.in.xbrl.rbi_par.ObjectFactory.class,
            org.rbi.in_rbi_rep_par.ObjectFactory.class,
            org.xbrl._2003.xlink.ObjectFactory.class,
            org.xbrl._2003.instance.ObjectFactory.class,
            org.xbrl._2006.xbrldi.ObjectFactory.class,
            org.xbrl._2003.linkbase.ObjectFactory.class,
            org.xbrl._2005.xbrldt.ObjectFactory.class,
            org.xbrl.dtr.type.non_numeric.ObjectFactory.class,
            org.xbrl.dtr.type.numeric.ObjectFactory.class);

            m = jc.createMarshaller();
            StringWriter writer = new StringWriter();
            Xbrl xbrl = new org.xbrl._2003.instance.ObjectFactory().createXbrl();
            
            m.setProperty(Marshaller.JAXB_ENCODING, "UTF-8");
            m.setProperty(Marshaller.JAXB_FORMATTED_OUTPUT, true);
            m.setProperty("com.sun.xml.bind.namespacePrefixMapper", new DefaultNamespacePrefixMapper());
            org.xbrl._2003.xlink.ObjectFactory xlinkObjectFactory = new org.xbrl._2003.xlink.ObjectFactory();
            SimpleType simpleType = xlinkObjectFactory.createSimpleType();
            simpleType.setType("simple");
            // TODO should be changed to specific xsd related to report dbs06
            simpleType.setHref("in-rbi-dbs06.xsd");
            xbrl.getSchemaRef().add(simpleType);
            xbrl.getOtherAttributes().put(new QName("xml:lang"), "en");
           
            
            // context identifiers and body elements
            List<String> contextIdentifiers = new ArrayList<String>();
            List<Context> contextElements = new ArrayList<Context>();
            List<Object> bodyElements = new ArrayList<Object>();
            List<String> unitIdentifiers = new ArrayList<String>();
            List<Unit> unitElements = new ArrayList<Unit>();
           
            //Unit unitObj = null;
            //DBS06ReportData dBS06ReportData = new DBS06ReportData();
            // print values           
    

            // TODO : create proper context with loop and element
            // initiatilize data class and allow to be set 
            //private DBS06ReportData dBS06ReportData = new DBS06ReportData();
            // retrieve bankcode, startdate, enddate and perioddate
            String bankCode = mainReportData.getBankCode();
            String startDate = mainReportData.getStartDate();
            String endDate = mainReportData.getEndDate();
            String periodDate = mainReportData.getPeriodDate();

             
            
                // create variable for subclass FilingInfo_Layout1 if any typeMembers then List or Single
                FilingInfo_Layout1 filingInfo_Layout1 = mainReportData.getFilingInfo_Layout1();
                // method calling
                
                    filingInfo_Layout1Method(filingInfo_Layout1, contextIdentifiers,  contextElements, bodyElements, unitIdentifiers, unitElements, bankCode, startDate, endDate, periodDate);
                
                
                // if typemembers exist
                
                
                
                // create variable for subclass FilingInfo_Layout2 if any typeMembers then List or Single
                FilingInfo_Layout2 filingInfo_Layout2 = mainReportData.getFilingInfo_Layout2();
                // method calling
                
                    filingInfo_Layout2Method(filingInfo_Layout2, contextIdentifiers,  contextElements, bodyElements, unitIdentifiers, unitElements, bankCode, startDate, endDate, periodDate);
                
                
                // if typemembers exist
                
                
                
                // create variable for subclass DBSLeverageRatioSolo_Layout1 if any typeMembers then List or Single
                DBSLeverageRatioSolo_Layout1 dBSLeverageRatioSolo_Layout1 = mainReportData.getDBSLeverageRatioSolo_Layout1();
                // method calling
                
                    dBSLeverageRatioSolo_Layout1Method(dBSLeverageRatioSolo_Layout1, contextIdentifiers,  contextElements, bodyElements, unitIdentifiers, unitElements, bankCode, startDate, endDate, periodDate);
                
                
                // if typemembers exist
                
                
                
                // create variable for subclass DBSLeverageRatioSolo_Layout2 if any typeMembers then List or Single
                DBSLeverageRatioSolo_Layout2 dBSLeverageRatioSolo_Layout2 = mainReportData.getDBSLeverageRatioSolo_Layout2();
                // method calling
                
                    dBSLeverageRatioSolo_Layout2Method(dBSLeverageRatioSolo_Layout2, contextIdentifiers,  contextElements, bodyElements, unitIdentifiers, unitElements, bankCode, startDate, endDate, periodDate);
                
                
                // if typemembers exist
                
                
                
                // create variable for subclass DBSLeverageRatioSolo_Layout3 if any typeMembers then List or Single
                DBSLeverageRatioSolo_Layout3 dBSLeverageRatioSolo_Layout3 = mainReportData.getDBSLeverageRatioSolo_Layout3();
                // method calling
                
                    dBSLeverageRatioSolo_Layout3Method(dBSLeverageRatioSolo_Layout3, contextIdentifiers,  contextElements, bodyElements, unitIdentifiers, unitElements, bankCode, startDate, endDate, periodDate);
                
                
                // if typemembers exist
                
                
                
                // create variable for subclass DBSLeverageRatioSolo_Layout4 if any typeMembers then List or Single
                DBSLeverageRatioSolo_Layout4 dBSLeverageRatioSolo_Layout4 = mainReportData.getDBSLeverageRatioSolo_Layout4();
                // method calling
                
                    dBSLeverageRatioSolo_Layout4Method(dBSLeverageRatioSolo_Layout4, contextIdentifiers,  contextElements, bodyElements, unitIdentifiers, unitElements, bankCode, startDate, endDate, periodDate);
                
                
                // if typemembers exist
                
                
                
                // create variable for subclass DBSLeverageRatioSolo_Layout5 if any typeMembers then List or Single
                DBSLeverageRatioSolo_Layout5 dBSLeverageRatioSolo_Layout5 = mainReportData.getDBSLeverageRatioSolo_Layout5();
                // method calling
                
                    dBSLeverageRatioSolo_Layout5Method(dBSLeverageRatioSolo_Layout5, contextIdentifiers,  contextElements, bodyElements, unitIdentifiers, unitElements, bankCode, startDate, endDate, periodDate);
                
                
                // if typemembers exist
                
                
                
                // create variable for subclass DBSLeverageRatioConsolidated_Layout1 if any typeMembers then List or Single
                DBSLeverageRatioConsolidated_Layout1 dBSLeverageRatioConsolidated_Layout1 = mainReportData.getDBSLeverageRatioConsolidated_Layout1();
                // method calling
                
                    dBSLeverageRatioConsolidated_Layout1Method(dBSLeverageRatioConsolidated_Layout1, contextIdentifiers,  contextElements, bodyElements, unitIdentifiers, unitElements, bankCode, startDate, endDate, periodDate);
                
                
                // if typemembers exist
                
                
                
                // create variable for subclass DBSLeverageRatioConsolidated_Layout2 if any typeMembers then List or Single
                DBSLeverageRatioConsolidated_Layout2 dBSLeverageRatioConsolidated_Layout2 = mainReportData.getDBSLeverageRatioConsolidated_Layout2();
                // method calling
                
                    dBSLeverageRatioConsolidated_Layout2Method(dBSLeverageRatioConsolidated_Layout2, contextIdentifiers,  contextElements, bodyElements, unitIdentifiers, unitElements, bankCode, startDate, endDate, periodDate);
                
                
                // if typemembers exist
                
                
                
                // create variable for subclass DBSLeverageRatioConsolidated_Layout3 if any typeMembers then List or Single
                DBSLeverageRatioConsolidated_Layout3 dBSLeverageRatioConsolidated_Layout3 = mainReportData.getDBSLeverageRatioConsolidated_Layout3();
                // method calling
                
                    dBSLeverageRatioConsolidated_Layout3Method(dBSLeverageRatioConsolidated_Layout3, contextIdentifiers,  contextElements, bodyElements, unitIdentifiers, unitElements, bankCode, startDate, endDate, periodDate);
                
                
                // if typemembers exist
                
                
                
                // create variable for subclass DBSLeverageRatioConsolidated_Layout4 if any typeMembers then List or Single
                DBSLeverageRatioConsolidated_Layout4 dBSLeverageRatioConsolidated_Layout4 = mainReportData.getDBSLeverageRatioConsolidated_Layout4();
                // method calling
                
                    dBSLeverageRatioConsolidated_Layout4Method(dBSLeverageRatioConsolidated_Layout4, contextIdentifiers,  contextElements, bodyElements, unitIdentifiers, unitElements, bankCode, startDate, endDate, periodDate);
                
                
                // if typemembers exist
                
                
                
                // create variable for subclass DBSLeverageRatioConsolidated_Layout5 if any typeMembers then List or Single
                DBSLeverageRatioConsolidated_Layout5 dBSLeverageRatioConsolidated_Layout5 = mainReportData.getDBSLeverageRatioConsolidated_Layout5();
                // method calling
                
                    dBSLeverageRatioConsolidated_Layout5Method(dBSLeverageRatioConsolidated_Layout5, contextIdentifiers,  contextElements, bodyElements, unitIdentifiers, unitElements, bankCode, startDate, endDate, periodDate);
                
                
                // if typemembers exist
                
                
                
                // create variable for subclass DBSAuthorisedSignatory_Layout1 if any typeMembers then List or Single
                DBSAuthorisedSignatory_Layout1 dBSAuthorisedSignatory_Layout1 = mainReportData.getDBSAuthorisedSignatory_Layout1();
                // method calling
                
                    dBSAuthorisedSignatory_Layout1Method(dBSAuthorisedSignatory_Layout1, contextIdentifiers,  contextElements, bodyElements, unitIdentifiers, unitElements, bankCode, startDate, endDate, periodDate);
                
                
                // if typemembers exist
                
                
                
            // end contexts loop
            // add contexts to xbrl
            contextElements.forEach(ce->{
                xbrl.getItemOrTupleOrContext().add(ce);
            });
            unitElements.forEach(u->{
                xbrl.getItemOrTupleOrContext().add(u);
            });
            
            bodyElements.forEach(be->{
                xbrl.getItemOrTupleOrContext().add(be);
            });
            m.marshal(xbrl, writer);
            System.out.println("");
            System.out.println(writer.toString());
            System.out.println("");
            return writer;
        } catch(Exception e){
            e.printStackTrace();
        }
        return null;
    }






    // logic to generate method
             
            
                // create variable for subclass FilingInfo_Layout1 if any typeMembers then List or Single
                //FilingInfo_Layout1 filingInfo_Layout1 = mainReportData.getFilingInfo_Layout1();
                
                    private String filingInfo_Layout1Method(FilingInfo_Layout1 filingInfo_Layout1, List<String> contextIdentifiers,  List<Context> contextElements, List<Object> bodyElements, List<String> unitIdentifiers, List<Unit> unitElements, String bankCode, String startDateDefault, String endDateDefault, String periodDateDefault)
                
                    {
                        String startDate = startDateDefault;
                        String endDate = endDateDefault;
                        String periodDate = periodDateDefault;
                    FilingInfo_Layout1 field = filingInfo_Layout1;
                    
                    
                        
                        
                            
                            // - ReturnName
                            
                                Map zeroFilingInfo_Layout1ReturnNameMap4 = new HashMap<String, String>();
                                
                                
                                
                                    
                                    String zeroFilingInfo_Layout1ReturnNameValue2 = DBS06ReportUtil.retrieveValueForElement(field.getReturnName(), zeroFilingInfo_Layout1ReturnNameMap4);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroFilingInfo_Layout1ReturnNameFieldDataValue3 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReturnName(), zeroFilingInfo_Layout1ReturnNameMap4, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
    
                                    if(zeroFilingInfo_Layout1ReturnNameFieldDataValue3 != null ) {
                                        if(!zeroFilingInfo_Layout1ReturnNameFieldDataValue3.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroFilingInfo_Layout1ReturnNameFieldDataValue3.getStartDateValue();
                                        if(!zeroFilingInfo_Layout1ReturnNameFieldDataValue3.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroFilingInfo_Layout1ReturnNameFieldDataValue3.getEndDateValue();
                                        if(!zeroFilingInfo_Layout1ReturnNameFieldDataValue3.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroFilingInfo_Layout1ReturnNameFieldDataValue3.getInstantDateValue();
                                    }

                                    
                                        Context FilingInfo_Layout1ReturnNameContext1 = DBS06ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                
                                if(zeroFilingInfo_Layout1ReturnNameValue2 != null && !"".equals(zeroFilingInfo_Layout1ReturnNameValue2)) {
                                    
                                    addContext(FilingInfo_Layout1ReturnNameContext1, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    StringItemType returnNameValue5 = new StringItemType();
                                    returnNameValue5.setContextRef(FilingInfo_Layout1ReturnNameContext1);
                                    
                                    returnNameValue5.setValue(zeroFilingInfo_Layout1ReturnNameValue2);        
                                    
                                    
                                    JAXBElement<StringItemType> returnNameElement6 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReturnName(returnNameValue5);
                                    bodyElements.add(returnNameElement6);
                                
                            }
                        
                            
                            // - ReturnCode
                            
                                Map zeroFilingInfo_Layout1ReturnCodeMap10 = new HashMap<String, String>();
                                
                                
                                
                                    
                                    String zeroFilingInfo_Layout1ReturnCodeValue8 = DBS06ReportUtil.retrieveValueForElement(field.getReturnCode(), zeroFilingInfo_Layout1ReturnCodeMap10);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroFilingInfo_Layout1ReturnCodeFieldDataValue9 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReturnCode(), zeroFilingInfo_Layout1ReturnCodeMap10, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
    
                                    if(zeroFilingInfo_Layout1ReturnCodeFieldDataValue9 != null ) {
                                        if(!zeroFilingInfo_Layout1ReturnCodeFieldDataValue9.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroFilingInfo_Layout1ReturnCodeFieldDataValue9.getStartDateValue();
                                        if(!zeroFilingInfo_Layout1ReturnCodeFieldDataValue9.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroFilingInfo_Layout1ReturnCodeFieldDataValue9.getEndDateValue();
                                        if(!zeroFilingInfo_Layout1ReturnCodeFieldDataValue9.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroFilingInfo_Layout1ReturnCodeFieldDataValue9.getInstantDateValue();
                                    }

                                    
                                        Context FilingInfo_Layout1ReturnCodeContext7 = DBS06ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                
                                if(zeroFilingInfo_Layout1ReturnCodeValue8 != null && !"".equals(zeroFilingInfo_Layout1ReturnCodeValue8)) {
                                    
                                    addContext(FilingInfo_Layout1ReturnCodeContext7, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    StringItemType returnCodeValue11 = new StringItemType();
                                    returnCodeValue11.setContextRef(FilingInfo_Layout1ReturnCodeContext7);
                                    
                                    returnCodeValue11.setValue(zeroFilingInfo_Layout1ReturnCodeValue8);        
                                    
                                    
                                    JAXBElement<StringItemType> returnCodeElement12 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReturnCode(returnCodeValue11);
                                    bodyElements.add(returnCodeElement12);
                                
                            }
                        
                            
                            // - BankCode
                            
                                Map zeroFilingInfo_Layout1BankCodeMap16 = new HashMap<String, String>();
                                
                                
                                
                                    
                                    String zeroFilingInfo_Layout1BankCodeValue14 = DBS06ReportUtil.retrieveValueForElement(field.getBankCode(), zeroFilingInfo_Layout1BankCodeMap16);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroFilingInfo_Layout1BankCodeFieldDataValue15 = DBS06ReportUtil.retrieveFieldDataForElement(field.getBankCode(), zeroFilingInfo_Layout1BankCodeMap16, "", "", "xs:date($refPeriodEndDate)");
    
                                    if(zeroFilingInfo_Layout1BankCodeFieldDataValue15 != null ) {
                                        if(!zeroFilingInfo_Layout1BankCodeFieldDataValue15.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroFilingInfo_Layout1BankCodeFieldDataValue15.getStartDateValue();
                                        if(!zeroFilingInfo_Layout1BankCodeFieldDataValue15.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroFilingInfo_Layout1BankCodeFieldDataValue15.getEndDateValue();
                                        if(!zeroFilingInfo_Layout1BankCodeFieldDataValue15.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroFilingInfo_Layout1BankCodeFieldDataValue15.getInstantDateValue();
                                    }

                                    
                                    Context FilingInfo_Layout1BankCodeContext13 = DBS06ReportContextUtil.createAsOfContext( bankCode, periodDate  );
                                        
                                    
                                
                                if(zeroFilingInfo_Layout1BankCodeValue14 != null && !"".equals(zeroFilingInfo_Layout1BankCodeValue14)) {
                                    
                                    addContext(FilingInfo_Layout1BankCodeContext13, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    StringItemType bankCodeValue17 = new StringItemType();
                                    bankCodeValue17.setContextRef(FilingInfo_Layout1BankCodeContext13);
                                    
                                    bankCodeValue17.setValue(zeroFilingInfo_Layout1BankCodeValue14);        
                                    
                                    
                                    JAXBElement<StringItemType> bankCodeElement18 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createBankCode(bankCodeValue17);
                                    bodyElements.add(bankCodeElement18);
                                
                            }
                        
                            
                            // - NameOfReportingInstitution
                            
                                Map zeroFilingInfo_Layout1NameOfReportingInstitutionMap22 = new HashMap<String, String>();
                                
                                
                                
                                    
                                    String zeroFilingInfo_Layout1NameOfReportingInstitutionValue20 = DBS06ReportUtil.retrieveValueForElement(field.getNameOfReportingInstitution(), zeroFilingInfo_Layout1NameOfReportingInstitutionMap22);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroFilingInfo_Layout1NameOfReportingInstitutionFieldDataValue21 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNameOfReportingInstitution(), zeroFilingInfo_Layout1NameOfReportingInstitutionMap22, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
    
                                    if(zeroFilingInfo_Layout1NameOfReportingInstitutionFieldDataValue21 != null ) {
                                        if(!zeroFilingInfo_Layout1NameOfReportingInstitutionFieldDataValue21.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroFilingInfo_Layout1NameOfReportingInstitutionFieldDataValue21.getStartDateValue();
                                        if(!zeroFilingInfo_Layout1NameOfReportingInstitutionFieldDataValue21.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroFilingInfo_Layout1NameOfReportingInstitutionFieldDataValue21.getEndDateValue();
                                        if(!zeroFilingInfo_Layout1NameOfReportingInstitutionFieldDataValue21.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroFilingInfo_Layout1NameOfReportingInstitutionFieldDataValue21.getInstantDateValue();
                                    }

                                    
                                        Context FilingInfo_Layout1NameOfReportingInstitutionContext19 = DBS06ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                
                                if(zeroFilingInfo_Layout1NameOfReportingInstitutionValue20 != null && !"".equals(zeroFilingInfo_Layout1NameOfReportingInstitutionValue20)) {
                                    
                                    addContext(FilingInfo_Layout1NameOfReportingInstitutionContext19, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    StringItemType nameOfReportingInstitutionValue23 = new StringItemType();
                                    nameOfReportingInstitutionValue23.setContextRef(FilingInfo_Layout1NameOfReportingInstitutionContext19);
                                    
                                    nameOfReportingInstitutionValue23.setValue(zeroFilingInfo_Layout1NameOfReportingInstitutionValue20);        
                                    
                                    
                                    JAXBElement<StringItemType> nameOfReportingInstitutionElement24 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNameOfReportingInstitution(nameOfReportingInstitutionValue23);
                                    bodyElements.add(nameOfReportingInstitutionElement24);
                                
                            }
                        
                            
                            // - InstitutionType
                            
                                Map zeroFilingInfo_Layout1InstitutionTypeMap28 = new HashMap<String, String>();
                                
                                
                                
                                    
                                    String zeroFilingInfo_Layout1InstitutionTypeValue26 = DBS06ReportUtil.retrieveValueForElement(field.getInstitutionType(), zeroFilingInfo_Layout1InstitutionTypeMap28);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroFilingInfo_Layout1InstitutionTypeFieldDataValue27 = DBS06ReportUtil.retrieveFieldDataForElement(field.getInstitutionType(), zeroFilingInfo_Layout1InstitutionTypeMap28, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
    
                                    if(zeroFilingInfo_Layout1InstitutionTypeFieldDataValue27 != null ) {
                                        if(!zeroFilingInfo_Layout1InstitutionTypeFieldDataValue27.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroFilingInfo_Layout1InstitutionTypeFieldDataValue27.getStartDateValue();
                                        if(!zeroFilingInfo_Layout1InstitutionTypeFieldDataValue27.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroFilingInfo_Layout1InstitutionTypeFieldDataValue27.getEndDateValue();
                                        if(!zeroFilingInfo_Layout1InstitutionTypeFieldDataValue27.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroFilingInfo_Layout1InstitutionTypeFieldDataValue27.getInstantDateValue();
                                    }

                                    
                                        Context FilingInfo_Layout1InstitutionTypeContext25 = DBS06ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                
                                if(zeroFilingInfo_Layout1InstitutionTypeValue26 != null && !"".equals(zeroFilingInfo_Layout1InstitutionTypeValue26)) {
                                    
                                    addContext(FilingInfo_Layout1InstitutionTypeContext25, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    StringItemType institutionTypeValue29 = new StringItemType();
                                    institutionTypeValue29.setContextRef(FilingInfo_Layout1InstitutionTypeContext25);
                                    
                                    institutionTypeValue29.setValue(zeroFilingInfo_Layout1InstitutionTypeValue26);        
                                    
                                    
                                    JAXBElement<StringItemType> institutionTypeElement30 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createInstitutionType(institutionTypeValue29);
                                    bodyElements.add(institutionTypeElement30);
                                
                            }
                        
                            
                            // - ReportingFrequency
                            
                                Map zeroFilingInfo_Layout1ReportingFrequencyMap34 = new HashMap<String, String>();
                                
                                
                                
                                    
                                    String zeroFilingInfo_Layout1ReportingFrequencyValue32 = DBS06ReportUtil.retrieveValueForElement(field.getReportingFrequency(), zeroFilingInfo_Layout1ReportingFrequencyMap34);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroFilingInfo_Layout1ReportingFrequencyFieldDataValue33 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReportingFrequency(), zeroFilingInfo_Layout1ReportingFrequencyMap34, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
    
                                    if(zeroFilingInfo_Layout1ReportingFrequencyFieldDataValue33 != null ) {
                                        if(!zeroFilingInfo_Layout1ReportingFrequencyFieldDataValue33.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroFilingInfo_Layout1ReportingFrequencyFieldDataValue33.getStartDateValue();
                                        if(!zeroFilingInfo_Layout1ReportingFrequencyFieldDataValue33.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroFilingInfo_Layout1ReportingFrequencyFieldDataValue33.getEndDateValue();
                                        if(!zeroFilingInfo_Layout1ReportingFrequencyFieldDataValue33.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroFilingInfo_Layout1ReportingFrequencyFieldDataValue33.getInstantDateValue();
                                    }

                                    
                                        Context FilingInfo_Layout1ReportingFrequencyContext31 = DBS06ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                
                                if(zeroFilingInfo_Layout1ReportingFrequencyValue32 != null && !"".equals(zeroFilingInfo_Layout1ReportingFrequencyValue32)) {
                                    
                                    addContext(FilingInfo_Layout1ReportingFrequencyContext31, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    StringItemType reportingFrequencyValue35 = new StringItemType();
                                    reportingFrequencyValue35.setContextRef(FilingInfo_Layout1ReportingFrequencyContext31);
                                    
                                    reportingFrequencyValue35.setValue(zeroFilingInfo_Layout1ReportingFrequencyValue32);        
                                    
                                    
                                    JAXBElement<StringItemType> reportingFrequencyElement36 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReportingFrequency(reportingFrequencyValue35);
                                    bodyElements.add(reportingFrequencyElement36);
                                
                            }
                        
                            
                            // - ReportingPeriodStartDate
                            
                                Map zeroFilingInfo_Layout1ReportingPeriodStartDateMap40 = new HashMap<String, String>();
                                
                                
                                
                                    
                                    String zeroFilingInfo_Layout1ReportingPeriodStartDateValue38 = DBS06ReportUtil.retrieveValueForElement(field.getReportingPeriodStartDate(), zeroFilingInfo_Layout1ReportingPeriodStartDateMap40);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroFilingInfo_Layout1ReportingPeriodStartDateFieldDataValue39 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReportingPeriodStartDate(), zeroFilingInfo_Layout1ReportingPeriodStartDateMap40, "", "", "xs:date($refPeriodEndDate)");
    
                                    if(zeroFilingInfo_Layout1ReportingPeriodStartDateFieldDataValue39 != null ) {
                                        if(!zeroFilingInfo_Layout1ReportingPeriodStartDateFieldDataValue39.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroFilingInfo_Layout1ReportingPeriodStartDateFieldDataValue39.getStartDateValue();
                                        if(!zeroFilingInfo_Layout1ReportingPeriodStartDateFieldDataValue39.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroFilingInfo_Layout1ReportingPeriodStartDateFieldDataValue39.getEndDateValue();
                                        if(!zeroFilingInfo_Layout1ReportingPeriodStartDateFieldDataValue39.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroFilingInfo_Layout1ReportingPeriodStartDateFieldDataValue39.getInstantDateValue();
                                    }

                                    
                                    Context FilingInfo_Layout1ReportingPeriodStartDateContext37 = DBS06ReportContextUtil.createAsOfContext( bankCode, periodDate  );
                                        
                                    
                                
                                if(zeroFilingInfo_Layout1ReportingPeriodStartDateValue38 != null && !"".equals(zeroFilingInfo_Layout1ReportingPeriodStartDateValue38)) {
                                    
                                    addContext(FilingInfo_Layout1ReportingPeriodStartDateContext37, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    DateItemType reportingPeriodStartDateValue41 = new DateItemType();
                                    reportingPeriodStartDateValue41.setContextRef(FilingInfo_Layout1ReportingPeriodStartDateContext37);
                                    
                                    reportingPeriodStartDateValue41.setValue(DBS06ReportContextUtil.toXMLGeo(zeroFilingInfo_Layout1ReportingPeriodStartDateValue38));
                                    
                                    
                                    JAXBElement<DateItemType> reportingPeriodStartDateElement42 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReportingPeriodStartDate(reportingPeriodStartDateValue41);
                                    bodyElements.add(reportingPeriodStartDateElement42);
                                
                            }
                        
                            
                            // - ReportingPeriodEndDate
                            
                                Map zeroFilingInfo_Layout1ReportingPeriodEndDateMap46 = new HashMap<String, String>();
                                
                                
                                
                                    
                                    String zeroFilingInfo_Layout1ReportingPeriodEndDateValue44 = DBS06ReportUtil.retrieveValueForElement(field.getReportingPeriodEndDate(), zeroFilingInfo_Layout1ReportingPeriodEndDateMap46);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroFilingInfo_Layout1ReportingPeriodEndDateFieldDataValue45 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReportingPeriodEndDate(), zeroFilingInfo_Layout1ReportingPeriodEndDateMap46, "", "", "xs:date($refPeriodEndDate)");
    
                                    if(zeroFilingInfo_Layout1ReportingPeriodEndDateFieldDataValue45 != null ) {
                                        if(!zeroFilingInfo_Layout1ReportingPeriodEndDateFieldDataValue45.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroFilingInfo_Layout1ReportingPeriodEndDateFieldDataValue45.getStartDateValue();
                                        if(!zeroFilingInfo_Layout1ReportingPeriodEndDateFieldDataValue45.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroFilingInfo_Layout1ReportingPeriodEndDateFieldDataValue45.getEndDateValue();
                                        if(!zeroFilingInfo_Layout1ReportingPeriodEndDateFieldDataValue45.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroFilingInfo_Layout1ReportingPeriodEndDateFieldDataValue45.getInstantDateValue();
                                    }

                                    
                                    Context FilingInfo_Layout1ReportingPeriodEndDateContext43 = DBS06ReportContextUtil.createAsOfContext( bankCode, periodDate  );
                                        
                                    
                                
                                if(zeroFilingInfo_Layout1ReportingPeriodEndDateValue44 != null && !"".equals(zeroFilingInfo_Layout1ReportingPeriodEndDateValue44)) {
                                    
                                    addContext(FilingInfo_Layout1ReportingPeriodEndDateContext43, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    DateItemType reportingPeriodEndDateValue47 = new DateItemType();
                                    reportingPeriodEndDateValue47.setContextRef(FilingInfo_Layout1ReportingPeriodEndDateContext43);
                                    
                                    reportingPeriodEndDateValue47.setValue(DBS06ReportContextUtil.toXMLGeo(zeroFilingInfo_Layout1ReportingPeriodEndDateValue44));
                                    
                                    
                                    JAXBElement<DateItemType> reportingPeriodEndDateElement48 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReportingPeriodEndDate(reportingPeriodEndDateValue47);
                                    bodyElements.add(reportingPeriodEndDateElement48);
                                
                            }
                        
                            
                            // - ReportingCurrency
                            
                                Map zeroFilingInfo_Layout1ReportingCurrencyMap52 = new HashMap<String, String>();
                                
                                
                                
                                    
                                    String zeroFilingInfo_Layout1ReportingCurrencyValue50 = DBS06ReportUtil.retrieveValueForElement(field.getReportingCurrency(), zeroFilingInfo_Layout1ReportingCurrencyMap52);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroFilingInfo_Layout1ReportingCurrencyFieldDataValue51 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReportingCurrency(), zeroFilingInfo_Layout1ReportingCurrencyMap52, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
    
                                    if(zeroFilingInfo_Layout1ReportingCurrencyFieldDataValue51 != null ) {
                                        if(!zeroFilingInfo_Layout1ReportingCurrencyFieldDataValue51.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroFilingInfo_Layout1ReportingCurrencyFieldDataValue51.getStartDateValue();
                                        if(!zeroFilingInfo_Layout1ReportingCurrencyFieldDataValue51.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroFilingInfo_Layout1ReportingCurrencyFieldDataValue51.getEndDateValue();
                                        if(!zeroFilingInfo_Layout1ReportingCurrencyFieldDataValue51.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroFilingInfo_Layout1ReportingCurrencyFieldDataValue51.getInstantDateValue();
                                    }

                                    
                                        Context FilingInfo_Layout1ReportingCurrencyContext49 = DBS06ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                
                                if(zeroFilingInfo_Layout1ReportingCurrencyValue50 != null && !"".equals(zeroFilingInfo_Layout1ReportingCurrencyValue50)) {
                                    
                                    addContext(FilingInfo_Layout1ReportingCurrencyContext49, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    StringItemType reportingCurrencyValue53 = new StringItemType();
                                    reportingCurrencyValue53.setContextRef(FilingInfo_Layout1ReportingCurrencyContext49);
                                    
                                    reportingCurrencyValue53.setValue(zeroFilingInfo_Layout1ReportingCurrencyValue50);        
                                    
                                    
                                    JAXBElement<StringItemType> reportingCurrencyElement54 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createReportingCurrency(reportingCurrencyValue53);
                                    bodyElements.add(reportingCurrencyElement54);
                                
                            }
                        
                            
                            // - ReportingScale
                            
                                Map zeroFilingInfo_Layout1ReportingScaleMap58 = new HashMap<String, String>();
                                
                                
                                
                                    
                                    String zeroFilingInfo_Layout1ReportingScaleValue56 = DBS06ReportUtil.retrieveValueForElement(field.getReportingScale(), zeroFilingInfo_Layout1ReportingScaleMap58);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroFilingInfo_Layout1ReportingScaleFieldDataValue57 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReportingScale(), zeroFilingInfo_Layout1ReportingScaleMap58, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
    
                                    if(zeroFilingInfo_Layout1ReportingScaleFieldDataValue57 != null ) {
                                        if(!zeroFilingInfo_Layout1ReportingScaleFieldDataValue57.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroFilingInfo_Layout1ReportingScaleFieldDataValue57.getStartDateValue();
                                        if(!zeroFilingInfo_Layout1ReportingScaleFieldDataValue57.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroFilingInfo_Layout1ReportingScaleFieldDataValue57.getEndDateValue();
                                        if(!zeroFilingInfo_Layout1ReportingScaleFieldDataValue57.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroFilingInfo_Layout1ReportingScaleFieldDataValue57.getInstantDateValue();
                                    }

                                    
                                        Context FilingInfo_Layout1ReportingScaleContext55 = DBS06ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                
                                if(zeroFilingInfo_Layout1ReportingScaleValue56 != null && !"".equals(zeroFilingInfo_Layout1ReportingScaleValue56)) {
                                    
                                    addContext(FilingInfo_Layout1ReportingScaleContext55, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    ReportingScale reportingScaleValue59 = new ReportingScale();
                                    reportingScaleValue59.setContextRef(FilingInfo_Layout1ReportingScaleContext55);
                                    
                                    reportingScaleValue59.setValue(zeroFilingInfo_Layout1ReportingScaleValue56);        
                                    
                                    
                                    JAXBElement<ReportingScale> reportingScaleElement60 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createReportingScale(reportingScaleValue59);
                                    bodyElements.add(reportingScaleElement60);
                                
                            }
                        
                            
                            // - TaxonomyVersion
                            
                                Map zeroFilingInfo_Layout1TaxonomyVersionMap64 = new HashMap<String, String>();
                                
                                
                                
                                    
                                    String zeroFilingInfo_Layout1TaxonomyVersionValue62 = DBS06ReportUtil.retrieveValueForElement(field.getTaxonomyVersion(), zeroFilingInfo_Layout1TaxonomyVersionMap64);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroFilingInfo_Layout1TaxonomyVersionFieldDataValue63 = DBS06ReportUtil.retrieveFieldDataForElement(field.getTaxonomyVersion(), zeroFilingInfo_Layout1TaxonomyVersionMap64, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
    
                                    if(zeroFilingInfo_Layout1TaxonomyVersionFieldDataValue63 != null ) {
                                        if(!zeroFilingInfo_Layout1TaxonomyVersionFieldDataValue63.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroFilingInfo_Layout1TaxonomyVersionFieldDataValue63.getStartDateValue();
                                        if(!zeroFilingInfo_Layout1TaxonomyVersionFieldDataValue63.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroFilingInfo_Layout1TaxonomyVersionFieldDataValue63.getEndDateValue();
                                        if(!zeroFilingInfo_Layout1TaxonomyVersionFieldDataValue63.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroFilingInfo_Layout1TaxonomyVersionFieldDataValue63.getInstantDateValue();
                                    }

                                    
                                        Context FilingInfo_Layout1TaxonomyVersionContext61 = DBS06ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                
                                if(zeroFilingInfo_Layout1TaxonomyVersionValue62 != null && !"".equals(zeroFilingInfo_Layout1TaxonomyVersionValue62)) {
                                    
                                    addContext(FilingInfo_Layout1TaxonomyVersionContext61, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    StringItemType taxonomyVersionValue65 = new StringItemType();
                                    taxonomyVersionValue65.setContextRef(FilingInfo_Layout1TaxonomyVersionContext61);
                                    
                                    taxonomyVersionValue65.setValue(zeroFilingInfo_Layout1TaxonomyVersionValue62);        
                                    
                                    
                                    JAXBElement<StringItemType> taxonomyVersionElement66 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createTaxonomyVersion(taxonomyVersionValue65);
                                    bodyElements.add(taxonomyVersionElement66);
                                
                            }
                        
                            
                            // - ToolName
                            
                                Map zeroFilingInfo_Layout1ToolNameMap70 = new HashMap<String, String>();
                                
                                
                                
                                    
                                    String zeroFilingInfo_Layout1ToolNameValue68 = DBS06ReportUtil.retrieveValueForElement(field.getToolName(), zeroFilingInfo_Layout1ToolNameMap70);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroFilingInfo_Layout1ToolNameFieldDataValue69 = DBS06ReportUtil.retrieveFieldDataForElement(field.getToolName(), zeroFilingInfo_Layout1ToolNameMap70, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
    
                                    if(zeroFilingInfo_Layout1ToolNameFieldDataValue69 != null ) {
                                        if(!zeroFilingInfo_Layout1ToolNameFieldDataValue69.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroFilingInfo_Layout1ToolNameFieldDataValue69.getStartDateValue();
                                        if(!zeroFilingInfo_Layout1ToolNameFieldDataValue69.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroFilingInfo_Layout1ToolNameFieldDataValue69.getEndDateValue();
                                        if(!zeroFilingInfo_Layout1ToolNameFieldDataValue69.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroFilingInfo_Layout1ToolNameFieldDataValue69.getInstantDateValue();
                                    }

                                    
                                        Context FilingInfo_Layout1ToolNameContext67 = DBS06ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                
                                if(zeroFilingInfo_Layout1ToolNameValue68 != null && !"".equals(zeroFilingInfo_Layout1ToolNameValue68)) {
                                    
                                    addContext(FilingInfo_Layout1ToolNameContext67, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    StringItemType toolNameValue71 = new StringItemType();
                                    toolNameValue71.setContextRef(FilingInfo_Layout1ToolNameContext67);
                                    
                                    toolNameValue71.setValue(zeroFilingInfo_Layout1ToolNameValue68);        
                                    
                                    
                                    JAXBElement<StringItemType> toolNameElement72 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createToolName(toolNameValue71);
                                    bodyElements.add(toolNameElement72);
                                
                            }
                        
                            
                            // - ToolVersion
                            
                                Map zeroFilingInfo_Layout1ToolVersionMap76 = new HashMap<String, String>();
                                
                                
                                
                                    
                                    String zeroFilingInfo_Layout1ToolVersionValue74 = DBS06ReportUtil.retrieveValueForElement(field.getToolVersion(), zeroFilingInfo_Layout1ToolVersionMap76);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroFilingInfo_Layout1ToolVersionFieldDataValue75 = DBS06ReportUtil.retrieveFieldDataForElement(field.getToolVersion(), zeroFilingInfo_Layout1ToolVersionMap76, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
    
                                    if(zeroFilingInfo_Layout1ToolVersionFieldDataValue75 != null ) {
                                        if(!zeroFilingInfo_Layout1ToolVersionFieldDataValue75.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroFilingInfo_Layout1ToolVersionFieldDataValue75.getStartDateValue();
                                        if(!zeroFilingInfo_Layout1ToolVersionFieldDataValue75.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroFilingInfo_Layout1ToolVersionFieldDataValue75.getEndDateValue();
                                        if(!zeroFilingInfo_Layout1ToolVersionFieldDataValue75.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroFilingInfo_Layout1ToolVersionFieldDataValue75.getInstantDateValue();
                                    }

                                    
                                        Context FilingInfo_Layout1ToolVersionContext73 = DBS06ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                
                                if(zeroFilingInfo_Layout1ToolVersionValue74 != null && !"".equals(zeroFilingInfo_Layout1ToolVersionValue74)) {
                                    
                                    addContext(FilingInfo_Layout1ToolVersionContext73, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    StringItemType toolVersionValue77 = new StringItemType();
                                    toolVersionValue77.setContextRef(FilingInfo_Layout1ToolVersionContext73);
                                    
                                    toolVersionValue77.setValue(zeroFilingInfo_Layout1ToolVersionValue74);        
                                    
                                    
                                    JAXBElement<StringItemType> toolVersionElement78 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createToolVersion(toolVersionValue77);
                                    bodyElements.add(toolVersionElement78);
                                
                            }
                        
                            
                            // - ReportStatus
                            
                                Map zeroFilingInfo_Layout1ReportStatusMap82 = new HashMap<String, String>();
                                
                                
                                
                                    
                                    String zeroFilingInfo_Layout1ReportStatusValue80 = DBS06ReportUtil.retrieveValueForElement(field.getReportStatus(), zeroFilingInfo_Layout1ReportStatusMap82);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroFilingInfo_Layout1ReportStatusFieldDataValue81 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReportStatus(), zeroFilingInfo_Layout1ReportStatusMap82, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
    
                                    if(zeroFilingInfo_Layout1ReportStatusFieldDataValue81 != null ) {
                                        if(!zeroFilingInfo_Layout1ReportStatusFieldDataValue81.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroFilingInfo_Layout1ReportStatusFieldDataValue81.getStartDateValue();
                                        if(!zeroFilingInfo_Layout1ReportStatusFieldDataValue81.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroFilingInfo_Layout1ReportStatusFieldDataValue81.getEndDateValue();
                                        if(!zeroFilingInfo_Layout1ReportStatusFieldDataValue81.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroFilingInfo_Layout1ReportStatusFieldDataValue81.getInstantDateValue();
                                    }

                                    
                                        Context FilingInfo_Layout1ReportStatusContext79 = DBS06ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                
                                if(zeroFilingInfo_Layout1ReportStatusValue80 != null && !"".equals(zeroFilingInfo_Layout1ReportStatusValue80)) {
                                    
                                    addContext(FilingInfo_Layout1ReportStatusContext79, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    ReportStatusItemType reportStatusValue83 = new ReportStatusItemType();
                                    reportStatusValue83.setContextRef(FilingInfo_Layout1ReportStatusContext79);
                                    
                                    reportStatusValue83.setValue(zeroFilingInfo_Layout1ReportStatusValue80);        
                                    
                                    
                                    JAXBElement<ReportStatusItemType> reportStatusElement84 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReportStatus(reportStatusValue83);
                                    bodyElements.add(reportStatusElement84);
                                
                            }
                        
                            
                            // - DateOfAudit
                            
                                Map zeroFilingInfo_Layout1DateOfAuditMap88 = new HashMap<String, String>();
                                
                                
                                
                                    
                                    String zeroFilingInfo_Layout1DateOfAuditValue86 = DBS06ReportUtil.retrieveValueForElement(field.getDateOfAudit(), zeroFilingInfo_Layout1DateOfAuditMap88);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroFilingInfo_Layout1DateOfAuditFieldDataValue87 = DBS06ReportUtil.retrieveFieldDataForElement(field.getDateOfAudit(), zeroFilingInfo_Layout1DateOfAuditMap88, "", "", "xs:date($refPeriodEndDate)");
    
                                    if(zeroFilingInfo_Layout1DateOfAuditFieldDataValue87 != null ) {
                                        if(!zeroFilingInfo_Layout1DateOfAuditFieldDataValue87.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroFilingInfo_Layout1DateOfAuditFieldDataValue87.getStartDateValue();
                                        if(!zeroFilingInfo_Layout1DateOfAuditFieldDataValue87.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroFilingInfo_Layout1DateOfAuditFieldDataValue87.getEndDateValue();
                                        if(!zeroFilingInfo_Layout1DateOfAuditFieldDataValue87.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroFilingInfo_Layout1DateOfAuditFieldDataValue87.getInstantDateValue();
                                    }

                                    
                                    Context FilingInfo_Layout1DateOfAuditContext85 = DBS06ReportContextUtil.createAsOfContext( bankCode, periodDate  );
                                        
                                    
                                
                                if(zeroFilingInfo_Layout1DateOfAuditValue86 != null && !"".equals(zeroFilingInfo_Layout1DateOfAuditValue86)) {
                                    
                                    addContext(FilingInfo_Layout1DateOfAuditContext85, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    DateItemType dateOfAuditValue89 = new DateItemType();
                                    dateOfAuditValue89.setContextRef(FilingInfo_Layout1DateOfAuditContext85);
                                    
                                    dateOfAuditValue89.setValue(DBS06ReportContextUtil.toXMLGeo(zeroFilingInfo_Layout1DateOfAuditValue86));
                                    
                                    
                                    JAXBElement<DateItemType> dateOfAuditElement90 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createDateOfAudit(dateOfAuditValue89);
                                    bodyElements.add(dateOfAuditElement90);
                                
                            }
                        
                            
                            // - GeneralRemarks
                            
                                Map zeroFilingInfo_Layout1GeneralRemarksMap94 = new HashMap<String, String>();
                                
                                
                                
                                    
                                    String zeroFilingInfo_Layout1GeneralRemarksValue92 = DBS06ReportUtil.retrieveValueForElement(field.getGeneralRemarks(), zeroFilingInfo_Layout1GeneralRemarksMap94);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroFilingInfo_Layout1GeneralRemarksFieldDataValue93 = DBS06ReportUtil.retrieveFieldDataForElement(field.getGeneralRemarks(), zeroFilingInfo_Layout1GeneralRemarksMap94, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
    
                                    if(zeroFilingInfo_Layout1GeneralRemarksFieldDataValue93 != null ) {
                                        if(!zeroFilingInfo_Layout1GeneralRemarksFieldDataValue93.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroFilingInfo_Layout1GeneralRemarksFieldDataValue93.getStartDateValue();
                                        if(!zeroFilingInfo_Layout1GeneralRemarksFieldDataValue93.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroFilingInfo_Layout1GeneralRemarksFieldDataValue93.getEndDateValue();
                                        if(!zeroFilingInfo_Layout1GeneralRemarksFieldDataValue93.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroFilingInfo_Layout1GeneralRemarksFieldDataValue93.getInstantDateValue();
                                    }

                                    
                                        Context FilingInfo_Layout1GeneralRemarksContext91 = DBS06ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                
                                if(zeroFilingInfo_Layout1GeneralRemarksValue92 != null && !"".equals(zeroFilingInfo_Layout1GeneralRemarksValue92)) {
                                    
                                    addContext(FilingInfo_Layout1GeneralRemarksContext91, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    TextBlockItemType generalRemarksValue95 = new TextBlockItemType();
                                    generalRemarksValue95.setContextRef(FilingInfo_Layout1GeneralRemarksContext91);
                                    
                                    generalRemarksValue95.setValue(zeroFilingInfo_Layout1GeneralRemarksValue92);        
                                    
                                    
                                    JAXBElement<TextBlockItemType> generalRemarksElement96 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createGeneralRemarks(generalRemarksValue95);
                                    bodyElements.add(generalRemarksElement96);
                                
                            }
                        
                        
                    
                    
            
                    
                    
                    
                    return "";
                    }

                
                    
                
                // if typemembers exist
                
                
                
                // create variable for subclass FilingInfo_Layout2 if any typeMembers then List or Single
                //FilingInfo_Layout2 filingInfo_Layout2 = mainReportData.getFilingInfo_Layout2();
                
                    private String filingInfo_Layout2Method(FilingInfo_Layout2 filingInfo_Layout2, List<String> contextIdentifiers,  List<Context> contextElements, List<Object> bodyElements, List<String> unitIdentifiers, List<Unit> unitElements, String bankCode, String startDateDefault, String endDateDefault, String periodDateDefault)
                
                    {
                        String startDate = startDateDefault;
                        String endDate = endDateDefault;
                        String periodDate = periodDateDefault;
                    FilingInfo_Layout2 field = filingInfo_Layout2;
                    
                    
                        
                        
                            
                            // - WhetherBankHasSubsidiaries
                            
                                Map zeroFilingInfo_Layout2WhetherBankHasSubsidiariesMap100 = new HashMap<String, String>();
                                
                                
                                
                                    
                                    String zeroFilingInfo_Layout2WhetherBankHasSubsidiariesValue98 = DBS06ReportUtil.retrieveValueForElement(field.getWhetherBankHasSubsidiaries(), zeroFilingInfo_Layout2WhetherBankHasSubsidiariesMap100);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroFilingInfo_Layout2WhetherBankHasSubsidiariesFieldDataValue99 = DBS06ReportUtil.retrieveFieldDataForElement(field.getWhetherBankHasSubsidiaries(), zeroFilingInfo_Layout2WhetherBankHasSubsidiariesMap100, "", "", "xs:date($refPeriodEndDate)");
    
                                    if(zeroFilingInfo_Layout2WhetherBankHasSubsidiariesFieldDataValue99 != null ) {
                                        if(!zeroFilingInfo_Layout2WhetherBankHasSubsidiariesFieldDataValue99.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroFilingInfo_Layout2WhetherBankHasSubsidiariesFieldDataValue99.getStartDateValue();
                                        if(!zeroFilingInfo_Layout2WhetherBankHasSubsidiariesFieldDataValue99.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroFilingInfo_Layout2WhetherBankHasSubsidiariesFieldDataValue99.getEndDateValue();
                                        if(!zeroFilingInfo_Layout2WhetherBankHasSubsidiariesFieldDataValue99.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroFilingInfo_Layout2WhetherBankHasSubsidiariesFieldDataValue99.getInstantDateValue();
                                    }

                                    
                                    Context FilingInfo_Layout2WhetherBankHasSubsidiariesContext97 = DBS06ReportContextUtil.createAsOfContext( bankCode, periodDate  );
                                        
                                    
                                
                                if(zeroFilingInfo_Layout2WhetherBankHasSubsidiariesValue98 != null && !"".equals(zeroFilingInfo_Layout2WhetherBankHasSubsidiariesValue98)) {
                                    
                                    addContext(FilingInfo_Layout2WhetherBankHasSubsidiariesContext97, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    BooleanItemType whetherBankHasSubsidiariesValue101 = new BooleanItemType();
                                    whetherBankHasSubsidiariesValue101.setContextRef(FilingInfo_Layout2WhetherBankHasSubsidiariesContext97);
                                    
                                        whetherBankHasSubsidiariesValue101.setValue(Boolean.getBoolean(zeroFilingInfo_Layout2WhetherBankHasSubsidiariesValue98));
                                    
                                    
                                    JAXBElement<BooleanItemType> whetherBankHasSubsidiariesElement102 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createWhetherBankHasSubsidiaries(whetherBankHasSubsidiariesValue101);
                                    bodyElements.add(whetherBankHasSubsidiariesElement102);
                                
                            }
                        
                        
                    
                    
            
                    
                    
                    
                    return "";
                    }

                
                    
                
                // if typemembers exist
                
                
                
                // create variable for subclass DBSLeverageRatioSolo_Layout1 if any typeMembers then List or Single
                //DBSLeverageRatioSolo_Layout1 dBSLeverageRatioSolo_Layout1 = mainReportData.getDBSLeverageRatioSolo_Layout1();
                
                    private String dBSLeverageRatioSolo_Layout1Method(DBSLeverageRatioSolo_Layout1 dBSLeverageRatioSolo_Layout1, List<String> contextIdentifiers,  List<Context> contextElements, List<Object> bodyElements, List<String> unitIdentifiers, List<Unit> unitElements, String bankCode, String startDateDefault, String endDateDefault, String periodDateDefault)
                
                    {
                        String startDate = startDateDefault;
                        String endDate = endDateDefault;
                        String periodDate = periodDateDefault;
                    DBSLeverageRatioSolo_Layout1 field = dBSLeverageRatioSolo_Layout1;
                    
                    
                    
            
                    
                    
                        
                            
                            
                                
                                Unit INR103 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR103 = createUnitIfNotExist(INR103, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:LeverageRatioExposureAxis - ExposureAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap105 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap105.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:DomesticSovereignsMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap105.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisDomesticSovereignsMemberValue106 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap105);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisDomesticSovereignsMemberFieldDataValue107 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap105, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisDomesticSovereignsMemberFieldDataValue107 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisDomesticSovereignsMemberFieldDataValue107.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisDomesticSovereignsMemberFieldDataValue107.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisDomesticSovereignsMemberFieldDataValue107.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisDomesticSovereignsMemberFieldDataValue107.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisDomesticSovereignsMemberFieldDataValue107.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisDomesticSovereignsMemberFieldDataValue107.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisDomesticSovereignsMemberValue106 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisDomesticSovereignsMemberValue106)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext104 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap105 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext104, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisDomesticSovereignsMemberDataType109 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisDomesticSovereignsMemberDataType109.setContextRef(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext104);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisDomesticSovereignsMemberDataType109.setUnitRef(INR103);
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisDomesticSovereignsMemberDataType109.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisDomesticSovereignsMemberDataType109.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisDomesticSovereignsMemberValue106));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisDomesticSovereignsMemberElement108 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisDomesticSovereignsMemberDataType109);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisDomesticSovereignsMemberElement108);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                        
                    
                        
                            
                            
                                
                                Unit INR110 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR110 = createUnitIfNotExist(INR110, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:LeverageRatioExposureAxis - ExposureAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap112 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap112.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:ForeignSovereignsMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap112.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignSovereignsMemberValue113 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap112);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignSovereignsMemberFieldDataValue114 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap112, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignSovereignsMemberFieldDataValue114 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignSovereignsMemberFieldDataValue114.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignSovereignsMemberFieldDataValue114.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignSovereignsMemberFieldDataValue114.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignSovereignsMemberFieldDataValue114.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignSovereignsMemberFieldDataValue114.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignSovereignsMemberFieldDataValue114.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignSovereignsMemberValue113 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignSovereignsMemberValue113)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext111 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap112 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext111, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignSovereignsMemberDataType116 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignSovereignsMemberDataType116.setContextRef(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext111);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignSovereignsMemberDataType116.setUnitRef(INR110);
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignSovereignsMemberDataType116.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignSovereignsMemberDataType116.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignSovereignsMemberValue113));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignSovereignsMemberElement115 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignSovereignsMemberDataType116);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignSovereignsMemberElement115);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                        
                    
                        
                            
                            
                                
                                Unit INR117 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR117 = createUnitIfNotExist(INR117, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:LeverageRatioExposureAxis - ExposureAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap119 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap119.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:BanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap119.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberValue120 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap119);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberFieldDataValue121 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap119, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberFieldDataValue121 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberFieldDataValue121.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberFieldDataValue121.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberFieldDataValue121.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberFieldDataValue121.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberFieldDataValue121.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberFieldDataValue121.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberValue120 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberValue120)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext118 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap119 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext118, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberDataType123 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberDataType123.setContextRef(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext118);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberDataType123.setUnitRef(INR117);
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberDataType123.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberDataType123.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberValue120));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberElement122 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberDataType123);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberElement122);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                        
                    
                        
                            
                            
                                
                                Unit INR124 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR124 = createUnitIfNotExist(INR124, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:LeverageRatioExposureAxis - ExposureAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap126 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap126.put("rbi-core:LeverageRatioExposureAxis", "in-rbi-rep:ForeignBanksMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap126.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignBanksMemberValue127 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap126);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignBanksMemberFieldDataValue128 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap126, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignBanksMemberFieldDataValue128 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignBanksMemberFieldDataValue128.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignBanksMemberFieldDataValue128.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignBanksMemberFieldDataValue128.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignBanksMemberFieldDataValue128.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignBanksMemberFieldDataValue128.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignBanksMemberFieldDataValue128.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignBanksMemberValue127 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignBanksMemberValue127)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext125 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap126 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext125, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignBanksMemberDataType130 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignBanksMemberDataType130.setContextRef(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext125);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignBanksMemberDataType130.setUnitRef(INR124);
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignBanksMemberDataType130.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignBanksMemberDataType130.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignBanksMemberValue127));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignBanksMemberElement129 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignBanksMemberDataType130);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignBanksMemberElement129);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                        
                    
                        
                            
                            
                                
                                Unit INR131 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR131 = createUnitIfNotExist(INR131, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:LeverageRatioExposureAxis - ExposureAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap133 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap133.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:DomesticPublicSectorEntitiesMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap133.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisDomesticPublicSectorEntitiesMemberValue134 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap133);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisDomesticPublicSectorEntitiesMemberFieldDataValue135 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap133, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisDomesticPublicSectorEntitiesMemberFieldDataValue135 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisDomesticPublicSectorEntitiesMemberFieldDataValue135.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisDomesticPublicSectorEntitiesMemberFieldDataValue135.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisDomesticPublicSectorEntitiesMemberFieldDataValue135.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisDomesticPublicSectorEntitiesMemberFieldDataValue135.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisDomesticPublicSectorEntitiesMemberFieldDataValue135.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisDomesticPublicSectorEntitiesMemberFieldDataValue135.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisDomesticPublicSectorEntitiesMemberValue134 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisDomesticPublicSectorEntitiesMemberValue134)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext132 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap133 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext132, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisDomesticPublicSectorEntitiesMemberDataType137 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisDomesticPublicSectorEntitiesMemberDataType137.setContextRef(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext132);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisDomesticPublicSectorEntitiesMemberDataType137.setUnitRef(INR131);
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisDomesticPublicSectorEntitiesMemberDataType137.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisDomesticPublicSectorEntitiesMemberDataType137.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisDomesticPublicSectorEntitiesMemberValue134));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisDomesticPublicSectorEntitiesMemberElement136 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisDomesticPublicSectorEntitiesMemberDataType137);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisDomesticPublicSectorEntitiesMemberElement136);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                        
                    
                        
                            
                            
                                
                                Unit INR138 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR138 = createUnitIfNotExist(INR138, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:LeverageRatioExposureAxis - ExposureAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap140 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap140.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:ForeignPublicSectorEntitiesMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap140.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignPublicSectorEntitiesMemberValue141 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap140);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignPublicSectorEntitiesMemberFieldDataValue142 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap140, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignPublicSectorEntitiesMemberFieldDataValue142 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignPublicSectorEntitiesMemberFieldDataValue142.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignPublicSectorEntitiesMemberFieldDataValue142.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignPublicSectorEntitiesMemberFieldDataValue142.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignPublicSectorEntitiesMemberFieldDataValue142.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignPublicSectorEntitiesMemberFieldDataValue142.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignPublicSectorEntitiesMemberFieldDataValue142.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignPublicSectorEntitiesMemberValue141 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignPublicSectorEntitiesMemberValue141)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext139 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap140 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext139, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignPublicSectorEntitiesMemberDataType144 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignPublicSectorEntitiesMemberDataType144.setContextRef(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext139);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignPublicSectorEntitiesMemberDataType144.setUnitRef(INR138);
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignPublicSectorEntitiesMemberDataType144.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignPublicSectorEntitiesMemberDataType144.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignPublicSectorEntitiesMemberValue141));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignPublicSectorEntitiesMemberElement143 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignPublicSectorEntitiesMemberDataType144);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignPublicSectorEntitiesMemberElement143);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                        
                    
                        
                            
                            
                                
                                Unit INR145 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR145 = createUnitIfNotExist(INR145, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:LeverageRatioExposureAxis - ExposureAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap147 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap147.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:PrimaryDealersMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap147.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisPrimaryDealersMemberValue148 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap147);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisPrimaryDealersMemberFieldDataValue149 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap147, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisPrimaryDealersMemberFieldDataValue149 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisPrimaryDealersMemberFieldDataValue149.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisPrimaryDealersMemberFieldDataValue149.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisPrimaryDealersMemberFieldDataValue149.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisPrimaryDealersMemberFieldDataValue149.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisPrimaryDealersMemberFieldDataValue149.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisPrimaryDealersMemberFieldDataValue149.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisPrimaryDealersMemberValue148 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisPrimaryDealersMemberValue148)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext146 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap147 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext146, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisPrimaryDealersMemberDataType151 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisPrimaryDealersMemberDataType151.setContextRef(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext146);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisPrimaryDealersMemberDataType151.setUnitRef(INR145);
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisPrimaryDealersMemberDataType151.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisPrimaryDealersMemberDataType151.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisPrimaryDealersMemberValue148));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisPrimaryDealersMemberElement150 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisPrimaryDealersMemberDataType151);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisPrimaryDealersMemberElement150);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                        
                    
                        
                            
                            
                                
                                Unit INR152 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR152 = createUnitIfNotExist(INR152, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:LeverageRatioExposureAxis - ExposureAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap154 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap154.put("rbi-core:LeverageRatioExposureAxis", "in-rbi-rep:CorporateMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap154.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisCorporateMemberValue155 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap154);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisCorporateMemberFieldDataValue156 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap154, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisCorporateMemberFieldDataValue156 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisCorporateMemberFieldDataValue156.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisCorporateMemberFieldDataValue156.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisCorporateMemberFieldDataValue156.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisCorporateMemberFieldDataValue156.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisCorporateMemberFieldDataValue156.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisCorporateMemberFieldDataValue156.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisCorporateMemberValue155 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisCorporateMemberValue155)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext153 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap154 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext153, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisCorporateMemberDataType158 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisCorporateMemberDataType158.setContextRef(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext153);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisCorporateMemberDataType158.setUnitRef(INR152);
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisCorporateMemberDataType158.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisCorporateMemberDataType158.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisCorporateMemberValue155));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisCorporateMemberElement157 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisCorporateMemberDataType158);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisCorporateMemberElement157);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                        
                    
                        
                            
                            
                                
                                Unit INR159 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR159 = createUnitIfNotExist(INR159, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:LeverageRatioExposureAxis - ExposureAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap161 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap161.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:ExposureToCCPsMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap161.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToCCPsMemberValue162 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap161);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToCCPsMemberFieldDataValue163 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap161, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToCCPsMemberFieldDataValue163 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToCCPsMemberFieldDataValue163.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToCCPsMemberFieldDataValue163.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToCCPsMemberFieldDataValue163.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToCCPsMemberFieldDataValue163.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToCCPsMemberFieldDataValue163.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToCCPsMemberFieldDataValue163.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToCCPsMemberValue162 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToCCPsMemberValue162)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext160 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap161 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext160, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToCCPsMemberDataType165 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToCCPsMemberDataType165.setContextRef(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext160);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToCCPsMemberDataType165.setUnitRef(INR159);
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToCCPsMemberDataType165.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToCCPsMemberDataType165.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToCCPsMemberValue162));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToCCPsMemberElement164 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToCCPsMemberDataType165);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToCCPsMemberElement164);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                        
                    
                        
                            
                            
                                
                                Unit INR166 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR166 = createUnitIfNotExist(INR166, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:LeverageRatioExposureAxis - ExposureAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap168 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap168.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:ExposureToCapitalOfCCPsMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap168.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToCapitalOfCCPsMemberValue169 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap168);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToCapitalOfCCPsMemberFieldDataValue170 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap168, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToCapitalOfCCPsMemberFieldDataValue170 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToCapitalOfCCPsMemberFieldDataValue170.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToCapitalOfCCPsMemberFieldDataValue170.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToCapitalOfCCPsMemberFieldDataValue170.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToCapitalOfCCPsMemberFieldDataValue170.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToCapitalOfCCPsMemberFieldDataValue170.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToCapitalOfCCPsMemberFieldDataValue170.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToCapitalOfCCPsMemberValue169 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToCapitalOfCCPsMemberValue169)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext167 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap168 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext167, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToCapitalOfCCPsMemberDataType172 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToCapitalOfCCPsMemberDataType172.setContextRef(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext167);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToCapitalOfCCPsMemberDataType172.setUnitRef(INR166);
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToCapitalOfCCPsMemberDataType172.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToCapitalOfCCPsMemberDataType172.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToCapitalOfCCPsMemberValue169));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToCapitalOfCCPsMemberElement171 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToCapitalOfCCPsMemberDataType172);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToCapitalOfCCPsMemberElement171);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                        
                    
                        
                            
                            
                                
                                Unit INR173 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR173 = createUnitIfNotExist(INR173, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:LeverageRatioExposureAxis - ExposureAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap175 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap175.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:ExposureToDefaultFundContributionOfCCPsMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap175.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToDefaultFundContributionOfCCPsMemberValue176 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap175);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToDefaultFundContributionOfCCPsMemberFieldDataValue177 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap175, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToDefaultFundContributionOfCCPsMemberFieldDataValue177 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToDefaultFundContributionOfCCPsMemberFieldDataValue177.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToDefaultFundContributionOfCCPsMemberFieldDataValue177.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToDefaultFundContributionOfCCPsMemberFieldDataValue177.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToDefaultFundContributionOfCCPsMemberFieldDataValue177.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToDefaultFundContributionOfCCPsMemberFieldDataValue177.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToDefaultFundContributionOfCCPsMemberFieldDataValue177.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToDefaultFundContributionOfCCPsMemberValue176 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToDefaultFundContributionOfCCPsMemberValue176)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext174 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap175 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext174, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToDefaultFundContributionOfCCPsMemberDataType179 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToDefaultFundContributionOfCCPsMemberDataType179.setContextRef(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext174);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToDefaultFundContributionOfCCPsMemberDataType179.setUnitRef(INR173);
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToDefaultFundContributionOfCCPsMemberDataType179.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToDefaultFundContributionOfCCPsMemberDataType179.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToDefaultFundContributionOfCCPsMemberValue176));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToDefaultFundContributionOfCCPsMemberElement178 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToDefaultFundContributionOfCCPsMemberDataType179);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToDefaultFundContributionOfCCPsMemberElement178);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                        
                    
                        
                            
                            
                                
                                Unit INR180 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR180 = createUnitIfNotExist(INR180, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:LeverageRatioExposureAxis - ExposureAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap182 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap182.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:OtherExposureToCCPsMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap182.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisOtherExposureToCCPsMemberValue183 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap182);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisOtherExposureToCCPsMemberFieldDataValue184 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap182, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisOtherExposureToCCPsMemberFieldDataValue184 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisOtherExposureToCCPsMemberFieldDataValue184.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisOtherExposureToCCPsMemberFieldDataValue184.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisOtherExposureToCCPsMemberFieldDataValue184.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisOtherExposureToCCPsMemberFieldDataValue184.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisOtherExposureToCCPsMemberFieldDataValue184.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisOtherExposureToCCPsMemberFieldDataValue184.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisOtherExposureToCCPsMemberValue183 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisOtherExposureToCCPsMemberValue183)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext181 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap182 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext181, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisOtherExposureToCCPsMemberDataType186 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisOtherExposureToCCPsMemberDataType186.setContextRef(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext181);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisOtherExposureToCCPsMemberDataType186.setUnitRef(INR180);
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisOtherExposureToCCPsMemberDataType186.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisOtherExposureToCCPsMemberDataType186.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisOtherExposureToCCPsMemberValue183));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisOtherExposureToCCPsMemberElement185 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisOtherExposureToCCPsMemberDataType186);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisOtherExposureToCCPsMemberElement185);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                        
                    
                        
                            
                            
                                
                                Unit INR187 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR187 = createUnitIfNotExist(INR187, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:LeverageRatioExposureAxis - ExposureAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap189 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap189.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:AllOtherExposuresMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap189.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisAllOtherExposuresMemberValue190 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap189);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisAllOtherExposuresMemberFieldDataValue191 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap189, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisAllOtherExposuresMemberFieldDataValue191 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisAllOtherExposuresMemberFieldDataValue191.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisAllOtherExposuresMemberFieldDataValue191.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisAllOtherExposuresMemberFieldDataValue191.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisAllOtherExposuresMemberFieldDataValue191.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisAllOtherExposuresMemberFieldDataValue191.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisAllOtherExposuresMemberFieldDataValue191.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisAllOtherExposuresMemberValue190 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisAllOtherExposuresMemberValue190)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext188 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap189 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext188, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisAllOtherExposuresMemberDataType193 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisAllOtherExposuresMemberDataType193.setContextRef(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext188);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisAllOtherExposuresMemberDataType193.setUnitRef(INR187);
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisAllOtherExposuresMemberDataType193.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisAllOtherExposuresMemberDataType193.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisAllOtherExposuresMemberValue190));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisAllOtherExposuresMemberElement192 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisAllOtherExposuresMemberDataType193);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisAllOtherExposuresMemberElement192);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                        
                    
                        
                            
                            
                                
                                Unit INR194 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR194 = createUnitIfNotExist(INR194, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:LeverageRatioExposureAxis - ExposureAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap196 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap196.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:BalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap196.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberValue197 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap196);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberFieldDataValue198 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap196, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberFieldDataValue198 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberFieldDataValue198.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberFieldDataValue198.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberFieldDataValue198.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberFieldDataValue198.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberFieldDataValue198.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberFieldDataValue198.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberValue197 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberValue197)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext195 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap196 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext195, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberDataType200 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberDataType200.setContextRef(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext195);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberDataType200.setUnitRef(INR194);
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberDataType200.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberDataType200.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberValue197));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberElement199 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberDataType200);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberElement199);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                        
                    
                        
                            
                            
                                
                                Unit INR201 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR201 = createUnitIfNotExist(INR201, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:LeverageRatioExposureAxis - ExposureAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap203 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap203.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:FiduciaryAssetsMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap203.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisFiduciaryAssetsMemberValue204 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap203);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisFiduciaryAssetsMemberFieldDataValue205 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap203, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisFiduciaryAssetsMemberFieldDataValue205 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisFiduciaryAssetsMemberFieldDataValue205.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisFiduciaryAssetsMemberFieldDataValue205.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisFiduciaryAssetsMemberFieldDataValue205.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisFiduciaryAssetsMemberFieldDataValue205.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisFiduciaryAssetsMemberFieldDataValue205.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisFiduciaryAssetsMemberFieldDataValue205.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisFiduciaryAssetsMemberValue204 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisFiduciaryAssetsMemberValue204)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext202 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap203 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext202, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisFiduciaryAssetsMemberDataType207 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisFiduciaryAssetsMemberDataType207.setContextRef(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext202);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisFiduciaryAssetsMemberDataType207.setUnitRef(INR201);
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisFiduciaryAssetsMemberDataType207.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisFiduciaryAssetsMemberDataType207.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisFiduciaryAssetsMemberValue204));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisFiduciaryAssetsMemberElement206 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisFiduciaryAssetsMemberDataType207);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisFiduciaryAssetsMemberElement206);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                        
                    
                        
                            
                            
                                
                                Unit INR208 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR208 = createUnitIfNotExist(INR208, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:LeverageRatioExposureAxis - ExposureAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap210 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap210.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:OnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap210.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberValue211 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap210);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberFieldDataValue212 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap210, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberFieldDataValue212 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberFieldDataValue212.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberFieldDataValue212.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberFieldDataValue212.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberFieldDataValue212.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberFieldDataValue212.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberFieldDataValue212.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberValue211 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberValue211)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext209 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap210 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext209, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberDataType214 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberDataType214.setContextRef(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext209);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberDataType214.setUnitRef(INR208);
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberDataType214.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberDataType214.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberValue211));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberElement213 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberDataType214);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberElement213);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                        
                    
                    
                    return "";
                    }

                
                    
                
                // if typemembers exist
                
                
                
                // create variable for subclass DBSLeverageRatioSolo_Layout2 if any typeMembers then List or Single
                //DBSLeverageRatioSolo_Layout2 dBSLeverageRatioSolo_Layout2 = mainReportData.getDBSLeverageRatioSolo_Layout2();
                
                    private String dBSLeverageRatioSolo_Layout2Method(DBSLeverageRatioSolo_Layout2 dBSLeverageRatioSolo_Layout2, List<String> contextIdentifiers,  List<Context> contextElements, List<Object> bodyElements, List<String> unitIdentifiers, List<Unit> unitElements, String bankCode, String startDateDefault, String endDateDefault, String periodDateDefault)
                
                    {
                        String startDate = startDateDefault;
                        String endDate = endDateDefault;
                        String periodDate = periodDateDefault;
                    DBSLeverageRatioSolo_Layout2 field = dBSLeverageRatioSolo_Layout2;
                    
                    
                    
            
                    
                    
                        
                            
                            
                                
                                Unit pure215 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                                pure215 = createUnitIfNotExist(pure215, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - CreditConversionFactor
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap217 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap217.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap217.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue218 = DBS06ReportUtil.retrieveValueForElement(field.getCreditConversionFactor(), explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap217);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue219 = DBS06ReportUtil.retrieveFieldDataForElement(field.getCreditConversionFactor(), explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap217, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue219 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue219.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue219.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue219.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue219.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue219.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue219.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue218 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue218)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisContext216 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap217 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisContext216, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    PercentItemType explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType221 = new PercentItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType221.setContextRef(explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisContext216);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType221.setUnitRef(pure215);
                                        explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType221.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType221.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue218));
                                    
                                    
                                    JAXBElement<PercentItemType> explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement220 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createCreditConversionFactor(explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType221);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement220);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit pure222 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                                pure222 = createUnitIfNotExist(pure222, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - CreditConversionFactor
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap224 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap224.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap224.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue225 = DBS06ReportUtil.retrieveValueForElement(field.getCreditConversionFactor(), explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap224);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue226 = DBS06ReportUtil.retrieveFieldDataForElement(field.getCreditConversionFactor(), explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap224, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue226 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue226.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue226.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue226.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue226.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue226.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue226.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue225 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue225)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisContext223 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap224 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisContext223, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    PercentItemType explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType228 = new PercentItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType228.setContextRef(explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisContext223);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType228.setUnitRef(pure222);
                                        explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType228.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType228.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue225));
                                    
                                    
                                    JAXBElement<PercentItemType> explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement227 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createCreditConversionFactor(explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType228);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement227);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit pure229 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                                pure229 = createUnitIfNotExist(pure229, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - CreditConversionFactor
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap231 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap231.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap231.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue232 = DBS06ReportUtil.retrieveValueForElement(field.getCreditConversionFactor(), explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap231);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue233 = DBS06ReportUtil.retrieveFieldDataForElement(field.getCreditConversionFactor(), explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap231, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue233 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue233.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue233.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue233.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue233.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue233.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue233.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue232 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue232)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisContext230 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap231 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisContext230, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    PercentItemType explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType235 = new PercentItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType235.setContextRef(explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisContext230);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType235.setUnitRef(pure229);
                                        explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType235.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType235.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue232));
                                    
                                    
                                    JAXBElement<PercentItemType> explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement234 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createCreditConversionFactor(explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType235);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement234);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit pure236 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                                pure236 = createUnitIfNotExist(pure236, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - CreditConversionFactor
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap238 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap238.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap238.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue239 = DBS06ReportUtil.retrieveValueForElement(field.getCreditConversionFactor(), explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap238);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue240 = DBS06ReportUtil.retrieveFieldDataForElement(field.getCreditConversionFactor(), explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap238, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue240 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue240.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue240.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue240.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue240.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue240.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue240.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue239 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue239)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisContext237 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap238 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisContext237, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    PercentItemType explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType242 = new PercentItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType242.setContextRef(explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisContext237);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType242.setUnitRef(pure236);
                                        explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType242.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType242.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue239));
                                    
                                    
                                    JAXBElement<PercentItemType> explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement241 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createCreditConversionFactor(explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType242);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement241);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit pure243 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                                pure243 = createUnitIfNotExist(pure243, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - CreditConversionFactor
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap245 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap245.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap245.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue246 = DBS06ReportUtil.retrieveValueForElement(field.getCreditConversionFactor(), explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap245);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue247 = DBS06ReportUtil.retrieveFieldDataForElement(field.getCreditConversionFactor(), explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap245, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue247 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue247.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue247.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue247.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue247.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue247.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue247.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue246 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue246)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisContext244 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap245 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisContext244, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    PercentItemType explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType249 = new PercentItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType249.setContextRef(explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisContext244);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType249.setUnitRef(pure243);
                                        explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType249.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType249.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue246));
                                    
                                    
                                    JAXBElement<PercentItemType> explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement248 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createCreditConversionFactor(explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType249);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement248);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit pure250 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                                pure250 = createUnitIfNotExist(pure250, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - CreditConversionFactor
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap252 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap252.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap252.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue253 = DBS06ReportUtil.retrieveValueForElement(field.getCreditConversionFactor(), explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap252);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue254 = DBS06ReportUtil.retrieveFieldDataForElement(field.getCreditConversionFactor(), explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap252, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue254 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue254.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue254.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue254.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue254.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue254.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue254.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue253 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue253)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisContext251 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap252 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisContext251, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    PercentItemType explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType256 = new PercentItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType256.setContextRef(explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisContext251);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType256.setUnitRef(pure250);
                                        explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType256.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType256.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue253));
                                    
                                    
                                    JAXBElement<PercentItemType> explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement255 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createCreditConversionFactor(explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType256);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement255);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                        
                    
                    
                    return "";
                    }

                
                    
                
                // if typemembers exist
                
                
                
                // create variable for subclass DBSLeverageRatioSolo_Layout3 if any typeMembers then List or Single
                //DBSLeverageRatioSolo_Layout3 dBSLeverageRatioSolo_Layout3 = mainReportData.getDBSLeverageRatioSolo_Layout3();
                
                    private String dBSLeverageRatioSolo_Layout3Method(DBSLeverageRatioSolo_Layout3 dBSLeverageRatioSolo_Layout3, List<String> contextIdentifiers,  List<Context> contextElements, List<Object> bodyElements, List<String> unitIdentifiers, List<Unit> unitElements, String bankCode, String startDateDefault, String endDateDefault, String periodDateDefault)
                
                    {
                        String startDate = startDateDefault;
                        String endDate = endDateDefault;
                        String periodDate = periodDateDefault;
                    DBSLeverageRatioSolo_Layout3 field = dBSLeverageRatioSolo_Layout3;
                    
                    
                    
            
                    
                    
                        
                            
                            
                                
                                Unit INR257 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR257 = createUnitIfNotExist(INR257, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap259 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap259.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap259.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue260 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap259);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue261 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap259, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue261 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue261.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue261.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue261.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue261.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue261.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue261.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue260 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue260)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext258 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap259 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext258, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType263 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType263.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext258);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType263.setUnitRef(INR257);
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType263.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType263.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue260));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement262 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType263);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement262);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR264 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR264 = createUnitIfNotExist(INR264, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap266 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap266.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap266.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue267 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap266);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue268 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap266, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue268 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue268.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue268.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue268.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue268.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue268.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue268.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue267 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue267)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext265 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap266 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext265, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType270 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType270.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext265);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType270.setUnitRef(INR264);
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType270.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType270.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue267));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement269 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType270);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement269);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR271 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR271 = createUnitIfNotExist(INR271, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap273 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap273.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap273.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue274 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap273);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue275 = DBS06ReportUtil.retrieveFieldDataForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap273, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue275 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue275.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue275.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue275.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue275.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue275.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue275.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue274 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue274)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext272 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap273 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext272, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType277 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType277.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext272);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType277.setUnitRef(INR271);
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType277.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType277.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue274));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement276 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createPotentialFutureExposure(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType277);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement276);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR278 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR278 = createUnitIfNotExist(INR278, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap280 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap280.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap280.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue281 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap280);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue282 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap280, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue282 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue282.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue282.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue282.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue282.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue282.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue282.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue281 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue281)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext279 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap280 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext279, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType284 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType284.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext279);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType284.setUnitRef(INR278);
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType284.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType284.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue281));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement283 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType284);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement283);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR285 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR285 = createUnitIfNotExist(INR285, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap287 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap287.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap287.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue288 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap287);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue289 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap287, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue289 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue289.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue289.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue289.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue289.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue289.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue289.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue288 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue288)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext286 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap287 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext286, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType291 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType291.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext286);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType291.setUnitRef(INR285);
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType291.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType291.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue288));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement290 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType291);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement290);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR292 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR292 = createUnitIfNotExist(INR292, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap294 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap294.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap294.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue295 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap294);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue296 = DBS06ReportUtil.retrieveFieldDataForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap294, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue296 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue296.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue296.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue296.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue296.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue296.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue296.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue295 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue295)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext293 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap294 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext293, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType298 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType298.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext293);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType298.setUnitRef(INR292);
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType298.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType298.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue295));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement297 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createPotentialFutureExposure(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType298);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement297);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR299 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR299 = createUnitIfNotExist(INR299, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap301 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap301.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap301.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue302 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap301);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue303 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap301, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue303 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue303.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue303.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue303.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue303.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue303.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue303.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue302 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue302)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext300 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap301 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext300, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType305 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType305.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext300);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType305.setUnitRef(INR299);
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType305.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType305.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue302));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement304 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType305);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement304);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR306 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR306 = createUnitIfNotExist(INR306, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap308 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap308.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap308.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue309 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap308);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue310 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap308, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue310 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue310.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue310.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue310.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue310.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue310.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue310.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue309 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue309)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext307 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap308 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext307, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType312 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType312.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext307);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType312.setUnitRef(INR306);
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType312.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType312.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue309));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement311 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType312);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement311);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR313 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR313 = createUnitIfNotExist(INR313, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap315 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap315.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap315.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue316 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap315);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue317 = DBS06ReportUtil.retrieveFieldDataForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap315, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue317 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue317.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue317.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue317.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue317.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue317.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue317.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue316 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue316)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext314 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap315 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext314, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType319 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType319.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext314);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType319.setUnitRef(INR313);
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType319.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType319.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue316));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement318 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createPotentialFutureExposure(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType319);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement318);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR320 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR320 = createUnitIfNotExist(INR320, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap322 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap322.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap322.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue323 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap322);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue324 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap322, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue324 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue324.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue324.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue324.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue324.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue324.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue324.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue323 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue323)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext321 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap322 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext321, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType326 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType326.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext321);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType326.setUnitRef(INR320);
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType326.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType326.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue323));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement325 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType326);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement325);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR327 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR327 = createUnitIfNotExist(INR327, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap329 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap329.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap329.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue330 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap329);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue331 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap329, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue331 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue331.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue331.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue331.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue331.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue331.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue331.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue330 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue330)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext328 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap329 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext328, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType333 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType333.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext328);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType333.setUnitRef(INR327);
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType333.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType333.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue330));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement332 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType333);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement332);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR334 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR334 = createUnitIfNotExist(INR334, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap336 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap336.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap336.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue337 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap336);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue338 = DBS06ReportUtil.retrieveFieldDataForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap336, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue338 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue338.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue338.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue338.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue338.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue338.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue338.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue337 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue337)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext335 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap336 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext335, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType340 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType340.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext335);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType340.setUnitRef(INR334);
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType340.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType340.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue337));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement339 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createPotentialFutureExposure(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType340);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement339);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR341 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR341 = createUnitIfNotExist(INR341, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap343 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap343.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap343.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue344 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap343);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue345 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap343, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue345 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue345.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue345.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue345.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue345.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue345.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue345.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue344 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue344)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext342 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap343 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext342, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType347 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType347.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext342);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType347.setUnitRef(INR341);
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType347.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType347.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue344));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement346 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType347);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement346);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR348 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR348 = createUnitIfNotExist(INR348, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap350 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap350.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap350.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue351 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap350);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue352 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap350, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue352 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue352.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue352.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue352.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue352.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue352.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue352.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue351 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue351)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext349 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap350 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext349, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType354 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType354.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext349);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType354.setUnitRef(INR348);
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType354.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType354.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue351));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement353 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType354);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement353);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR355 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR355 = createUnitIfNotExist(INR355, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap357 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap357.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap357.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue358 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap357);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue359 = DBS06ReportUtil.retrieveFieldDataForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap357, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue359 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue359.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue359.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue359.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue359.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue359.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue359.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue358 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue358)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext356 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap357 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext356, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType361 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType361.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext356);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType361.setUnitRef(INR355);
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType361.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType361.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue358));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement360 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createPotentialFutureExposure(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType361);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement360);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR362 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR362 = createUnitIfNotExist(INR362, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap364 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap364.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap364.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue365 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap364);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue366 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap364, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue366 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue366.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue366.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue366.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue366.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue366.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue366.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue365 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue365)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext363 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap364 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext363, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType368 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType368.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext363);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType368.setUnitRef(INR362);
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType368.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType368.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue365));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement367 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType368);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement367);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR369 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR369 = createUnitIfNotExist(INR369, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap371 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap371.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap371.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue372 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap371);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue373 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap371, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue373 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue373.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue373.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue373.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue373.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue373.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue373.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue372 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue372)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext370 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap371 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext370, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType375 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType375.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext370);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType375.setUnitRef(INR369);
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType375.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType375.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue372));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement374 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType375);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement374);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR376 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR376 = createUnitIfNotExist(INR376, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap378 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap378.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap378.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue379 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap378);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue380 = DBS06ReportUtil.retrieveFieldDataForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap378, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue380 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue380.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue380.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue380.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue380.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue380.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue380.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue379 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue379)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext377 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap378 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext377, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType382 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType382.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext377);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType382.setUnitRef(INR376);
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType382.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType382.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue379));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement381 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createPotentialFutureExposure(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType382);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement381);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR383 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR383 = createUnitIfNotExist(INR383, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap385 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap385.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap385.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue386 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap385);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue387 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap385, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue387 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue387.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue387.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue387.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue387.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue387.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue387.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue386 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue386)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext384 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap385 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext384, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType389 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType389.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext384);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType389.setUnitRef(INR383);
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType389.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType389.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue386));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement388 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType389);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement388);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR390 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR390 = createUnitIfNotExist(INR390, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap392 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap392.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap392.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue393 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap392);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue394 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap392, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue394 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue394.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue394.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue394.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue394.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue394.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue394.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue393 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue393)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext391 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap392 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext391, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType396 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType396.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext391);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType396.setUnitRef(INR390);
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType396.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType396.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue393));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement395 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType396);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement395);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR397 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR397 = createUnitIfNotExist(INR397, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap399 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap399.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap399.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue400 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap399);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue401 = DBS06ReportUtil.retrieveFieldDataForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap399, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue401 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue401.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue401.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue401.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue401.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue401.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue401.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue400 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue400)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext398 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap399 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext398, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType403 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType403.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext398);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType403.setUnitRef(INR397);
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType403.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType403.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue400));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement402 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createPotentialFutureExposure(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType403);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement402);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR404 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR404 = createUnitIfNotExist(INR404, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap406 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap406.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap406.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue407 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap406);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue408 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap406, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue408 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue408.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue408.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue408.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue408.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue408.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue408.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue407 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue407)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext405 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap406 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext405, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType410 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType410.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext405);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType410.setUnitRef(INR404);
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType410.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType410.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue407));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement409 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType410);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement409);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR411 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR411 = createUnitIfNotExist(INR411, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap413 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap413.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap413.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue414 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap413);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue415 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap413, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue415 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue415.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue415.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue415.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue415.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue415.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue415.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue414 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue414)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext412 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap413 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext412, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType417 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType417.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext412);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType417.setUnitRef(INR411);
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType417.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType417.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue414));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement416 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType417);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement416);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR418 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR418 = createUnitIfNotExist(INR418, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap420 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap420.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap420.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue421 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap420);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue422 = DBS06ReportUtil.retrieveFieldDataForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap420, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue422 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue422.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue422.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue422.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue422.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue422.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue422.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue421 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue421)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext419 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap420 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext419, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType424 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType424.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext419);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType424.setUnitRef(INR418);
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType424.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType424.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue421));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement423 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createPotentialFutureExposure(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType424);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement423);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR425 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR425 = createUnitIfNotExist(INR425, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap427 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap427.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap427.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue428 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap427);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue429 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap427, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue429 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue429.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue429.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue429.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue429.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue429.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue429.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue428 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue428)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext426 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap427 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext426, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType431 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType431.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext426);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType431.setUnitRef(INR425);
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType431.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType431.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue428));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement430 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType431);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement430);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR432 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR432 = createUnitIfNotExist(INR432, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap434 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap434.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap434.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue435 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap434);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue436 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap434, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue436 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue436.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue436.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue436.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue436.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue436.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue436.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue435 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue435)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext433 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap434 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext433, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType438 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType438.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext433);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType438.setUnitRef(INR432);
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType438.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType438.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue435));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement437 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType438);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement437);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR439 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR439 = createUnitIfNotExist(INR439, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap441 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap441.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap441.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue442 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap441);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue443 = DBS06ReportUtil.retrieveFieldDataForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap441, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue443 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue443.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue443.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue443.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue443.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue443.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue443.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue442 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue442)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext440 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap441 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext440, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType445 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType445.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext440);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType445.setUnitRef(INR439);
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType445.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType445.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue442));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement444 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createPotentialFutureExposure(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType445);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement444);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR446 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR446 = createUnitIfNotExist(INR446, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap448 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap448.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap448.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue449 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap448);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue450 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap448, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue450 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue450.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue450.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue450.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue450.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue450.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue450.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue449 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue449)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext447 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap448 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext447, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType452 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType452.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext447);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType452.setUnitRef(INR446);
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType452.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType452.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue449));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement451 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType452);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement451);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR453 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR453 = createUnitIfNotExist(INR453, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap455 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap455.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap455.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue456 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap455);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue457 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap455, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue457 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue457.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue457.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue457.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue457.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue457.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue457.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue456 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue456)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext454 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap455 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext454, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType459 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType459.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext454);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType459.setUnitRef(INR453);
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType459.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType459.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue456));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement458 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType459);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement458);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR460 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR460 = createUnitIfNotExist(INR460, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap462 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap462.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap462.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue463 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap462);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue464 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap462, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue464 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue464.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue464.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue464.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue464.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue464.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue464.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue463 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue463)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext461 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap462 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext461, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType466 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType466.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext461);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType466.setUnitRef(INR460);
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType466.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType466.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue463));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement465 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType466);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement465);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR467 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR467 = createUnitIfNotExist(INR467, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap469 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap469.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap469.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue470 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap469);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue471 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap469, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue471 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue471.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue471.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue471.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue471.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue471.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue471.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue470 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue470)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext468 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap469 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext468, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType473 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType473.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext468);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType473.setUnitRef(INR467);
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType473.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType473.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue470));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement472 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType473);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement472);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR474 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR474 = createUnitIfNotExist(INR474, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap476 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap476.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap476.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue477 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap476);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue478 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap476, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue478 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue478.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue478.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue478.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue478.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue478.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue478.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue477 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue477)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext475 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap476 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext475, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType480 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType480.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext475);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType480.setUnitRef(INR474);
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType480.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType480.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue477));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement479 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType480);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement479);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR481 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR481 = createUnitIfNotExist(INR481, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap483 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap483.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap483.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue484 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap483);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue485 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap483, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue485 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue485.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue485.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue485.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue485.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue485.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue485.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue484 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue484)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext482 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap483 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext482, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType487 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType487.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext482);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType487.setUnitRef(INR481);
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType487.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType487.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue484));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement486 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType487);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement486);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR488 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR488 = createUnitIfNotExist(INR488, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap490 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap490.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap490.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue491 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap490);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue492 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap490, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue492 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue492.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue492.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue492.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue492.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue492.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue492.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue491 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue491)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext489 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap490 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext489, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType494 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType494.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext489);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType494.setUnitRef(INR488);
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType494.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType494.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue491));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement493 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType494);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement493);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR495 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR495 = createUnitIfNotExist(INR495, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap497 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap497.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap497.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue498 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap497);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue499 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap497, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue499 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue499.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue499.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue499.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue499.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue499.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue499.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue498 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue498)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext496 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap497 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext496, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType501 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType501.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext496);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType501.setUnitRef(INR495);
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType501.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType501.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue498));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement500 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType501);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement500);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR502 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR502 = createUnitIfNotExist(INR502, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap504 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap504.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap504.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue505 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap504);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue506 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap504, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue506 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue506.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue506.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue506.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue506.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue506.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue506.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue505 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue505)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext503 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap504 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext503, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType508 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType508.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext503);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType508.setUnitRef(INR502);
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType508.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType508.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue505));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement507 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType508);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement507);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR509 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR509 = createUnitIfNotExist(INR509, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap511 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap511.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap511.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue512 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap511);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue513 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap511, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue513 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue513.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue513.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue513.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue513.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue513.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue513.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue512 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue512)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext510 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap511 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext510, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType515 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType515.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext510);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType515.setUnitRef(INR509);
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType515.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType515.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue512));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement514 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType515);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement514);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR516 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR516 = createUnitIfNotExist(INR516, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap518 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap518.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap518.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue519 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap518);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue520 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap518, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue520 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue520.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue520.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue520.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue520.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue520.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue520.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue519 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue519)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext517 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap518 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext517, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType522 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType522.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext517);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType522.setUnitRef(INR516);
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType522.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType522.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue519));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement521 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType522);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement521);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR523 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR523 = createUnitIfNotExist(INR523, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap525 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap525.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap525.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue526 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap525);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue527 = DBS06ReportUtil.retrieveFieldDataForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap525, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue527 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue527.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue527.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue527.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue527.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue527.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue527.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue526 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue526)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext524 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap525 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext524, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType529 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType529.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext524);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType529.setUnitRef(INR523);
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType529.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType529.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue526));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement528 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createPotentialFutureExposure(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType529);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement528);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR530 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR530 = createUnitIfNotExist(INR530, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - ExposureAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisMap532 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisMap532.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisMap532.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue533 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisMap532);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue534 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisMap532, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue534 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue534.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue534.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue534.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue534.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue534.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue534.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue533 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue533)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisContext531 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisMap532 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisContext531, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType536 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType536.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisContext531);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType536.setUnitRef(INR530);
                                        explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType536.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType536.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue533));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement535 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType536);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement535);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                        
                    
                        
                            
                            
                                
                                Unit INR537 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR537 = createUnitIfNotExist(INR537, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap539 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap539.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap539.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue540 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap539);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue541 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap539, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue541 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue541.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue541.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue541.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue541.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue541.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue541.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue540 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue540)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext538 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap539 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext538, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType543 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType543.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext538);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType543.setUnitRef(INR537);
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType543.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType543.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue540));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement542 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType543);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement542);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR544 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR544 = createUnitIfNotExist(INR544, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap546 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap546.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap546.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue547 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap546);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue548 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap546, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue548 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue548.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue548.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue548.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue548.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue548.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue548.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue547 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue547)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext545 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap546 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext545, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType550 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType550.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext545);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType550.setUnitRef(INR544);
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType550.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType550.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue547));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement549 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType550);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement549);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR551 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR551 = createUnitIfNotExist(INR551, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap553 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap553.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap553.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue554 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap553);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue555 = DBS06ReportUtil.retrieveFieldDataForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap553, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue555 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue555.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue555.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue555.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue555.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue555.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue555.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue554 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue554)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext552 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap553 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext552, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType557 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType557.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext552);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType557.setUnitRef(INR551);
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType557.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType557.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue554));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement556 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createPotentialFutureExposure(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType557);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement556);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR558 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR558 = createUnitIfNotExist(INR558, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap560 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap560.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap560.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue561 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap560);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue562 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap560, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue562 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue562.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue562.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue562.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue562.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue562.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue562.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue561 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue561)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext559 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap560 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext559, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType564 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType564.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext559);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType564.setUnitRef(INR558);
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType564.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType564.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue561));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement563 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType564);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement563);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR565 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR565 = createUnitIfNotExist(INR565, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap567 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap567.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap567.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue568 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap567);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue569 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap567, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue569 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue569.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue569.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue569.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue569.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue569.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue569.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue568 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue568)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext566 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap567 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext566, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType571 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType571.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext566);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType571.setUnitRef(INR565);
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType571.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType571.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue568));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement570 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType571);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement570);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR572 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR572 = createUnitIfNotExist(INR572, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap574 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap574.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap574.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue575 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap574);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue576 = DBS06ReportUtil.retrieveFieldDataForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap574, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue576 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue576.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue576.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue576.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue576.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue576.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue576.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue575 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue575)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext573 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap574 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext573, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType578 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType578.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext573);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType578.setUnitRef(INR572);
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType578.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType578.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue575));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement577 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createPotentialFutureExposure(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType578);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement577);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR579 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR579 = createUnitIfNotExist(INR579, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap581 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap581.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap581.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue582 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap581);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue583 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap581, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue583 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue583.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue583.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue583.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue583.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue583.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue583.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue582 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue582)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext580 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap581 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext580, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType585 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType585.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext580);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType585.setUnitRef(INR579);
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType585.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType585.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue582));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement584 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType585);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement584);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR586 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR586 = createUnitIfNotExist(INR586, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap588 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap588.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap588.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue589 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap588);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue590 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap588, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue590 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue590.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue590.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue590.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue590.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue590.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue590.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue589 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue589)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext587 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap588 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext587, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType592 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType592.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext587);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType592.setUnitRef(INR586);
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType592.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType592.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue589));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement591 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType592);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement591);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR593 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR593 = createUnitIfNotExist(INR593, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap595 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap595.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap595.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue596 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap595);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue597 = DBS06ReportUtil.retrieveFieldDataForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap595, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue597 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue597.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue597.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue597.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue597.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue597.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue597.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue596 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue596)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext594 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap595 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext594, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType599 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType599.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext594);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType599.setUnitRef(INR593);
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType599.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType599.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue596));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement598 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createPotentialFutureExposure(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType599);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement598);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR600 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR600 = createUnitIfNotExist(INR600, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap602 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap602.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap602.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue603 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap602);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue604 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap602, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue604 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue604.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue604.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue604.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue604.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue604.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue604.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue603 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue603)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext601 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap602 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext601, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType606 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType606.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext601);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType606.setUnitRef(INR600);
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType606.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType606.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue603));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement605 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType606);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement605);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR607 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR607 = createUnitIfNotExist(INR607, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap609 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap609.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap609.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue610 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap609);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue611 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap609, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue611 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue611.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue611.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue611.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue611.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue611.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue611.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue610 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue610)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext608 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap609 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext608, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType613 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType613.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext608);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType613.setUnitRef(INR607);
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType613.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType613.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue610));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement612 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType613);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement612);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR614 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR614 = createUnitIfNotExist(INR614, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap616 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap616.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap616.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue617 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap616);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue618 = DBS06ReportUtil.retrieveFieldDataForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap616, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue618 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue618.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue618.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue618.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue618.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue618.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue618.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue617 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue617)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext615 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap616 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext615, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType620 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType620.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext615);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType620.setUnitRef(INR614);
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType620.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType620.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue617));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement619 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createPotentialFutureExposure(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType620);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement619);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR621 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR621 = createUnitIfNotExist(INR621, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap623 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap623.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap623.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue624 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap623);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue625 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap623, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue625 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue625.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue625.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue625.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue625.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue625.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue625.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue624 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue624)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext622 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap623 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext622, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType627 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType627.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext622);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType627.setUnitRef(INR621);
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType627.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType627.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue624));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement626 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType627);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement626);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR628 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR628 = createUnitIfNotExist(INR628, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap630 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap630.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap630.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue631 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap630);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue632 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap630, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue632 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue632.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue632.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue632.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue632.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue632.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue632.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue631 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue631)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext629 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap630 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext629, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType634 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType634.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext629);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType634.setUnitRef(INR628);
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType634.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType634.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue631));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement633 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType634);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement633);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR635 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR635 = createUnitIfNotExist(INR635, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap637 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap637.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap637.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue638 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap637);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue639 = DBS06ReportUtil.retrieveFieldDataForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap637, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue639 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue639.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue639.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue639.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue639.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue639.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue639.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue638 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue638)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext636 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap637 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext636, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType641 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType641.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext636);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType641.setUnitRef(INR635);
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType641.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType641.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue638));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement640 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createPotentialFutureExposure(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType641);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement640);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR642 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR642 = createUnitIfNotExist(INR642, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap644 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap644.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap644.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue645 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap644);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue646 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap644, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue646 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue646.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue646.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue646.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue646.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue646.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue646.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue645 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue645)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext643 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap644 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext643, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType648 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType648.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext643);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType648.setUnitRef(INR642);
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType648.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType648.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue645));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement647 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType648);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement647);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR649 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR649 = createUnitIfNotExist(INR649, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap651 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap651.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap651.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue652 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap651);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue653 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap651, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue653 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue653.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue653.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue653.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue653.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue653.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue653.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue652 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue652)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext650 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap651 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext650, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType655 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType655.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext650);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType655.setUnitRef(INR649);
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType655.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType655.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue652));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement654 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType655);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement654);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR656 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR656 = createUnitIfNotExist(INR656, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap658 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap658.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap658.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue659 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap658);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue660 = DBS06ReportUtil.retrieveFieldDataForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap658, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue660 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue660.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue660.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue660.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue660.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue660.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue660.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue659 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue659)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext657 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap658 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext657, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType662 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType662.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext657);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType662.setUnitRef(INR656);
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType662.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType662.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue659));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement661 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createPotentialFutureExposure(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType662);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement661);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR663 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR663 = createUnitIfNotExist(INR663, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap665 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap665.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap665.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue666 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap665);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue667 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap665, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue667 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue667.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue667.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue667.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue667.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue667.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue667.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue666 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue666)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext664 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap665 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext664, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType669 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType669.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext664);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType669.setUnitRef(INR663);
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType669.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType669.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue666));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement668 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType669);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement668);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR670 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR670 = createUnitIfNotExist(INR670, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap672 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap672.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap672.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue673 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap672);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue674 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap672, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue674 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue674.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue674.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue674.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue674.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue674.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue674.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue673 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue673)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext671 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap672 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext671, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType676 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType676.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext671);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType676.setUnitRef(INR670);
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType676.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType676.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue673));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement675 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType676);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement675);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR677 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR677 = createUnitIfNotExist(INR677, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap679 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap679.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap679.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue680 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap679);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue681 = DBS06ReportUtil.retrieveFieldDataForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap679, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue681 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue681.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue681.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue681.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue681.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue681.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue681.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue680 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue680)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext678 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap679 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext678, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType683 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType683.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext678);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType683.setUnitRef(INR677);
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType683.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType683.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue680));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement682 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createPotentialFutureExposure(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType683);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement682);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR684 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR684 = createUnitIfNotExist(INR684, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap686 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap686.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap686.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue687 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap686);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue688 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap686, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue688 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue688.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue688.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue688.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue688.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue688.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue688.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue687 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue687)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext685 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap686 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext685, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType690 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType690.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext685);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType690.setUnitRef(INR684);
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType690.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType690.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue687));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement689 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType690);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement689);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR691 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR691 = createUnitIfNotExist(INR691, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap693 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap693.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap693.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue694 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap693);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue695 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap693, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue695 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue695.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue695.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue695.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue695.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue695.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue695.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue694 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue694)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext692 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap693 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext692, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType697 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType697.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext692);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType697.setUnitRef(INR691);
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType697.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType697.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue694));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement696 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType697);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement696);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR698 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR698 = createUnitIfNotExist(INR698, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap700 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap700.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap700.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue701 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap700);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue702 = DBS06ReportUtil.retrieveFieldDataForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap700, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue702 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue702.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue702.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue702.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue702.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue702.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue702.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue701 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue701)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext699 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap700 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext699, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType704 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType704.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext699);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType704.setUnitRef(INR698);
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType704.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType704.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue701));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement703 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createPotentialFutureExposure(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType704);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement703);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR705 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR705 = createUnitIfNotExist(INR705, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap707 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap707.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap707.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue708 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap707);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue709 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap707, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue709 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue709.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue709.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue709.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue709.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue709.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue709.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue708 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue708)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext706 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap707 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext706, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType711 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType711.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext706);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType711.setUnitRef(INR705);
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType711.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType711.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue708));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement710 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType711);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement710);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR712 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR712 = createUnitIfNotExist(INR712, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap714 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap714.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap714.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue715 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap714);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue716 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap714, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue716 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue716.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue716.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue716.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue716.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue716.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue716.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue715 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue715)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext713 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap714 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext713, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType718 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType718.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext713);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType718.setUnitRef(INR712);
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType718.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType718.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue715));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement717 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType718);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement717);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR719 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR719 = createUnitIfNotExist(INR719, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap721 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap721.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap721.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue722 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap721);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue723 = DBS06ReportUtil.retrieveFieldDataForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap721, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue723 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue723.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue723.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue723.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue723.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue723.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue723.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue722 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue722)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext720 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap721 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext720, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType725 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType725.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext720);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType725.setUnitRef(INR719);
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType725.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType725.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue722));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement724 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createPotentialFutureExposure(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType725);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement724);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR726 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR726 = createUnitIfNotExist(INR726, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap728 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap728.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap728.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue729 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap728);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue730 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap728, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue730 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue730.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue730.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue730.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue730.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue730.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue730.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue729 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue729)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext727 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap728 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext727, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType732 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType732.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext727);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType732.setUnitRef(INR726);
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType732.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType732.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue729));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement731 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType732);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement731);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR733 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR733 = createUnitIfNotExist(INR733, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap735 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap735.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap735.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue736 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap735);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue737 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap735, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue737 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue737.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue737.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue737.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue737.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue737.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue737.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue736 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue736)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext734 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap735 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext734, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType739 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType739.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext734);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType739.setUnitRef(INR733);
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType739.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType739.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue736));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement738 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType739);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement738);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR740 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR740 = createUnitIfNotExist(INR740, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap742 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap742.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap742.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue743 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap742);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue744 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap742, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue744 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue744.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue744.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue744.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue744.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue744.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue744.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue743 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue743)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext741 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap742 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext741, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType746 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType746.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext741);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType746.setUnitRef(INR740);
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType746.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType746.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue743));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement745 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType746);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement745);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR747 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR747 = createUnitIfNotExist(INR747, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap749 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap749.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap749.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue750 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap749);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue751 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap749, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue751 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue751.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue751.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue751.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue751.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue751.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue751.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue750 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue750)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext748 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap749 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext748, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType753 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType753.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext748);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType753.setUnitRef(INR747);
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType753.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType753.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue750));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement752 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType753);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement752);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR754 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR754 = createUnitIfNotExist(INR754, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap756 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap756.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap756.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue757 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap756);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue758 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap756, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue758 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue758.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue758.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue758.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue758.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue758.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue758.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue757 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue757)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext755 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap756 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext755, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType760 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType760.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext755);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType760.setUnitRef(INR754);
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType760.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType760.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue757));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement759 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType760);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement759);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR761 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR761 = createUnitIfNotExist(INR761, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap763 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap763.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap763.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue764 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap763);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue765 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap763, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue765 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue765.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue765.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue765.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue765.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue765.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue765.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue764 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue764)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext762 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap763 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext762, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType767 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType767.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext762);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType767.setUnitRef(INR761);
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType767.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType767.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue764));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement766 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType767);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement766);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR768 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR768 = createUnitIfNotExist(INR768, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap770 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap770.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap770.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue771 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap770);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue772 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap770, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue772 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue772.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue772.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue772.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue772.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue772.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue772.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue771 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue771)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext769 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap770 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext769, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType774 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType774.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext769);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType774.setUnitRef(INR768);
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType774.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType774.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue771));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement773 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType774);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement773);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR775 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR775 = createUnitIfNotExist(INR775, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap777 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap777.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap777.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue778 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap777);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue779 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap777, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue779 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue779.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue779.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue779.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue779.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue779.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue779.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue778 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue778)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext776 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap777 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext776, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType781 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType781.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext776);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType781.setUnitRef(INR775);
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType781.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType781.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue778));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement780 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType781);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement780);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR782 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR782 = createUnitIfNotExist(INR782, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap784 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap784.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap784.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue785 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap784);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue786 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap784, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue786 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue786.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue786.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue786.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue786.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue786.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue786.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue785 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue785)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext783 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap784 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext783, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType788 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType788.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext783);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType788.setUnitRef(INR782);
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType788.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType788.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue785));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement787 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType788);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement787);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR789 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR789 = createUnitIfNotExist(INR789, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap791 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap791.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap791.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue792 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap791);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue793 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap791, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue793 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue793.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue793.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue793.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue793.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue793.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue793.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue792 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue792)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext790 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap791 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext790, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType795 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType795.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext790);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType795.setUnitRef(INR789);
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType795.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType795.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue792));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement794 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType795);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement794);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR796 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR796 = createUnitIfNotExist(INR796, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap798 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap798.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap798.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue799 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap798);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue800 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap798, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue800 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue800.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue800.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue800.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue800.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue800.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue800.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue799 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue799)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext797 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap798 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext797, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType802 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType802.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext797);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType802.setUnitRef(INR796);
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType802.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType802.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue799));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement801 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType802);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement801);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR803 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR803 = createUnitIfNotExist(INR803, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap805 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap805.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap805.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue806 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap805);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue807 = DBS06ReportUtil.retrieveFieldDataForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap805, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue807 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue807.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue807.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue807.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue807.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue807.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue807.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue806 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue806)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext804 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap805 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext804, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType809 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType809.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext804);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType809.setUnitRef(INR803);
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType809.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType809.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue806));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement808 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createPotentialFutureExposure(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType809);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement808);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR810 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR810 = createUnitIfNotExist(INR810, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - ExposureAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisMap812 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisMap812.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisMap812.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue813 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisMap812);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue814 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisMap812, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue814 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue814.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue814.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue814.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue814.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue814.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue814.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue813 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue813)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisContext811 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisMap812 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisContext811, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType816 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType816.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisContext811);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType816.setUnitRef(INR810);
                                        explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType816.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType816.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue813));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement815 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType816);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement815);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                        
                    
                        
                            
                            
                                
                                Unit INR817 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR817 = createUnitIfNotExist(INR817, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap819 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap819.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap819.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue820 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap819);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue821 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap819, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue821 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue821.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue821.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue821.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue821.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue821.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue821.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue820 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue820)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext818 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap819 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext818, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType823 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType823.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext818);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType823.setUnitRef(INR817);
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType823.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType823.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue820));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement822 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType823);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement822);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR824 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR824 = createUnitIfNotExist(INR824, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap826 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap826.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap826.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue827 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap826);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue828 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap826, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue828 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue828.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue828.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue828.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue828.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue828.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue828.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue827 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue827)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext825 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap826 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext825, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType830 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType830.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext825);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType830.setUnitRef(INR824);
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType830.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType830.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue827));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement829 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType830);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement829);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR831 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR831 = createUnitIfNotExist(INR831, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap833 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap833.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap833.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue834 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap833);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue835 = DBS06ReportUtil.retrieveFieldDataForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap833, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue835 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue835.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue835.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue835.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue835.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue835.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue835.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue834 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue834)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext832 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap833 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext832, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType837 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType837.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext832);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType837.setUnitRef(INR831);
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType837.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType837.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue834));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement836 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createPotentialFutureExposure(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType837);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement836);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR838 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR838 = createUnitIfNotExist(INR838, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap840 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap840.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap840.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue841 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap840);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue842 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap840, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue842 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue842.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue842.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue842.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue842.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue842.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue842.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue841 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue841)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext839 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap840 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext839, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType844 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType844.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext839);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType844.setUnitRef(INR838);
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType844.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType844.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue841));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement843 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType844);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement843);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR845 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR845 = createUnitIfNotExist(INR845, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap847 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap847.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap847.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue848 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap847);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue849 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap847, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue849 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue849.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue849.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue849.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue849.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue849.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue849.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue848 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue848)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext846 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap847 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext846, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType851 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType851.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext846);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType851.setUnitRef(INR845);
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType851.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType851.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue848));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement850 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType851);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement850);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR852 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR852 = createUnitIfNotExist(INR852, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap854 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap854.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap854.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue855 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap854);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue856 = DBS06ReportUtil.retrieveFieldDataForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap854, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue856 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue856.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue856.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue856.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue856.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue856.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue856.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue855 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue855)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext853 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap854 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext853, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType858 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType858.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext853);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType858.setUnitRef(INR852);
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType858.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType858.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue855));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement857 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createPotentialFutureExposure(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType858);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement857);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR859 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR859 = createUnitIfNotExist(INR859, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap861 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap861.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap861.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue862 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap861);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue863 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap861, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue863 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue863.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue863.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue863.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue863.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue863.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue863.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue862 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue862)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext860 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap861 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext860, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType865 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType865.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext860);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType865.setUnitRef(INR859);
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType865.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType865.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue862));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement864 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType865);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement864);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR866 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR866 = createUnitIfNotExist(INR866, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap868 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap868.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap868.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue869 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap868);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue870 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap868, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue870 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue870.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue870.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue870.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue870.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue870.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue870.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue869 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue869)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext867 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap868 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext867, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType872 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType872.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext867);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType872.setUnitRef(INR866);
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType872.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType872.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue869));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement871 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType872);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement871);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR873 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR873 = createUnitIfNotExist(INR873, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap875 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap875.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap875.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue876 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap875);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue877 = DBS06ReportUtil.retrieveFieldDataForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap875, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue877 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue877.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue877.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue877.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue877.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue877.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue877.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue876 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue876)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext874 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap875 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext874, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType879 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType879.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext874);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType879.setUnitRef(INR873);
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType879.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType879.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue876));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement878 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createPotentialFutureExposure(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType879);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement878);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR880 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR880 = createUnitIfNotExist(INR880, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap882 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap882.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap882.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue883 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap882);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue884 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap882, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue884 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue884.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue884.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue884.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue884.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue884.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue884.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue883 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue883)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext881 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap882 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext881, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType886 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType886.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext881);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType886.setUnitRef(INR880);
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType886.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType886.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue883));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement885 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType886);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement885);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR887 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR887 = createUnitIfNotExist(INR887, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap889 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap889.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap889.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue890 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap889);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue891 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap889, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue891 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue891.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue891.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue891.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue891.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue891.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue891.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue890 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue890)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext888 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap889 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext888, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType893 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType893.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext888);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType893.setUnitRef(INR887);
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType893.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType893.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue890));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement892 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType893);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement892);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR894 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR894 = createUnitIfNotExist(INR894, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap896 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap896.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap896.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue897 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap896);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue898 = DBS06ReportUtil.retrieveFieldDataForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap896, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue898 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue898.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue898.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue898.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue898.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue898.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue898.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue897 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue897)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext895 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap896 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext895, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType900 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType900.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext895);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType900.setUnitRef(INR894);
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType900.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType900.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue897));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement899 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createPotentialFutureExposure(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType900);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement899);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR901 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR901 = createUnitIfNotExist(INR901, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap903 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap903.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap903.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue904 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap903);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue905 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap903, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue905 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue905.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue905.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue905.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue905.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue905.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue905.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue904 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue904)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext902 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap903 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext902, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType907 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType907.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext902);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType907.setUnitRef(INR901);
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType907.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType907.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue904));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement906 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType907);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement906);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR908 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR908 = createUnitIfNotExist(INR908, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap910 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap910.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap910.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue911 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap910);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue912 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap910, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue912 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue912.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue912.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue912.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue912.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue912.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue912.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue911 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue911)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext909 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap910 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext909, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType914 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType914.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext909);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType914.setUnitRef(INR908);
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType914.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType914.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue911));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement913 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType914);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement913);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR915 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR915 = createUnitIfNotExist(INR915, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap917 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap917.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap917.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue918 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap917);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue919 = DBS06ReportUtil.retrieveFieldDataForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap917, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue919 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue919.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue919.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue919.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue919.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue919.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue919.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue918 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue918)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext916 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap917 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext916, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType921 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType921.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext916);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType921.setUnitRef(INR915);
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType921.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType921.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue918));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement920 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createPotentialFutureExposure(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType921);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement920);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR922 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR922 = createUnitIfNotExist(INR922, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap924 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap924.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap924.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue925 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap924);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue926 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap924, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue926 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue926.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue926.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue926.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue926.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue926.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue926.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue925 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue925)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext923 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap924 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext923, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType928 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType928.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext923);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType928.setUnitRef(INR922);
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType928.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType928.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue925));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement927 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType928);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement927);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR929 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR929 = createUnitIfNotExist(INR929, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap931 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap931.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap931.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue932 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap931);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue933 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap931, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue933 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue933.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue933.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue933.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue933.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue933.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue933.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue932 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue932)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext930 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap931 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext930, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType935 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType935.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext930);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType935.setUnitRef(INR929);
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType935.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType935.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue932));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement934 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType935);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement934);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR936 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR936 = createUnitIfNotExist(INR936, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap938 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap938.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap938.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue939 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap938);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue940 = DBS06ReportUtil.retrieveFieldDataForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap938, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue940 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue940.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue940.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue940.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue940.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue940.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue940.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue939 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue939)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext937 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap938 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext937, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType942 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType942.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext937);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType942.setUnitRef(INR936);
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType942.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType942.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue939));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement941 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createPotentialFutureExposure(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType942);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement941);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR943 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR943 = createUnitIfNotExist(INR943, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap945 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap945.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap945.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue946 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap945);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue947 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap945, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue947 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue947.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue947.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue947.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue947.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue947.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue947.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue946 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue946)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext944 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap945 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext944, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType949 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType949.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext944);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType949.setUnitRef(INR943);
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType949.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType949.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue946));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement948 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType949);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement948);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR950 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR950 = createUnitIfNotExist(INR950, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap952 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap952.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap952.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue953 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap952);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue954 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap952, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue954 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue954.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue954.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue954.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue954.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue954.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue954.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue953 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue953)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext951 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap952 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext951, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType956 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType956.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext951);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType956.setUnitRef(INR950);
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType956.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType956.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue953));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement955 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType956);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement955);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR957 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR957 = createUnitIfNotExist(INR957, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap959 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap959.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap959.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue960 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap959);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue961 = DBS06ReportUtil.retrieveFieldDataForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap959, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue961 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue961.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue961.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue961.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue961.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue961.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue961.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue960 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue960)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext958 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap959 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext958, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType963 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType963.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext958);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType963.setUnitRef(INR957);
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType963.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType963.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue960));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement962 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createPotentialFutureExposure(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType963);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement962);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR964 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR964 = createUnitIfNotExist(INR964, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap966 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap966.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap966.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue967 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap966);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue968 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap966, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue968 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue968.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue968.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue968.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue968.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue968.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue968.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue967 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue967)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext965 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap966 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext965, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType970 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType970.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext965);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType970.setUnitRef(INR964);
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType970.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType970.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue967));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement969 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType970);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement969);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR971 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR971 = createUnitIfNotExist(INR971, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap973 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap973.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap973.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue974 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap973);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue975 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap973, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue975 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue975.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue975.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue975.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue975.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue975.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue975.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue974 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue974)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext972 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap973 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext972, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType977 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType977.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext972);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType977.setUnitRef(INR971);
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType977.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType977.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue974));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement976 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType977);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement976);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR978 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR978 = createUnitIfNotExist(INR978, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap980 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap980.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap980.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue981 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap980);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue982 = DBS06ReportUtil.retrieveFieldDataForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap980, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue982 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue982.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue982.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue982.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue982.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue982.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue982.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue981 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue981)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext979 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap980 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext979, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType984 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType984.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext979);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType984.setUnitRef(INR978);
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType984.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType984.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue981));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement983 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createPotentialFutureExposure(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType984);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement983);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR985 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR985 = createUnitIfNotExist(INR985, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap987 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap987.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap987.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue988 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap987);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue989 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap987, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue989 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue989.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue989.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue989.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue989.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue989.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue989.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue988 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue988)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext986 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap987 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext986, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType991 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType991.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext986);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType991.setUnitRef(INR985);
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType991.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType991.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue988));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement990 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType991);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement990);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR992 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR992 = createUnitIfNotExist(INR992, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap994 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap994.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap994.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue995 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap994);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue996 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap994, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue996 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue996.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue996.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue996.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue996.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue996.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue996.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue995 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue995)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext993 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap994 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext993, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType998 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType998.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext993);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType998.setUnitRef(INR992);
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType998.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType998.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue995));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement997 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType998);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement997);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR999 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR999 = createUnitIfNotExist(INR999, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1001 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1001.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1001.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1002 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1001);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1003 = DBS06ReportUtil.retrieveFieldDataForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1001, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1003 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1003.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1003.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1003.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1003.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1003.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1003.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1002 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1002)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1000 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1001 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1000, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1005 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1005.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1000);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1005.setUnitRef(INR999);
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1005.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1005.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1002));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1004 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createPotentialFutureExposure(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1005);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1004);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR1006 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1006 = createUnitIfNotExist(INR1006, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1008 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1008.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1008.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1009 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1008);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1010 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1008, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1010 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1010.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1010.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1010.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1010.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1010.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1010.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1009 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1009)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1007 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1008 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1007, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1012 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1012.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1007);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1012.setUnitRef(INR1006);
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1012.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1012.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1009));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1011 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1012);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1011);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR1013 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1013 = createUnitIfNotExist(INR1013, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1015 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1015.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1015.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1016 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1015);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1017 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1015, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1017 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1017.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1017.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1017.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1017.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1017.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1017.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1016 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1016)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1014 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1015 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1014, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1019 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1019.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1014);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1019.setUnitRef(INR1013);
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1019.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1019.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1016));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1018 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1019);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1018);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR1020 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1020 = createUnitIfNotExist(INR1020, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1022 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1022.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1022.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1023 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1022);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1024 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1022, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1024 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1024.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1024.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1024.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1024.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1024.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1024.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1023 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1023)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1021 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1022 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1021, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1026 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1026.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1021);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1026.setUnitRef(INR1020);
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1026.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1026.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1023));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1025 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1026);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1025);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR1027 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1027 = createUnitIfNotExist(INR1027, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1029 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1029.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1029.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1030 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1029);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1031 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1029, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1031 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1031.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1031.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1031.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1031.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1031.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1031.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1030 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1030)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1028 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1029 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1028, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1033 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1033.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1028);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1033.setUnitRef(INR1027);
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1033.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1033.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1030));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1032 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1033);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1032);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR1034 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1034 = createUnitIfNotExist(INR1034, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1036 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1036.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1036.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1037 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1036);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1038 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1036, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1038 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1038.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1038.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1038.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1038.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1038.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1038.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1037 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1037)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1035 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1036 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1035, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1040 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1040.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1035);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1040.setUnitRef(INR1034);
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1040.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1040.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1037));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1039 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1040);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1039);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR1041 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1041 = createUnitIfNotExist(INR1041, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1043 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1043.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1043.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1044 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1043);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1045 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1043, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1045 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1045.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1045.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1045.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1045.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1045.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1045.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1044 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1044)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1042 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1043 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1042, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1047 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1047.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1042);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1047.setUnitRef(INR1041);
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1047.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1047.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1044));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1046 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1047);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1046);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR1048 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1048 = createUnitIfNotExist(INR1048, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1050 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1050.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1050.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1051 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1050);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1052 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1050, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1052 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1052.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1052.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1052.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1052.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1052.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1052.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1051 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1051)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1049 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1050 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1049, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1054 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1054.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1049);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1054.setUnitRef(INR1048);
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1054.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1054.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1051));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1053 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1054);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1053);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR1055 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1055 = createUnitIfNotExist(INR1055, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1057 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1057.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1057.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1058 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1057);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1059 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1057, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1059 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1059.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1059.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1059.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1059.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1059.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1059.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1058 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1058)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1056 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1057 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1056, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1061 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1061.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1056);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1061.setUnitRef(INR1055);
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1061.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1061.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1058));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1060 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1061);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1060);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR1062 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1062 = createUnitIfNotExist(INR1062, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1064 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1064.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1064.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1065 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1064);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1066 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1064, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1066 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1066.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1066.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1066.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1066.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1066.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1066.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1065 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1065)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1063 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1064 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1063, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1068 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1068.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1063);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1068.setUnitRef(INR1062);
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1068.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1068.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1065));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1067 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1068);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1067);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR1069 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1069 = createUnitIfNotExist(INR1069, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1071 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1071.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1071.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1072 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1071);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1073 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1071, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1073 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1073.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1073.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1073.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1073.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1073.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1073.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1072 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1072)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1070 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1071 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1070, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1075 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1075.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1070);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1075.setUnitRef(INR1069);
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1075.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1075.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1072));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1074 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1075);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1074);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR1076 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1076 = createUnitIfNotExist(INR1076, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1078 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1078.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1078.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1079 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1078);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1080 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1078, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1080 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1080.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1080.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1080.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1080.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1080.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1080.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1079 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1079)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1077 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1078 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1077, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1082 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1082.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1077);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1082.setUnitRef(INR1076);
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1082.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1082.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1079));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1081 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1082);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1081);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR1083 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1083 = createUnitIfNotExist(INR1083, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1085 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1085.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1085.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1086 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1085);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1087 = DBS06ReportUtil.retrieveFieldDataForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1085, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1087 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1087.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1087.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1087.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1087.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1087.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1087.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1086 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1086)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1084 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1085 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1084, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1089 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1089.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1084);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1089.setUnitRef(INR1083);
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1089.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1089.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1086));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1088 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createPotentialFutureExposure(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1089);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1088);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR1090 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1090 = createUnitIfNotExist(INR1090, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - ExposureAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisMap1092 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisMap1092.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisMap1092.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1093 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisMap1092);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1094 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisMap1092, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1094 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1094.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1094.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1094.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1094.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1094.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1094.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1093 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1093)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisContext1091 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisMap1092 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisContext1091, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1096 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1096.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisContext1091);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1096.setUnitRef(INR1090);
                                        explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1096.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1096.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1093));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1095 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1096);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1095);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                        
                    
                        
                            
                            
                                
                                Unit INR1097 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1097 = createUnitIfNotExist(INR1097, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1099 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1099.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1099.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1100 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1099);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1101 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1099, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1101 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1101.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1101.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1101.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1101.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1101.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1101.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1100 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1100)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1098 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1099 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1098, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1103 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1103.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1098);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1103.setUnitRef(INR1097);
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1103.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1103.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1100));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1102 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1103);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1102);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR1104 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1104 = createUnitIfNotExist(INR1104, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1106 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1106.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1106.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1107 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1106);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1108 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1106, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1108 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1108.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1108.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1108.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1108.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1108.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1108.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1107 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1107)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1105 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1106 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1105, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1110 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1110.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1105);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1110.setUnitRef(INR1104);
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1110.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1110.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1107));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1109 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1110);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1109);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR1111 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1111 = createUnitIfNotExist(INR1111, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1113 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1113.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1113.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1114 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1113);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1115 = DBS06ReportUtil.retrieveFieldDataForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1113, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1115 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1115.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1115.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1115.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1115.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1115.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1115.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1114 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1114)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1112 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1113 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1112, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1117 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1117.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1112);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1117.setUnitRef(INR1111);
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1117.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1117.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1114));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1116 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createPotentialFutureExposure(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1117);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1116);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR1118 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1118 = createUnitIfNotExist(INR1118, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1120 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1120.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1120.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1121 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1120);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1122 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1120, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1122 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1122.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1122.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1122.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1122.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1122.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1122.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1121 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1121)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1119 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1120 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1119, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1124 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1124.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1119);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1124.setUnitRef(INR1118);
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1124.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1124.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1121));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1123 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1124);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1123);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR1125 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1125 = createUnitIfNotExist(INR1125, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1127 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1127.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1127.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1128 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1127);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1129 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1127, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1129 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1129.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1129.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1129.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1129.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1129.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1129.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1128 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1128)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1126 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1127 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1126, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1131 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1131.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1126);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1131.setUnitRef(INR1125);
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1131.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1131.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1128));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1130 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1131);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1130);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR1132 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1132 = createUnitIfNotExist(INR1132, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1134 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1134.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1134.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1135 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1134);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1136 = DBS06ReportUtil.retrieveFieldDataForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1134, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1136 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1136.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1136.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1136.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1136.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1136.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1136.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1135 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1135)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1133 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1134 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1133, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1138 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1138.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1133);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1138.setUnitRef(INR1132);
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1138.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1138.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1135));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1137 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createPotentialFutureExposure(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1138);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1137);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR1139 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1139 = createUnitIfNotExist(INR1139, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1141 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1141.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1141.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1142 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1141);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1143 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1141, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1143 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1143.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1143.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1143.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1143.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1143.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1143.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1142 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1142)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1140 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1141 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1140, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1145 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1145.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1140);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1145.setUnitRef(INR1139);
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1145.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1145.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1142));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1144 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1145);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1144);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR1146 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1146 = createUnitIfNotExist(INR1146, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1148 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1148.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1148.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1149 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1148);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1150 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1148, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1150 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1150.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1150.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1150.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1150.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1150.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1150.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1149 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1149)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1147 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1148 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1147, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1152 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1152.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1147);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1152.setUnitRef(INR1146);
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1152.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1152.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1149));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1151 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1152);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1151);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR1153 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1153 = createUnitIfNotExist(INR1153, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1155 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1155.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1155.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1156 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1155);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1157 = DBS06ReportUtil.retrieveFieldDataForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1155, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1157 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1157.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1157.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1157.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1157.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1157.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1157.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1156 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1156)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1154 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1155 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1154, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1159 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1159.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1154);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1159.setUnitRef(INR1153);
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1159.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1159.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1156));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1158 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createPotentialFutureExposure(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1159);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1158);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR1160 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1160 = createUnitIfNotExist(INR1160, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1162 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1162.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1162.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1163 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1162);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1164 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1162, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1164 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1164.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1164.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1164.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1164.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1164.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1164.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1163 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1163)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1161 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1162 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1161, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1166 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1166.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1161);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1166.setUnitRef(INR1160);
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1166.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1166.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1163));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1165 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1166);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1165);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR1167 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1167 = createUnitIfNotExist(INR1167, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1169 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1169.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1169.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1170 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1169);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1171 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1169, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1171 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1171.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1171.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1171.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1171.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1171.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1171.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1170 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1170)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1168 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1169 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1168, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1173 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1173.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1168);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1173.setUnitRef(INR1167);
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1173.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1173.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1170));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1172 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1173);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1172);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR1174 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1174 = createUnitIfNotExist(INR1174, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1176 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1176.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1176.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1177 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1176);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1178 = DBS06ReportUtil.retrieveFieldDataForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1176, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1178 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1178.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1178.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1178.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1178.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1178.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1178.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1177 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1177)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1175 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1176 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1175, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1180 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1180.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1175);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1180.setUnitRef(INR1174);
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1180.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1180.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1177));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1179 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createPotentialFutureExposure(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1180);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1179);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR1181 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1181 = createUnitIfNotExist(INR1181, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1183 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1183.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1183.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1184 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1183);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1185 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1183, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1185 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1185.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1185.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1185.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1185.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1185.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1185.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1184 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1184)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1182 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1183 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1182, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1187 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1187.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1182);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1187.setUnitRef(INR1181);
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1187.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1187.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1184));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1186 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1187);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1186);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR1188 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1188 = createUnitIfNotExist(INR1188, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1190 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1190.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1190.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1191 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1190);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1192 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1190, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1192 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1192.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1192.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1192.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1192.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1192.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1192.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1191 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1191)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1189 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1190 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1189, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1194 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1194.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1189);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1194.setUnitRef(INR1188);
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1194.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1194.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1191));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1193 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1194);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1193);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR1195 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1195 = createUnitIfNotExist(INR1195, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1197 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1197.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1197.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1198 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1197);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1199 = DBS06ReportUtil.retrieveFieldDataForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1197, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1199 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1199.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1199.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1199.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1199.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1199.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1199.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1198 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1198)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1196 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1197 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1196, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1201 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1201.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1196);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1201.setUnitRef(INR1195);
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1201.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1201.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1198));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1200 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createPotentialFutureExposure(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1201);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1200);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR1202 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1202 = createUnitIfNotExist(INR1202, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1204 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1204.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1204.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1205 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1204);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1206 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1204, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1206 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1206.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1206.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1206.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1206.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1206.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1206.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1205 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1205)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1203 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1204 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1203, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1208 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1208.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1203);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1208.setUnitRef(INR1202);
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1208.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1208.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1205));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1207 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1208);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1207);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR1209 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1209 = createUnitIfNotExist(INR1209, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1211 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1211.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1211.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1212 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1211);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1213 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1211, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1213 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1213.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1213.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1213.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1213.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1213.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1213.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1212 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1212)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1210 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1211 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1210, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1215 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1215.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1210);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1215.setUnitRef(INR1209);
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1215.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1215.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1212));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1214 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1215);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1214);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR1216 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1216 = createUnitIfNotExist(INR1216, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1218 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1218.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1218.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1219 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1218);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1220 = DBS06ReportUtil.retrieveFieldDataForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1218, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1220 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1220.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1220.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1220.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1220.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1220.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1220.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1219 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1219)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1217 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1218 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1217, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1222 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1222.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1217);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1222.setUnitRef(INR1216);
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1222.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1222.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1219));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1221 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createPotentialFutureExposure(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1222);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1221);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR1223 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1223 = createUnitIfNotExist(INR1223, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1225 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1225.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1225.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1226 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1225);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1227 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1225, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1227 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1227.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1227.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1227.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1227.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1227.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1227.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1226 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1226)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1224 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1225 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1224, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1229 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1229.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1224);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1229.setUnitRef(INR1223);
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1229.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1229.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1226));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1228 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1229);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1228);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR1230 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1230 = createUnitIfNotExist(INR1230, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1232 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1232.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1232.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1233 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1232);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1234 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1232, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1234 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1234.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1234.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1234.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1234.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1234.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1234.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1233 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1233)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1231 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1232 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1231, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1236 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1236.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1231);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1236.setUnitRef(INR1230);
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1236.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1236.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1233));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1235 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1236);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1235);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR1237 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1237 = createUnitIfNotExist(INR1237, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1239 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1239.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1239.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1240 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1239);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1241 = DBS06ReportUtil.retrieveFieldDataForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1239, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1241 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1241.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1241.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1241.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1241.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1241.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1241.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1240 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1240)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1238 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1239 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1238, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1243 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1243.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1238);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1243.setUnitRef(INR1237);
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1243.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1243.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1240));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1242 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createPotentialFutureExposure(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1243);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1242);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR1244 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1244 = createUnitIfNotExist(INR1244, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1246 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1246.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1246.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1247 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1246);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1248 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1246, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1248 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1248.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1248.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1248.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1248.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1248.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1248.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1247 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1247)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1245 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1246 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1245, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1250 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1250.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1245);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1250.setUnitRef(INR1244);
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1250.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1250.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1247));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1249 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1250);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1249);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR1251 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1251 = createUnitIfNotExist(INR1251, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1253 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1253.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1253.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1254 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1253);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1255 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1253, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1255 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1255.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1255.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1255.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1255.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1255.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1255.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1254 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1254)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1252 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1253 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1252, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1257 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1257.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1252);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1257.setUnitRef(INR1251);
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1257.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1257.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1254));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1256 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1257);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1256);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR1258 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1258 = createUnitIfNotExist(INR1258, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1260 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1260.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1260.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1261 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1260);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1262 = DBS06ReportUtil.retrieveFieldDataForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1260, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1262 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1262.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1262.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1262.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1262.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1262.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1262.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1261 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1261)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1259 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1260 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1259, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1264 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1264.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1259);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1264.setUnitRef(INR1258);
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1264.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1264.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1261));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1263 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createPotentialFutureExposure(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1264);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1263);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR1265 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1265 = createUnitIfNotExist(INR1265, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1267 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1267.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1267.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1268 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1267);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1269 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1267, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1269 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1269.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1269.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1269.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1269.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1269.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1269.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1268 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1268)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1266 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1267 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1266, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1271 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1271.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1266);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1271.setUnitRef(INR1265);
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1271.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1271.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1268));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1270 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1271);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1270);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR1272 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1272 = createUnitIfNotExist(INR1272, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1274 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1274.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1274.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1275 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1274);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1276 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1274, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1276 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1276.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1276.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1276.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1276.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1276.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1276.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1275 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1275)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1273 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1274 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1273, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1278 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1278.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1273);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1278.setUnitRef(INR1272);
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1278.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1278.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1275));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1277 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1278);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1277);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR1279 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1279 = createUnitIfNotExist(INR1279, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1281 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1281.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1281.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1282 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1281);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1283 = DBS06ReportUtil.retrieveFieldDataForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1281, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1283 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1283.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1283.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1283.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1283.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1283.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1283.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1282 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1282)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1280 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1281 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1280, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1285 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1285.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1280);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1285.setUnitRef(INR1279);
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1285.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1285.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1282));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1284 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createPotentialFutureExposure(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1285);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1284);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR1286 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1286 = createUnitIfNotExist(INR1286, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1288 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1288.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1288.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1289 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1288);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1290 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1288, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1290 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1290.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1290.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1290.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1290.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1290.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1290.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1289 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1289)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1287 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1288 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1287, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1292 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1292.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1287);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1292.setUnitRef(INR1286);
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1292.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1292.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1289));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1291 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1292);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1291);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR1293 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1293 = createUnitIfNotExist(INR1293, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1295 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1295.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1295.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1296 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1295);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1297 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1295, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1297 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1297.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1297.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1297.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1297.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1297.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1297.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1296 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1296)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1294 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1295 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1294, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1299 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1299.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1294);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1299.setUnitRef(INR1293);
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1299.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1299.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1296));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1298 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1299);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1298);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR1300 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1300 = createUnitIfNotExist(INR1300, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1302 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1302.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1302.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1303 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1302);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1304 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1302, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1304 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1304.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1304.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1304.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1304.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1304.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1304.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1303 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1303)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1301 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1302 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1301, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1306 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1306.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1301);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1306.setUnitRef(INR1300);
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1306.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1306.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1303));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1305 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1306);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1305);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR1307 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1307 = createUnitIfNotExist(INR1307, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1309 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1309.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1309.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1310 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1309);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1311 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1309, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1311 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1311.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1311.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1311.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1311.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1311.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1311.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1310 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1310)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1308 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1309 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1308, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1313 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1313.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1308);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1313.setUnitRef(INR1307);
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1313.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1313.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1310));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1312 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1313);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1312);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR1314 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1314 = createUnitIfNotExist(INR1314, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1316 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1316.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1316.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1317 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1316);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1318 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1316, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1318 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1318.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1318.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1318.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1318.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1318.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1318.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1317 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1317)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1315 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1316 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1315, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1320 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1320.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1315);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1320.setUnitRef(INR1314);
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1320.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1320.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1317));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1319 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1320);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1319);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR1321 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1321 = createUnitIfNotExist(INR1321, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1323 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1323.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1323.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1324 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1323);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1325 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1323, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1325 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1325.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1325.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1325.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1325.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1325.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1325.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1324 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1324)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1322 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1323 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1322, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1327 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1327.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1322);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1327.setUnitRef(INR1321);
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1327.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1327.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1324));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1326 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1327);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1326);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR1328 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1328 = createUnitIfNotExist(INR1328, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1330 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1330.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1330.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1331 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1330);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1332 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1330, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1332 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1332.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1332.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1332.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1332.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1332.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1332.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1331 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1331)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1329 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1330 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1329, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1334 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1334.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1329);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1334.setUnitRef(INR1328);
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1334.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1334.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1331));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1333 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1334);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1333);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR1335 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1335 = createUnitIfNotExist(INR1335, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1337 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1337.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1337.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1338 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1337);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1339 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1337, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1339 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1339.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1339.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1339.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1339.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1339.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1339.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1338 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1338)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1336 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1337 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1336, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1341 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1341.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1336);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1341.setUnitRef(INR1335);
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1341.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1341.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1338));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1340 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1341);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1340);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR1342 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1342 = createUnitIfNotExist(INR1342, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1344 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1344.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1344.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1345 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1344);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1346 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1344, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1346 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1346.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1346.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1346.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1346.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1346.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1346.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1345 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1345)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1343 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1344 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1343, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1348 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1348.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1343);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1348.setUnitRef(INR1342);
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1348.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1348.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1345));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1347 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1348);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1347);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR1349 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1349 = createUnitIfNotExist(INR1349, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1351 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1351.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1351.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1352 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1351);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1353 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1351, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1353 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1353.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1353.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1353.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1353.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1353.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1353.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1352 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1352)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1350 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1351 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1350, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1355 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1355.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1350);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1355.setUnitRef(INR1349);
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1355.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1355.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1352));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1354 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1355);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1354);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR1356 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1356 = createUnitIfNotExist(INR1356, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1358 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1358.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1358.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1359 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1358);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1360 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1358, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1360 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1360.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1360.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1360.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1360.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1360.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1360.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1359 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1359)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1357 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1358 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1357, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1362 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1362.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1357);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1362.setUnitRef(INR1356);
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1362.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1362.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1359));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1361 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1362);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1361);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR1363 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1363 = createUnitIfNotExist(INR1363, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1365 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1365.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1365.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1366 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1365);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1367 = DBS06ReportUtil.retrieveFieldDataForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1365, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1367 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1367.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1367.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1367.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1367.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1367.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1367.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1366 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1366)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1364 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1365 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1364, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1369 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1369.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1364);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1369.setUnitRef(INR1363);
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1369.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1369.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1366));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1368 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createPotentialFutureExposure(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1369);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1368);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR1370 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1370 = createUnitIfNotExist(INR1370, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - ExposureAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisMap1372 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisMap1372.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisMap1372.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1373 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisMap1372);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1374 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisMap1372, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1374 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1374.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1374.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1374.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1374.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1374.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1374.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1373 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1373)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisContext1371 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisMap1372 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisContext1371, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1376 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1376.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisContext1371);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1376.setUnitRef(INR1370);
                                        explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1376.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1376.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1373));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1375 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1376);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1375);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                        
                    
                    
                    return "";
                    }

                
                    
                
                // if typemembers exist
                
                
                
                // create variable for subclass DBSLeverageRatioSolo_Layout4 if any typeMembers then List or Single
                //DBSLeverageRatioSolo_Layout4 dBSLeverageRatioSolo_Layout4 = mainReportData.getDBSLeverageRatioSolo_Layout4();
                
                    private String dBSLeverageRatioSolo_Layout4Method(DBSLeverageRatioSolo_Layout4 dBSLeverageRatioSolo_Layout4, List<String> contextIdentifiers,  List<Context> contextElements, List<Object> bodyElements, List<String> unitIdentifiers, List<Unit> unitElements, String bankCode, String startDateDefault, String endDateDefault, String periodDateDefault)
                
                    {
                        String startDate = startDateDefault;
                        String endDate = endDateDefault;
                        String periodDate = periodDateDefault;
                    DBSLeverageRatioSolo_Layout4 field = dBSLeverageRatioSolo_Layout4;
                    
                    
                        
                        
                            
                                
                                Unit INR1377 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1377 = createUnitIfNotExist(INR1377, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - ExposureAmount
                            
                                Map zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap1381 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap1381.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                    
                                    String zeroDBSLeverageRatioSolo_Layout4ExposureAmountValue1379 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap1381);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue1380 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap1381, "", "", "xs:date($refPeriodEndDate)");
    
                                    if(zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue1380 != null ) {
                                        if(!zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue1380.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue1380.getStartDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue1380.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue1380.getEndDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue1380.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue1380.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioSolo_Layout4ExposureAmountContext1378 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap1381 );
                                        
                                
                                if(zeroDBSLeverageRatioSolo_Layout4ExposureAmountValue1379 != null && !"".equals(zeroDBSLeverageRatioSolo_Layout4ExposureAmountValue1379)) {
                                    
                                    addContext(DBSLeverageRatioSolo_Layout4ExposureAmountContext1378, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType exposureAmountValue1382 = new MonetaryItemType();
                                    exposureAmountValue1382.setContextRef(DBSLeverageRatioSolo_Layout4ExposureAmountContext1378);
                                    
                                    exposureAmountValue1382.setUnitRef(INR1377);
                                    exposureAmountValue1382.setDecimals("INF");
                                    exposureAmountValue1382.setValue(new BigDecimal(zeroDBSLeverageRatioSolo_Layout4ExposureAmountValue1379));
                                    
                                    
                                    JAXBElement<MonetaryItemType> exposureAmountElement1383 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(exposureAmountValue1382);
                                    bodyElements.add(exposureAmountElement1383);
                                
                            }
                        
                        
                    
                    
            
                    
                    
                    
                    return "";
                    }

                
                    
                
                // if typemembers exist
                
                
                
                // create variable for subclass DBSLeverageRatioSolo_Layout5 if any typeMembers then List or Single
                //DBSLeverageRatioSolo_Layout5 dBSLeverageRatioSolo_Layout5 = mainReportData.getDBSLeverageRatioSolo_Layout5();
                
                    private String dBSLeverageRatioSolo_Layout5Method(DBSLeverageRatioSolo_Layout5 dBSLeverageRatioSolo_Layout5, List<String> contextIdentifiers,  List<Context> contextElements, List<Object> bodyElements, List<String> unitIdentifiers, List<Unit> unitElements, String bankCode, String startDateDefault, String endDateDefault, String periodDateDefault)
                
                    {
                        String startDate = startDateDefault;
                        String endDate = endDateDefault;
                        String periodDate = periodDateDefault;
                    DBSLeverageRatioSolo_Layout5 field = dBSLeverageRatioSolo_Layout5;
                    
                    
                    
            
                    
                    
                        
                            
                            
                                
                                Unit INR1384 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1384 = createUnitIfNotExist(INR1384, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - Tier1Capital
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisMap1386 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisMap1386.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1387 = DBS06ReportUtil.retrieveValueForElement(field.getTier1Capital(), explictMember1DBSLeverageRatioSolo_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisMap1386);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1388 = DBS06ReportUtil.retrieveFieldDataForElement(field.getTier1Capital(), explictMember1DBSLeverageRatioSolo_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisMap1386, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1388 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1388.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1388.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1388.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1388.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1388.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1388.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1387 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1387)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisContext1385 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisMap1386 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisContext1385, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1390 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1390.setContextRef(explictMember1DBSLeverageRatioSolo_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisContext1385);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1390.setUnitRef(INR1384);
                                        explictMember1DBSLeverageRatioSolo_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1390.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1390.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1387));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1389 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createTier1Capital(explictMember1DBSLeverageRatioSolo_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1390);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1389);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR1391 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1391 = createUnitIfNotExist(INR1391, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - ExposureAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisMap1393 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisMap1393.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisMap1393.put("rbi-core:LeverageRatioExposureAxis", "in-rbi-rep:TotalExposureMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1394 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), explictMember1DBSLeverageRatioSolo_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisMap1393);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1395 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), explictMember1DBSLeverageRatioSolo_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisMap1393, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioSolo_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1395 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1395.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1395.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1395.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1395.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1395.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1395.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1394 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1394)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisContext1392 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisMap1393 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisContext1392, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1397 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1397.setContextRef(explictMember1DBSLeverageRatioSolo_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisContext1392);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1397.setUnitRef(INR1391);
                                        explictMember1DBSLeverageRatioSolo_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1397.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1397.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1394));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1396 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(explictMember1DBSLeverageRatioSolo_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1397);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1396);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit pure1398 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                                pure1398 = createUnitIfNotExist(pure1398, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - BaselIILeverageRatio
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisMap1400 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisMap1400.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1401 = DBS06ReportUtil.retrieveValueForElement(field.getBaselIILeverageRatio(), explictMember1DBSLeverageRatioSolo_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisMap1400);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1402 = DBS06ReportUtil.retrieveFieldDataForElement(field.getBaselIILeverageRatio(), explictMember1DBSLeverageRatioSolo_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisMap1400, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "" );

                                if(explictMember1DBSLeverageRatioSolo_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1402 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1402.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1402.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1402.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1402.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1402.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue1402.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1401 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1401)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisContext1399 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisMap1400 );
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisContext1399, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    PercentItemType explictMember1DBSLeverageRatioSolo_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1404 = new PercentItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1404.setContextRef(explictMember1DBSLeverageRatioSolo_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisContext1399);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1404.setUnitRef(pure1398);
                                        explictMember1DBSLeverageRatioSolo_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1404.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1404.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1401));
                                    
                                    
                                    JAXBElement<PercentItemType> explictMember1DBSLeverageRatioSolo_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1403 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createBaselIILeverageRatio(explictMember1DBSLeverageRatioSolo_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1404);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1403);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                        
                    
                    
                    return "";
                    }

                
                    
                
                // if typemembers exist
                
                
                
                // create variable for subclass DBSLeverageRatioConsolidated_Layout1 if any typeMembers then List or Single
                //DBSLeverageRatioConsolidated_Layout1 dBSLeverageRatioConsolidated_Layout1 = mainReportData.getDBSLeverageRatioConsolidated_Layout1();
                
                    private String dBSLeverageRatioConsolidated_Layout1Method(DBSLeverageRatioConsolidated_Layout1 dBSLeverageRatioConsolidated_Layout1, List<String> contextIdentifiers,  List<Context> contextElements, List<Object> bodyElements, List<String> unitIdentifiers, List<Unit> unitElements, String bankCode, String startDateDefault, String endDateDefault, String periodDateDefault)
                
                    {
                        String startDate = startDateDefault;
                        String endDate = endDateDefault;
                        String periodDate = periodDateDefault;
                    DBSLeverageRatioConsolidated_Layout1 field = dBSLeverageRatioConsolidated_Layout1;
                    
                    
                    
            
                    
                    
                        
                            
                            
                                
                                Unit INR1405 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1405 = createUnitIfNotExist(INR1405, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis,rbi-core:LeverageRatioExposureAxis - ExposureAmount
                            
                        
                            

                            
                                    Map explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticSovereignsMemberMap1407 = new HashMap<String, String>();
                                    
                                    
                                    explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticSovereignsMemberMap1407.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                    explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticSovereignsMemberMap1407.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:DomesticSovereignsMember");   
                                
                                    String explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticSovereignsMemberValue1408 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticSovereignsMemberMap1407);
                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticSovereignsMemberFieldDataValue1409 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticSovereignsMemberMap1407, "", "", "xs:date($refPeriodEndDate)");

                                    if(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticSovereignsMemberFieldDataValue1409 != null ) {
                                        if(!explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticSovereignsMemberFieldDataValue1409.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticSovereignsMemberFieldDataValue1409.getStartDateValue();
                                        if(!explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticSovereignsMemberFieldDataValue1409.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticSovereignsMemberFieldDataValue1409.getEndDateValue();
                                        if(!explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticSovereignsMemberFieldDataValue1409.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticSovereignsMemberFieldDataValue1409.getInstantDateValue();
                                    }
                                    
                                    if(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticSovereignsMemberValue1408 != null && !"".equals(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticSovereignsMemberValue1408)) {
                                    
                                        
                                        
                                            Context explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticSovereignsMemberContext1406 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticSovereignsMemberMap1407 );
                                        
                                        addContext(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticSovereignsMemberContext1406, contextElements, contextIdentifiers);
                                                  
                                            // create element JAXB Element
                    
                                            MonetaryItemType explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticSovereignsMemberDataType1411 = new MonetaryItemType();
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticSovereignsMemberDataType1411.setContextRef(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticSovereignsMemberContext1406);
                                        
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticSovereignsMemberDataType1411.setUnitRef(INR1405);
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticSovereignsMemberDataType1411.setDecimals("INF");
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticSovereignsMemberDataType1411.setValue(new BigDecimal(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticSovereignsMemberValue1408));
                                        
                                        
                                            JAXBElement<MonetaryItemType> explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticSovereignsMemberElement1410 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticSovereignsMemberDataType1411);
                                            bodyElements.add(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticSovereignsMemberElement1410);
                                    }
                                
                            
                        
                        
                        
                    
                        
                            
                            
                                
                                Unit INR1412 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1412 = createUnitIfNotExist(INR1412, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis,rbi-core:LeverageRatioExposureAxis - ExposureAmount
                            
                        
                            

                            
                                    Map explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignSovereignsMemberMap1414 = new HashMap<String, String>();
                                    
                                    
                                    explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignSovereignsMemberMap1414.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                    explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignSovereignsMemberMap1414.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:ForeignSovereignsMember");   
                                
                                    String explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignSovereignsMemberValue1415 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignSovereignsMemberMap1414);
                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignSovereignsMemberFieldDataValue1416 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignSovereignsMemberMap1414, "", "", "xs:date($refPeriodEndDate)");

                                    if(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignSovereignsMemberFieldDataValue1416 != null ) {
                                        if(!explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignSovereignsMemberFieldDataValue1416.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignSovereignsMemberFieldDataValue1416.getStartDateValue();
                                        if(!explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignSovereignsMemberFieldDataValue1416.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignSovereignsMemberFieldDataValue1416.getEndDateValue();
                                        if(!explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignSovereignsMemberFieldDataValue1416.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignSovereignsMemberFieldDataValue1416.getInstantDateValue();
                                    }
                                    
                                    if(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignSovereignsMemberValue1415 != null && !"".equals(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignSovereignsMemberValue1415)) {
                                    
                                        
                                        
                                            Context explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignSovereignsMemberContext1413 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignSovereignsMemberMap1414 );
                                        
                                        addContext(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignSovereignsMemberContext1413, contextElements, contextIdentifiers);
                                                  
                                            // create element JAXB Element
                    
                                            MonetaryItemType explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignSovereignsMemberDataType1418 = new MonetaryItemType();
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignSovereignsMemberDataType1418.setContextRef(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignSovereignsMemberContext1413);
                                        
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignSovereignsMemberDataType1418.setUnitRef(INR1412);
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignSovereignsMemberDataType1418.setDecimals("INF");
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignSovereignsMemberDataType1418.setValue(new BigDecimal(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignSovereignsMemberValue1415));
                                        
                                        
                                            JAXBElement<MonetaryItemType> explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignSovereignsMemberElement1417 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignSovereignsMemberDataType1418);
                                            bodyElements.add(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignSovereignsMemberElement1417);
                                    }
                                
                            
                        
                        
                        
                    
                        
                            
                            
                                
                                Unit INR1419 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1419 = createUnitIfNotExist(INR1419, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis,rbi-core:LeverageRatioExposureAxis - ExposureAmount
                            
                        
                            

                            
                                    Map explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberMap1421 = new HashMap<String, String>();
                                    
                                    
                                    explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberMap1421.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                    explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberMap1421.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:BanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMember");   
                                
                                    String explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberValue1422 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberMap1421);
                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberFieldDataValue1423 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberMap1421, "", "", "xs:date($refPeriodEndDate)");

                                    if(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberFieldDataValue1423 != null ) {
                                        if(!explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberFieldDataValue1423.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberFieldDataValue1423.getStartDateValue();
                                        if(!explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberFieldDataValue1423.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberFieldDataValue1423.getEndDateValue();
                                        if(!explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberFieldDataValue1423.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberFieldDataValue1423.getInstantDateValue();
                                    }
                                    
                                    if(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberValue1422 != null && !"".equals(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberValue1422)) {
                                    
                                        
                                        
                                            Context explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberContext1420 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberMap1421 );
                                        
                                        addContext(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberContext1420, contextElements, contextIdentifiers);
                                                  
                                            // create element JAXB Element
                    
                                            MonetaryItemType explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberDataType1425 = new MonetaryItemType();
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberDataType1425.setContextRef(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberContext1420);
                                        
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberDataType1425.setUnitRef(INR1419);
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberDataType1425.setDecimals("INF");
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberDataType1425.setValue(new BigDecimal(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberValue1422));
                                        
                                        
                                            JAXBElement<MonetaryItemType> explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberElement1424 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberDataType1425);
                                            bodyElements.add(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberElement1424);
                                    }
                                
                            
                        
                        
                        
                    
                        
                            
                            
                                
                                Unit INR1426 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1426 = createUnitIfNotExist(INR1426, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis,rbi-core:LeverageRatioExposureAxis - ExposureAmount
                            
                        
                            

                            
                                    Map explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignBanksMemberMap1428 = new HashMap<String, String>();
                                    
                                    
                                    explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignBanksMemberMap1428.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                    explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignBanksMemberMap1428.put("rbi-core:LeverageRatioExposureAxis", "in-rbi-rep:ForeignBanksMember");   
                                
                                    String explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignBanksMemberValue1429 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignBanksMemberMap1428);
                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignBanksMemberFieldDataValue1430 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignBanksMemberMap1428, "", "", "xs:date($refPeriodEndDate)");

                                    if(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignBanksMemberFieldDataValue1430 != null ) {
                                        if(!explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignBanksMemberFieldDataValue1430.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignBanksMemberFieldDataValue1430.getStartDateValue();
                                        if(!explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignBanksMemberFieldDataValue1430.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignBanksMemberFieldDataValue1430.getEndDateValue();
                                        if(!explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignBanksMemberFieldDataValue1430.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignBanksMemberFieldDataValue1430.getInstantDateValue();
                                    }
                                    
                                    if(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignBanksMemberValue1429 != null && !"".equals(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignBanksMemberValue1429)) {
                                    
                                        
                                        
                                            Context explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignBanksMemberContext1427 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignBanksMemberMap1428 );
                                        
                                        addContext(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignBanksMemberContext1427, contextElements, contextIdentifiers);
                                                  
                                            // create element JAXB Element
                    
                                            MonetaryItemType explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignBanksMemberDataType1432 = new MonetaryItemType();
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignBanksMemberDataType1432.setContextRef(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignBanksMemberContext1427);
                                        
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignBanksMemberDataType1432.setUnitRef(INR1426);
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignBanksMemberDataType1432.setDecimals("INF");
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignBanksMemberDataType1432.setValue(new BigDecimal(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignBanksMemberValue1429));
                                        
                                        
                                            JAXBElement<MonetaryItemType> explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignBanksMemberElement1431 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignBanksMemberDataType1432);
                                            bodyElements.add(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignBanksMemberElement1431);
                                    }
                                
                            
                        
                        
                        
                    
                        
                            
                            
                                
                                Unit INR1433 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1433 = createUnitIfNotExist(INR1433, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis,rbi-core:LeverageRatioExposureAxis - ExposureAmount
                            
                        
                            

                            
                                    Map explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticPublicSectorEntitiesMemberMap1435 = new HashMap<String, String>();
                                    
                                    
                                    explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticPublicSectorEntitiesMemberMap1435.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                    explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticPublicSectorEntitiesMemberMap1435.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:DomesticPublicSectorEntitiesMember");   
                                
                                    String explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticPublicSectorEntitiesMemberValue1436 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticPublicSectorEntitiesMemberMap1435);
                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticPublicSectorEntitiesMemberFieldDataValue1437 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticPublicSectorEntitiesMemberMap1435, "", "", "xs:date($refPeriodEndDate)");

                                    if(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticPublicSectorEntitiesMemberFieldDataValue1437 != null ) {
                                        if(!explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticPublicSectorEntitiesMemberFieldDataValue1437.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticPublicSectorEntitiesMemberFieldDataValue1437.getStartDateValue();
                                        if(!explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticPublicSectorEntitiesMemberFieldDataValue1437.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticPublicSectorEntitiesMemberFieldDataValue1437.getEndDateValue();
                                        if(!explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticPublicSectorEntitiesMemberFieldDataValue1437.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticPublicSectorEntitiesMemberFieldDataValue1437.getInstantDateValue();
                                    }
                                    
                                    if(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticPublicSectorEntitiesMemberValue1436 != null && !"".equals(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticPublicSectorEntitiesMemberValue1436)) {
                                    
                                        
                                        
                                            Context explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticPublicSectorEntitiesMemberContext1434 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticPublicSectorEntitiesMemberMap1435 );
                                        
                                        addContext(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticPublicSectorEntitiesMemberContext1434, contextElements, contextIdentifiers);
                                                  
                                            // create element JAXB Element
                    
                                            MonetaryItemType explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticPublicSectorEntitiesMemberDataType1439 = new MonetaryItemType();
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticPublicSectorEntitiesMemberDataType1439.setContextRef(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticPublicSectorEntitiesMemberContext1434);
                                        
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticPublicSectorEntitiesMemberDataType1439.setUnitRef(INR1433);
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticPublicSectorEntitiesMemberDataType1439.setDecimals("INF");
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticPublicSectorEntitiesMemberDataType1439.setValue(new BigDecimal(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticPublicSectorEntitiesMemberValue1436));
                                        
                                        
                                            JAXBElement<MonetaryItemType> explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticPublicSectorEntitiesMemberElement1438 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticPublicSectorEntitiesMemberDataType1439);
                                            bodyElements.add(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticPublicSectorEntitiesMemberElement1438);
                                    }
                                
                            
                        
                        
                        
                    
                        
                            
                            
                                
                                Unit INR1440 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1440 = createUnitIfNotExist(INR1440, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis,rbi-core:LeverageRatioExposureAxis - ExposureAmount
                            
                        
                            

                            
                                    Map explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignPublicSectorEntitiesMemberMap1442 = new HashMap<String, String>();
                                    
                                    
                                    explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignPublicSectorEntitiesMemberMap1442.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                    explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignPublicSectorEntitiesMemberMap1442.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:ForeignPublicSectorEntitiesMember");   
                                
                                    String explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignPublicSectorEntitiesMemberValue1443 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignPublicSectorEntitiesMemberMap1442);
                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignPublicSectorEntitiesMemberFieldDataValue1444 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignPublicSectorEntitiesMemberMap1442, "", "", "xs:date($refPeriodEndDate)");

                                    if(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignPublicSectorEntitiesMemberFieldDataValue1444 != null ) {
                                        if(!explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignPublicSectorEntitiesMemberFieldDataValue1444.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignPublicSectorEntitiesMemberFieldDataValue1444.getStartDateValue();
                                        if(!explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignPublicSectorEntitiesMemberFieldDataValue1444.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignPublicSectorEntitiesMemberFieldDataValue1444.getEndDateValue();
                                        if(!explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignPublicSectorEntitiesMemberFieldDataValue1444.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignPublicSectorEntitiesMemberFieldDataValue1444.getInstantDateValue();
                                    }
                                    
                                    if(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignPublicSectorEntitiesMemberValue1443 != null && !"".equals(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignPublicSectorEntitiesMemberValue1443)) {
                                    
                                        
                                        
                                            Context explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignPublicSectorEntitiesMemberContext1441 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignPublicSectorEntitiesMemberMap1442 );
                                        
                                        addContext(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignPublicSectorEntitiesMemberContext1441, contextElements, contextIdentifiers);
                                                  
                                            // create element JAXB Element
                    
                                            MonetaryItemType explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignPublicSectorEntitiesMemberDataType1446 = new MonetaryItemType();
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignPublicSectorEntitiesMemberDataType1446.setContextRef(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignPublicSectorEntitiesMemberContext1441);
                                        
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignPublicSectorEntitiesMemberDataType1446.setUnitRef(INR1440);
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignPublicSectorEntitiesMemberDataType1446.setDecimals("INF");
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignPublicSectorEntitiesMemberDataType1446.setValue(new BigDecimal(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignPublicSectorEntitiesMemberValue1443));
                                        
                                        
                                            JAXBElement<MonetaryItemType> explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignPublicSectorEntitiesMemberElement1445 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignPublicSectorEntitiesMemberDataType1446);
                                            bodyElements.add(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignPublicSectorEntitiesMemberElement1445);
                                    }
                                
                            
                        
                        
                        
                    
                        
                            
                            
                                
                                Unit INR1447 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1447 = createUnitIfNotExist(INR1447, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis,rbi-core:LeverageRatioExposureAxis - ExposureAmount
                            
                        
                            

                            
                                    Map explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberPrimaryDealersMemberMap1449 = new HashMap<String, String>();
                                    
                                    
                                    explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberPrimaryDealersMemberMap1449.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                    explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberPrimaryDealersMemberMap1449.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:PrimaryDealersMember");   
                                
                                    String explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberPrimaryDealersMemberValue1450 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberPrimaryDealersMemberMap1449);
                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberPrimaryDealersMemberFieldDataValue1451 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberPrimaryDealersMemberMap1449, "", "", "xs:date($refPeriodEndDate)");

                                    if(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberPrimaryDealersMemberFieldDataValue1451 != null ) {
                                        if(!explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberPrimaryDealersMemberFieldDataValue1451.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberPrimaryDealersMemberFieldDataValue1451.getStartDateValue();
                                        if(!explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberPrimaryDealersMemberFieldDataValue1451.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberPrimaryDealersMemberFieldDataValue1451.getEndDateValue();
                                        if(!explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberPrimaryDealersMemberFieldDataValue1451.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberPrimaryDealersMemberFieldDataValue1451.getInstantDateValue();
                                    }
                                    
                                    if(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberPrimaryDealersMemberValue1450 != null && !"".equals(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberPrimaryDealersMemberValue1450)) {
                                    
                                        
                                        
                                            Context explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberPrimaryDealersMemberContext1448 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberPrimaryDealersMemberMap1449 );
                                        
                                        addContext(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberPrimaryDealersMemberContext1448, contextElements, contextIdentifiers);
                                                  
                                            // create element JAXB Element
                    
                                            MonetaryItemType explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberPrimaryDealersMemberDataType1453 = new MonetaryItemType();
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberPrimaryDealersMemberDataType1453.setContextRef(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberPrimaryDealersMemberContext1448);
                                        
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberPrimaryDealersMemberDataType1453.setUnitRef(INR1447);
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberPrimaryDealersMemberDataType1453.setDecimals("INF");
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberPrimaryDealersMemberDataType1453.setValue(new BigDecimal(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberPrimaryDealersMemberValue1450));
                                        
                                        
                                            JAXBElement<MonetaryItemType> explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberPrimaryDealersMemberElement1452 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberPrimaryDealersMemberDataType1453);
                                            bodyElements.add(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberPrimaryDealersMemberElement1452);
                                    }
                                
                            
                        
                        
                        
                    
                        
                            
                            
                                
                                Unit INR1454 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1454 = createUnitIfNotExist(INR1454, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis,rbi-core:LeverageRatioExposureAxis - ExposureAmount
                            
                        
                            

                            
                                    Map explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberCorporateMemberMap1456 = new HashMap<String, String>();
                                    
                                    
                                    explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberCorporateMemberMap1456.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                    explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberCorporateMemberMap1456.put("rbi-core:LeverageRatioExposureAxis", "in-rbi-rep:CorporateMember");   
                                
                                    String explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberCorporateMemberValue1457 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberCorporateMemberMap1456);
                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberCorporateMemberFieldDataValue1458 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberCorporateMemberMap1456, "", "", "xs:date($refPeriodEndDate)");

                                    if(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberCorporateMemberFieldDataValue1458 != null ) {
                                        if(!explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberCorporateMemberFieldDataValue1458.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberCorporateMemberFieldDataValue1458.getStartDateValue();
                                        if(!explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberCorporateMemberFieldDataValue1458.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberCorporateMemberFieldDataValue1458.getEndDateValue();
                                        if(!explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberCorporateMemberFieldDataValue1458.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberCorporateMemberFieldDataValue1458.getInstantDateValue();
                                    }
                                    
                                    if(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberCorporateMemberValue1457 != null && !"".equals(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberCorporateMemberValue1457)) {
                                    
                                        
                                        
                                            Context explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberCorporateMemberContext1455 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberCorporateMemberMap1456 );
                                        
                                        addContext(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberCorporateMemberContext1455, contextElements, contextIdentifiers);
                                                  
                                            // create element JAXB Element
                    
                                            MonetaryItemType explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberCorporateMemberDataType1460 = new MonetaryItemType();
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberCorporateMemberDataType1460.setContextRef(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberCorporateMemberContext1455);
                                        
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberCorporateMemberDataType1460.setUnitRef(INR1454);
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberCorporateMemberDataType1460.setDecimals("INF");
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberCorporateMemberDataType1460.setValue(new BigDecimal(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberCorporateMemberValue1457));
                                        
                                        
                                            JAXBElement<MonetaryItemType> explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberCorporateMemberElement1459 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberCorporateMemberDataType1460);
                                            bodyElements.add(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberCorporateMemberElement1459);
                                    }
                                
                            
                        
                        
                        
                    
                        
                            
                            
                                
                                Unit INR1461 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1461 = createUnitIfNotExist(INR1461, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis,rbi-core:LeverageRatioExposureAxis - ExposureAmount
                            
                        
                            

                            
                                    Map explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCCPsMemberMap1463 = new HashMap<String, String>();
                                    
                                    
                                    explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCCPsMemberMap1463.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                    explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCCPsMemberMap1463.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:ExposureToCCPsMember");   
                                
                                    String explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCCPsMemberValue1464 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCCPsMemberMap1463);
                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCCPsMemberFieldDataValue1465 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCCPsMemberMap1463, "", "", "xs:date($refPeriodEndDate)");

                                    if(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCCPsMemberFieldDataValue1465 != null ) {
                                        if(!explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCCPsMemberFieldDataValue1465.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCCPsMemberFieldDataValue1465.getStartDateValue();
                                        if(!explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCCPsMemberFieldDataValue1465.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCCPsMemberFieldDataValue1465.getEndDateValue();
                                        if(!explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCCPsMemberFieldDataValue1465.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCCPsMemberFieldDataValue1465.getInstantDateValue();
                                    }
                                    
                                    if(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCCPsMemberValue1464 != null && !"".equals(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCCPsMemberValue1464)) {
                                    
                                        
                                        
                                            Context explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCCPsMemberContext1462 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCCPsMemberMap1463 );
                                        
                                        addContext(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCCPsMemberContext1462, contextElements, contextIdentifiers);
                                                  
                                            // create element JAXB Element
                    
                                            MonetaryItemType explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCCPsMemberDataType1467 = new MonetaryItemType();
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCCPsMemberDataType1467.setContextRef(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCCPsMemberContext1462);
                                        
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCCPsMemberDataType1467.setUnitRef(INR1461);
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCCPsMemberDataType1467.setDecimals("INF");
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCCPsMemberDataType1467.setValue(new BigDecimal(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCCPsMemberValue1464));
                                        
                                        
                                            JAXBElement<MonetaryItemType> explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCCPsMemberElement1466 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCCPsMemberDataType1467);
                                            bodyElements.add(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCCPsMemberElement1466);
                                    }
                                
                            
                        
                        
                        
                    
                        
                            
                            
                                
                                Unit INR1468 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1468 = createUnitIfNotExist(INR1468, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis,rbi-core:LeverageRatioExposureAxis - ExposureAmount
                            
                        
                            

                            
                                    Map explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCapitalOfCCPsMemberMap1470 = new HashMap<String, String>();
                                    
                                    
                                    explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCapitalOfCCPsMemberMap1470.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                    explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCapitalOfCCPsMemberMap1470.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:ExposureToCapitalOfCCPsMember");   
                                
                                    String explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCapitalOfCCPsMemberValue1471 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCapitalOfCCPsMemberMap1470);
                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCapitalOfCCPsMemberFieldDataValue1472 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCapitalOfCCPsMemberMap1470, "", "", "xs:date($refPeriodEndDate)");

                                    if(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCapitalOfCCPsMemberFieldDataValue1472 != null ) {
                                        if(!explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCapitalOfCCPsMemberFieldDataValue1472.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCapitalOfCCPsMemberFieldDataValue1472.getStartDateValue();
                                        if(!explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCapitalOfCCPsMemberFieldDataValue1472.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCapitalOfCCPsMemberFieldDataValue1472.getEndDateValue();
                                        if(!explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCapitalOfCCPsMemberFieldDataValue1472.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCapitalOfCCPsMemberFieldDataValue1472.getInstantDateValue();
                                    }
                                    
                                    if(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCapitalOfCCPsMemberValue1471 != null && !"".equals(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCapitalOfCCPsMemberValue1471)) {
                                    
                                        
                                        
                                            Context explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCapitalOfCCPsMemberContext1469 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCapitalOfCCPsMemberMap1470 );
                                        
                                        addContext(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCapitalOfCCPsMemberContext1469, contextElements, contextIdentifiers);
                                                  
                                            // create element JAXB Element
                    
                                            MonetaryItemType explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCapitalOfCCPsMemberDataType1474 = new MonetaryItemType();
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCapitalOfCCPsMemberDataType1474.setContextRef(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCapitalOfCCPsMemberContext1469);
                                        
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCapitalOfCCPsMemberDataType1474.setUnitRef(INR1468);
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCapitalOfCCPsMemberDataType1474.setDecimals("INF");
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCapitalOfCCPsMemberDataType1474.setValue(new BigDecimal(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCapitalOfCCPsMemberValue1471));
                                        
                                        
                                            JAXBElement<MonetaryItemType> explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCapitalOfCCPsMemberElement1473 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCapitalOfCCPsMemberDataType1474);
                                            bodyElements.add(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCapitalOfCCPsMemberElement1473);
                                    }
                                
                            
                        
                        
                        
                    
                        
                            
                            
                                
                                Unit INR1475 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1475 = createUnitIfNotExist(INR1475, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis,rbi-core:LeverageRatioExposureAxis - ExposureAmount
                            
                        
                            

                            
                                    Map explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToDefaultFundContributionOfCCPsMemberMap1477 = new HashMap<String, String>();
                                    
                                    
                                    explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToDefaultFundContributionOfCCPsMemberMap1477.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                    explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToDefaultFundContributionOfCCPsMemberMap1477.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:ExposureToDefaultFundContributionOfCCPsMember");   
                                
                                    String explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToDefaultFundContributionOfCCPsMemberValue1478 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToDefaultFundContributionOfCCPsMemberMap1477);
                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToDefaultFundContributionOfCCPsMemberFieldDataValue1479 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToDefaultFundContributionOfCCPsMemberMap1477, "", "", "xs:date($refPeriodEndDate)");

                                    if(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToDefaultFundContributionOfCCPsMemberFieldDataValue1479 != null ) {
                                        if(!explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToDefaultFundContributionOfCCPsMemberFieldDataValue1479.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToDefaultFundContributionOfCCPsMemberFieldDataValue1479.getStartDateValue();
                                        if(!explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToDefaultFundContributionOfCCPsMemberFieldDataValue1479.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToDefaultFundContributionOfCCPsMemberFieldDataValue1479.getEndDateValue();
                                        if(!explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToDefaultFundContributionOfCCPsMemberFieldDataValue1479.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToDefaultFundContributionOfCCPsMemberFieldDataValue1479.getInstantDateValue();
                                    }
                                    
                                    if(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToDefaultFundContributionOfCCPsMemberValue1478 != null && !"".equals(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToDefaultFundContributionOfCCPsMemberValue1478)) {
                                    
                                        
                                        
                                            Context explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToDefaultFundContributionOfCCPsMemberContext1476 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToDefaultFundContributionOfCCPsMemberMap1477 );
                                        
                                        addContext(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToDefaultFundContributionOfCCPsMemberContext1476, contextElements, contextIdentifiers);
                                                  
                                            // create element JAXB Element
                    
                                            MonetaryItemType explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToDefaultFundContributionOfCCPsMemberDataType1481 = new MonetaryItemType();
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToDefaultFundContributionOfCCPsMemberDataType1481.setContextRef(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToDefaultFundContributionOfCCPsMemberContext1476);
                                        
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToDefaultFundContributionOfCCPsMemberDataType1481.setUnitRef(INR1475);
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToDefaultFundContributionOfCCPsMemberDataType1481.setDecimals("INF");
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToDefaultFundContributionOfCCPsMemberDataType1481.setValue(new BigDecimal(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToDefaultFundContributionOfCCPsMemberValue1478));
                                        
                                        
                                            JAXBElement<MonetaryItemType> explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToDefaultFundContributionOfCCPsMemberElement1480 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToDefaultFundContributionOfCCPsMemberDataType1481);
                                            bodyElements.add(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToDefaultFundContributionOfCCPsMemberElement1480);
                                    }
                                
                            
                        
                        
                        
                    
                        
                            
                            
                                
                                Unit INR1482 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1482 = createUnitIfNotExist(INR1482, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis,rbi-core:LeverageRatioExposureAxis - ExposureAmount
                            
                        
                            

                            
                                    Map explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOtherExposureToCCPsMemberMap1484 = new HashMap<String, String>();
                                    
                                    
                                    explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOtherExposureToCCPsMemberMap1484.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                    explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOtherExposureToCCPsMemberMap1484.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:OtherExposureToCCPsMember");   
                                
                                    String explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOtherExposureToCCPsMemberValue1485 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOtherExposureToCCPsMemberMap1484);
                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOtherExposureToCCPsMemberFieldDataValue1486 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOtherExposureToCCPsMemberMap1484, "", "", "xs:date($refPeriodEndDate)");

                                    if(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOtherExposureToCCPsMemberFieldDataValue1486 != null ) {
                                        if(!explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOtherExposureToCCPsMemberFieldDataValue1486.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOtherExposureToCCPsMemberFieldDataValue1486.getStartDateValue();
                                        if(!explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOtherExposureToCCPsMemberFieldDataValue1486.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOtherExposureToCCPsMemberFieldDataValue1486.getEndDateValue();
                                        if(!explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOtherExposureToCCPsMemberFieldDataValue1486.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOtherExposureToCCPsMemberFieldDataValue1486.getInstantDateValue();
                                    }
                                    
                                    if(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOtherExposureToCCPsMemberValue1485 != null && !"".equals(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOtherExposureToCCPsMemberValue1485)) {
                                    
                                        
                                        
                                            Context explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOtherExposureToCCPsMemberContext1483 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOtherExposureToCCPsMemberMap1484 );
                                        
                                        addContext(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOtherExposureToCCPsMemberContext1483, contextElements, contextIdentifiers);
                                                  
                                            // create element JAXB Element
                    
                                            MonetaryItemType explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOtherExposureToCCPsMemberDataType1488 = new MonetaryItemType();
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOtherExposureToCCPsMemberDataType1488.setContextRef(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOtherExposureToCCPsMemberContext1483);
                                        
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOtherExposureToCCPsMemberDataType1488.setUnitRef(INR1482);
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOtherExposureToCCPsMemberDataType1488.setDecimals("INF");
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOtherExposureToCCPsMemberDataType1488.setValue(new BigDecimal(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOtherExposureToCCPsMemberValue1485));
                                        
                                        
                                            JAXBElement<MonetaryItemType> explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOtherExposureToCCPsMemberElement1487 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOtherExposureToCCPsMemberDataType1488);
                                            bodyElements.add(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOtherExposureToCCPsMemberElement1487);
                                    }
                                
                            
                        
                        
                        
                    
                        
                            
                            
                                
                                Unit INR1489 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1489 = createUnitIfNotExist(INR1489, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis,rbi-core:LeverageRatioExposureAxis - ExposureAmount
                            
                        
                            

                            
                                    Map explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberAllOtherExposuresMemberMap1491 = new HashMap<String, String>();
                                    
                                    
                                    explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberAllOtherExposuresMemberMap1491.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                    explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberAllOtherExposuresMemberMap1491.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:AllOtherExposuresMember");   
                                
                                    String explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberAllOtherExposuresMemberValue1492 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberAllOtherExposuresMemberMap1491);
                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberAllOtherExposuresMemberFieldDataValue1493 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberAllOtherExposuresMemberMap1491, "", "", "xs:date($refPeriodEndDate)");

                                    if(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberAllOtherExposuresMemberFieldDataValue1493 != null ) {
                                        if(!explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberAllOtherExposuresMemberFieldDataValue1493.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberAllOtherExposuresMemberFieldDataValue1493.getStartDateValue();
                                        if(!explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberAllOtherExposuresMemberFieldDataValue1493.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberAllOtherExposuresMemberFieldDataValue1493.getEndDateValue();
                                        if(!explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberAllOtherExposuresMemberFieldDataValue1493.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberAllOtherExposuresMemberFieldDataValue1493.getInstantDateValue();
                                    }
                                    
                                    if(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberAllOtherExposuresMemberValue1492 != null && !"".equals(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberAllOtherExposuresMemberValue1492)) {
                                    
                                        
                                        
                                            Context explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberAllOtherExposuresMemberContext1490 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberAllOtherExposuresMemberMap1491 );
                                        
                                        addContext(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberAllOtherExposuresMemberContext1490, contextElements, contextIdentifiers);
                                                  
                                            // create element JAXB Element
                    
                                            MonetaryItemType explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberAllOtherExposuresMemberDataType1495 = new MonetaryItemType();
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberAllOtherExposuresMemberDataType1495.setContextRef(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberAllOtherExposuresMemberContext1490);
                                        
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberAllOtherExposuresMemberDataType1495.setUnitRef(INR1489);
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberAllOtherExposuresMemberDataType1495.setDecimals("INF");
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberAllOtherExposuresMemberDataType1495.setValue(new BigDecimal(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberAllOtherExposuresMemberValue1492));
                                        
                                        
                                            JAXBElement<MonetaryItemType> explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberAllOtherExposuresMemberElement1494 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberAllOtherExposuresMemberDataType1495);
                                            bodyElements.add(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberAllOtherExposuresMemberElement1494);
                                    }
                                
                            
                        
                        
                        
                    
                        
                            
                            
                                
                                Unit INR1496 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1496 = createUnitIfNotExist(INR1496, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis,rbi-core:LeverageRatioExposureAxis - ExposureAmount
                            
                        
                            

                            
                                    Map explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberMap1498 = new HashMap<String, String>();
                                    
                                    
                                    explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberMap1498.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                    explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberMap1498.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:BalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMember");   
                                
                                    String explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberValue1499 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberMap1498);
                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberFieldDataValue1500 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberMap1498, "", "", "xs:date($refPeriodEndDate)");

                                    if(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberFieldDataValue1500 != null ) {
                                        if(!explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberFieldDataValue1500.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberFieldDataValue1500.getStartDateValue();
                                        if(!explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberFieldDataValue1500.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberFieldDataValue1500.getEndDateValue();
                                        if(!explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberFieldDataValue1500.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberFieldDataValue1500.getInstantDateValue();
                                    }
                                    
                                    if(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberValue1499 != null && !"".equals(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberValue1499)) {
                                    
                                        
                                        
                                            Context explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberContext1497 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberMap1498 );
                                        
                                        addContext(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberContext1497, contextElements, contextIdentifiers);
                                                  
                                            // create element JAXB Element
                    
                                            MonetaryItemType explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberDataType1502 = new MonetaryItemType();
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberDataType1502.setContextRef(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberContext1497);
                                        
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberDataType1502.setUnitRef(INR1496);
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberDataType1502.setDecimals("INF");
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberDataType1502.setValue(new BigDecimal(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberValue1499));
                                        
                                        
                                            JAXBElement<MonetaryItemType> explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberElement1501 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberDataType1502);
                                            bodyElements.add(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberElement1501);
                                    }
                                
                            
                        
                        
                        
                    
                        
                            
                            
                                
                                Unit INR1503 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1503 = createUnitIfNotExist(INR1503, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis,rbi-core:LeverageRatioExposureAxis - ExposureAmount
                            
                        
                            

                            
                                    Map explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberFiduciaryAssetsMemberMap1505 = new HashMap<String, String>();
                                    
                                    
                                    explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberFiduciaryAssetsMemberMap1505.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                    explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberFiduciaryAssetsMemberMap1505.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:FiduciaryAssetsMember");   
                                
                                    String explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberFiduciaryAssetsMemberValue1506 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberFiduciaryAssetsMemberMap1505);
                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberFiduciaryAssetsMemberFieldDataValue1507 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberFiduciaryAssetsMemberMap1505, "", "", "xs:date($refPeriodEndDate)");

                                    if(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberFiduciaryAssetsMemberFieldDataValue1507 != null ) {
                                        if(!explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberFiduciaryAssetsMemberFieldDataValue1507.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberFiduciaryAssetsMemberFieldDataValue1507.getStartDateValue();
                                        if(!explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberFiduciaryAssetsMemberFieldDataValue1507.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberFiduciaryAssetsMemberFieldDataValue1507.getEndDateValue();
                                        if(!explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberFiduciaryAssetsMemberFieldDataValue1507.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberFiduciaryAssetsMemberFieldDataValue1507.getInstantDateValue();
                                    }
                                    
                                    if(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberFiduciaryAssetsMemberValue1506 != null && !"".equals(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberFiduciaryAssetsMemberValue1506)) {
                                    
                                        
                                        
                                            Context explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberFiduciaryAssetsMemberContext1504 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberFiduciaryAssetsMemberMap1505 );
                                        
                                        addContext(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberFiduciaryAssetsMemberContext1504, contextElements, contextIdentifiers);
                                                  
                                            // create element JAXB Element
                    
                                            MonetaryItemType explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberFiduciaryAssetsMemberDataType1509 = new MonetaryItemType();
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberFiduciaryAssetsMemberDataType1509.setContextRef(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberFiduciaryAssetsMemberContext1504);
                                        
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberFiduciaryAssetsMemberDataType1509.setUnitRef(INR1503);
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberFiduciaryAssetsMemberDataType1509.setDecimals("INF");
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberFiduciaryAssetsMemberDataType1509.setValue(new BigDecimal(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberFiduciaryAssetsMemberValue1506));
                                        
                                        
                                            JAXBElement<MonetaryItemType> explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberFiduciaryAssetsMemberElement1508 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberFiduciaryAssetsMemberDataType1509);
                                            bodyElements.add(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberFiduciaryAssetsMemberElement1508);
                                    }
                                
                            
                        
                        
                        
                    
                        
                            
                            
                                
                                Unit INR1510 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1510 = createUnitIfNotExist(INR1510, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis,rbi-core:LeverageRatioExposureAxis - ExposureAmount
                            
                        
                            

                            
                                    Map explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberMap1512 = new HashMap<String, String>();
                                    
                                    
                                    explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberMap1512.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                    explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberMap1512.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:OnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMember");   
                                
                                    String explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberValue1513 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberMap1512);
                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberFieldDataValue1514 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberMap1512, "", "", "xs:date($refPeriodEndDate)");

                                    if(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberFieldDataValue1514 != null ) {
                                        if(!explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberFieldDataValue1514.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberFieldDataValue1514.getStartDateValue();
                                        if(!explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberFieldDataValue1514.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberFieldDataValue1514.getEndDateValue();
                                        if(!explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberFieldDataValue1514.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberFieldDataValue1514.getInstantDateValue();
                                    }
                                    
                                    if(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberValue1513 != null && !"".equals(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberValue1513)) {
                                    
                                        
                                        
                                            Context explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberContext1511 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberMap1512 );
                                        
                                        addContext(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberContext1511, contextElements, contextIdentifiers);
                                                  
                                            // create element JAXB Element
                    
                                            MonetaryItemType explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberDataType1516 = new MonetaryItemType();
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberDataType1516.setContextRef(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberContext1511);
                                        
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberDataType1516.setUnitRef(INR1510);
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberDataType1516.setDecimals("INF");
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberDataType1516.setValue(new BigDecimal(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberValue1513));
                                        
                                        
                                            JAXBElement<MonetaryItemType> explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberElement1515 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberDataType1516);
                                            bodyElements.add(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberElement1515);
                                    }
                                
                            
                        
                        
                        
                    
                    
                    return "";
                    }

                
                    
                
                // if typemembers exist
                
                
                
                // create variable for subclass DBSLeverageRatioConsolidated_Layout2 if any typeMembers then List or Single
                //DBSLeverageRatioConsolidated_Layout2 dBSLeverageRatioConsolidated_Layout2 = mainReportData.getDBSLeverageRatioConsolidated_Layout2();
                
                    private String dBSLeverageRatioConsolidated_Layout2Method(DBSLeverageRatioConsolidated_Layout2 dBSLeverageRatioConsolidated_Layout2, List<String> contextIdentifiers,  List<Context> contextElements, List<Object> bodyElements, List<String> unitIdentifiers, List<Unit> unitElements, String bankCode, String startDateDefault, String endDateDefault, String periodDateDefault)
                
                    {
                        String startDate = startDateDefault;
                        String endDate = endDateDefault;
                        String periodDate = periodDateDefault;
                    DBSLeverageRatioConsolidated_Layout2 field = dBSLeverageRatioConsolidated_Layout2;
                    
                    
                    
            
                    
                    
                        
                            
                            
                                
                                Unit pure1517 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                                pure1517 = createUnitIfNotExist(pure1517, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - CreditConversionFactor
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap1519 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap1519.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap1519.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1520 = DBS06ReportUtil.retrieveValueForElement(field.getCreditConversionFactor(), explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap1519);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1521 = DBS06ReportUtil.retrieveFieldDataForElement(field.getCreditConversionFactor(), explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap1519, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1521 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1521.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1521.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1521.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1521.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1521.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1521.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1520 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1520)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisContext1518 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap1519 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisContext1518, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    PercentItemType explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1523 = new PercentItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1523.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisContext1518);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1523.setUnitRef(pure1517);
                                        explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1523.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1523.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1520));
                                    
                                    
                                    JAXBElement<PercentItemType> explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1522 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createCreditConversionFactor(explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1523);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1522);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit pure1524 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                                pure1524 = createUnitIfNotExist(pure1524, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - CreditConversionFactor
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap1526 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap1526.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap1526.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1527 = DBS06ReportUtil.retrieveValueForElement(field.getCreditConversionFactor(), explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap1526);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1528 = DBS06ReportUtil.retrieveFieldDataForElement(field.getCreditConversionFactor(), explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap1526, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1528 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1528.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1528.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1528.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1528.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1528.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1528.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1527 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1527)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisContext1525 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap1526 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisContext1525, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    PercentItemType explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1530 = new PercentItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1530.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisContext1525);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1530.setUnitRef(pure1524);
                                        explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1530.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1530.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1527));
                                    
                                    
                                    JAXBElement<PercentItemType> explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1529 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createCreditConversionFactor(explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1530);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1529);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit pure1531 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                                pure1531 = createUnitIfNotExist(pure1531, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - CreditConversionFactor
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap1533 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap1533.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap1533.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1534 = DBS06ReportUtil.retrieveValueForElement(field.getCreditConversionFactor(), explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap1533);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1535 = DBS06ReportUtil.retrieveFieldDataForElement(field.getCreditConversionFactor(), explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap1533, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1535 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1535.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1535.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1535.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1535.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1535.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1535.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1534 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1534)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisContext1532 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap1533 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisContext1532, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    PercentItemType explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1537 = new PercentItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1537.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisContext1532);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1537.setUnitRef(pure1531);
                                        explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1537.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1537.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1534));
                                    
                                    
                                    JAXBElement<PercentItemType> explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1536 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createCreditConversionFactor(explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1537);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1536);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit pure1538 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                                pure1538 = createUnitIfNotExist(pure1538, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - CreditConversionFactor
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap1540 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap1540.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap1540.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1541 = DBS06ReportUtil.retrieveValueForElement(field.getCreditConversionFactor(), explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap1540);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1542 = DBS06ReportUtil.retrieveFieldDataForElement(field.getCreditConversionFactor(), explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap1540, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1542 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1542.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1542.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1542.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1542.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1542.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1542.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1541 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1541)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisContext1539 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap1540 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisContext1539, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    PercentItemType explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1544 = new PercentItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1544.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisContext1539);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1544.setUnitRef(pure1538);
                                        explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1544.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1544.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1541));
                                    
                                    
                                    JAXBElement<PercentItemType> explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1543 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createCreditConversionFactor(explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1544);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1543);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit pure1545 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                                pure1545 = createUnitIfNotExist(pure1545, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - CreditConversionFactor
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap1547 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap1547.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap1547.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1548 = DBS06ReportUtil.retrieveValueForElement(field.getCreditConversionFactor(), explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap1547);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1549 = DBS06ReportUtil.retrieveFieldDataForElement(field.getCreditConversionFactor(), explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap1547, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1549 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1549.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1549.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1549.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1549.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1549.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1549.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1548 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1548)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisContext1546 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap1547 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisContext1546, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    PercentItemType explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1551 = new PercentItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1551.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisContext1546);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1551.setUnitRef(pure1545);
                                        explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1551.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1551.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1548));
                                    
                                    
                                    JAXBElement<PercentItemType> explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1550 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createCreditConversionFactor(explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1551);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1550);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit pure1552 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                                pure1552 = createUnitIfNotExist(pure1552, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - CreditConversionFactor
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap1554 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap1554.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap1554.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1555 = DBS06ReportUtil.retrieveValueForElement(field.getCreditConversionFactor(), explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap1554);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1556 = DBS06ReportUtil.retrieveFieldDataForElement(field.getCreditConversionFactor(), explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap1554, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1556 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1556.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1556.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1556.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1556.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1556.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1556.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1555 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1555)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisContext1553 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap1554 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisContext1553, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    PercentItemType explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1558 = new PercentItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1558.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisContext1553);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1558.setUnitRef(pure1552);
                                        explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1558.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1558.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1555));
                                    
                                    
                                    JAXBElement<PercentItemType> explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1557 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createCreditConversionFactor(explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1558);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1557);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                        
                    
                    
                    return "";
                    }

                
                    
                
                // if typemembers exist
                
                
                
                // create variable for subclass DBSLeverageRatioConsolidated_Layout3 if any typeMembers then List or Single
                //DBSLeverageRatioConsolidated_Layout3 dBSLeverageRatioConsolidated_Layout3 = mainReportData.getDBSLeverageRatioConsolidated_Layout3();
                
                    private String dBSLeverageRatioConsolidated_Layout3Method(DBSLeverageRatioConsolidated_Layout3 dBSLeverageRatioConsolidated_Layout3, List<String> contextIdentifiers,  List<Context> contextElements, List<Object> bodyElements, List<String> unitIdentifiers, List<Unit> unitElements, String bankCode, String startDateDefault, String endDateDefault, String periodDateDefault)
                
                    {
                        String startDate = startDateDefault;
                        String endDate = endDateDefault;
                        String periodDate = periodDateDefault;
                    DBSLeverageRatioConsolidated_Layout3 field = dBSLeverageRatioConsolidated_Layout3;
                    
                    
                    
            
                    
                    
                        
                            
                            
                                
                                Unit INR1559 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1559 = createUnitIfNotExist(INR1559, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1561 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1561.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1561.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1562 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1561);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1563 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1561, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1563 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1563.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1563.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1563.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1563.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1563.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1563.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1562 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1562)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1560 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1561 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1560, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1565 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1565.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1560);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1565.setUnitRef(INR1559);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1565.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1565.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1562));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1564 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1565);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1564);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR1566 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1566 = createUnitIfNotExist(INR1566, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1568 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1568.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1568.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1569 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1568);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1570 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1568, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1570 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1570.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1570.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1570.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1570.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1570.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1570.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1569 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1569)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1567 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1568 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1567, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1572 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1572.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1567);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1572.setUnitRef(INR1566);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1572.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1572.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1569));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1571 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1572);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1571);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR1573 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1573 = createUnitIfNotExist(INR1573, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1575 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1575.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1575.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1576 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1575);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1577 = DBS06ReportUtil.retrieveFieldDataForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1575, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1577 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1577.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1577.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1577.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1577.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1577.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1577.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1576 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1576)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1574 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1575 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1574, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1579 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1579.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1574);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1579.setUnitRef(INR1573);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1579.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1579.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1576));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1578 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createPotentialFutureExposure(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1579);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1578);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR1580 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1580 = createUnitIfNotExist(INR1580, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1582 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1582.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1582.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1583 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1582);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1584 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1582, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1584 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1584.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1584.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1584.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1584.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1584.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1584.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1583 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1583)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1581 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1582 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1581, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1586 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1586.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1581);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1586.setUnitRef(INR1580);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1586.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1586.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1583));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1585 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1586);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1585);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR1587 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1587 = createUnitIfNotExist(INR1587, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1589 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1589.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1589.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1590 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1589);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1591 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1589, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1591 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1591.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1591.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1591.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1591.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1591.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1591.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1590 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1590)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1588 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1589 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1588, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1593 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1593.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1588);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1593.setUnitRef(INR1587);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1593.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1593.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1590));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1592 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1593);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1592);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR1594 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1594 = createUnitIfNotExist(INR1594, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1596 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1596.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1596.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1597 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1596);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1598 = DBS06ReportUtil.retrieveFieldDataForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1596, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1598 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1598.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1598.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1598.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1598.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1598.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1598.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1597 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1597)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1595 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1596 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1595, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1600 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1600.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1595);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1600.setUnitRef(INR1594);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1600.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1600.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1597));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1599 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createPotentialFutureExposure(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1600);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1599);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR1601 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1601 = createUnitIfNotExist(INR1601, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1603 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1603.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1603.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1604 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1603);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1605 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1603, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1605 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1605.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1605.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1605.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1605.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1605.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1605.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1604 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1604)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1602 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1603 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1602, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1607 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1607.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1602);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1607.setUnitRef(INR1601);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1607.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1607.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1604));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1606 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1607);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1606);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR1608 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1608 = createUnitIfNotExist(INR1608, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1610 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1610.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1610.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1611 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1610);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1612 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1610, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1612 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1612.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1612.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1612.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1612.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1612.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1612.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1611 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1611)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1609 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1610 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1609, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1614 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1614.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1609);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1614.setUnitRef(INR1608);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1614.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1614.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1611));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1613 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1614);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1613);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR1615 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1615 = createUnitIfNotExist(INR1615, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1617 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1617.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1617.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1618 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1617);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1619 = DBS06ReportUtil.retrieveFieldDataForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1617, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1619 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1619.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1619.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1619.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1619.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1619.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1619.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1618 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1618)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1616 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1617 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1616, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1621 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1621.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1616);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1621.setUnitRef(INR1615);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1621.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1621.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1618));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1620 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createPotentialFutureExposure(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1621);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1620);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR1622 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1622 = createUnitIfNotExist(INR1622, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1624 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1624.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1624.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1625 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1624);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1626 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1624, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1626 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1626.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1626.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1626.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1626.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1626.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1626.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1625 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1625)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1623 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1624 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1623, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1628 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1628.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1623);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1628.setUnitRef(INR1622);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1628.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1628.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1625));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1627 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1628);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1627);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR1629 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1629 = createUnitIfNotExist(INR1629, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1631 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1631.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1631.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1632 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1631);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1633 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1631, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1633 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1633.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1633.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1633.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1633.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1633.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1633.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1632 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1632)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1630 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1631 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1630, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1635 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1635.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1630);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1635.setUnitRef(INR1629);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1635.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1635.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1632));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1634 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1635);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1634);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR1636 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1636 = createUnitIfNotExist(INR1636, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1638 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1638.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1638.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1639 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1638);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1640 = DBS06ReportUtil.retrieveFieldDataForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1638, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1640 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1640.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1640.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1640.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1640.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1640.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1640.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1639 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1639)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1637 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1638 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1637, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1642 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1642.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1637);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1642.setUnitRef(INR1636);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1642.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1642.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1639));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1641 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createPotentialFutureExposure(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1642);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1641);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR1643 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1643 = createUnitIfNotExist(INR1643, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1645 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1645.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1645.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1646 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1645);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1647 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1645, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1647 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1647.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1647.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1647.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1647.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1647.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1647.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1646 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1646)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1644 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1645 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1644, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1649 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1649.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1644);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1649.setUnitRef(INR1643);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1649.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1649.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1646));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1648 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1649);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1648);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR1650 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1650 = createUnitIfNotExist(INR1650, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1652 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1652.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1652.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1653 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1652);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1654 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1652, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1654 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1654.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1654.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1654.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1654.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1654.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1654.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1653 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1653)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1651 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1652 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1651, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1656 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1656.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1651);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1656.setUnitRef(INR1650);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1656.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1656.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1653));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1655 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1656);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1655);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR1657 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1657 = createUnitIfNotExist(INR1657, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1659 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1659.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1659.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1660 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1659);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1661 = DBS06ReportUtil.retrieveFieldDataForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1659, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1661 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1661.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1661.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1661.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1661.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1661.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1661.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1660 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1660)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1658 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1659 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1658, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1663 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1663.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1658);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1663.setUnitRef(INR1657);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1663.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1663.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1660));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1662 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createPotentialFutureExposure(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1663);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1662);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR1664 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1664 = createUnitIfNotExist(INR1664, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1666 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1666.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1666.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1667 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1666);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1668 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1666, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1668 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1668.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1668.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1668.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1668.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1668.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1668.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1667 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1667)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1665 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1666 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1665, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1670 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1670.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1665);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1670.setUnitRef(INR1664);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1670.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1670.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1667));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1669 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1670);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1669);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR1671 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1671 = createUnitIfNotExist(INR1671, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1673 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1673.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1673.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1674 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1673);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1675 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1673, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1675 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1675.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1675.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1675.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1675.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1675.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1675.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1674 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1674)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1672 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1673 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1672, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1677 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1677.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1672);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1677.setUnitRef(INR1671);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1677.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1677.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1674));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1676 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1677);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1676);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR1678 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1678 = createUnitIfNotExist(INR1678, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1680 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1680.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1680.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1681 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1680);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1682 = DBS06ReportUtil.retrieveFieldDataForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1680, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1682 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1682.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1682.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1682.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1682.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1682.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1682.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1681 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1681)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1679 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1680 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1679, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1684 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1684.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1679);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1684.setUnitRef(INR1678);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1684.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1684.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1681));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1683 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createPotentialFutureExposure(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1684);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1683);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR1685 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1685 = createUnitIfNotExist(INR1685, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1687 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1687.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1687.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1688 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1687);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1689 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1687, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1689 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1689.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1689.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1689.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1689.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1689.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1689.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1688 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1688)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1686 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1687 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1686, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1691 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1691.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1686);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1691.setUnitRef(INR1685);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1691.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1691.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1688));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1690 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1691);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1690);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR1692 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1692 = createUnitIfNotExist(INR1692, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1694 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1694.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1694.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1695 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1694);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1696 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1694, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1696 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1696.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1696.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1696.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1696.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1696.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1696.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1695 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1695)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1693 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1694 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1693, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1698 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1698.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1693);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1698.setUnitRef(INR1692);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1698.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1698.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1695));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1697 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1698);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1697);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR1699 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1699 = createUnitIfNotExist(INR1699, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1701 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1701.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1701.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1702 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1701);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1703 = DBS06ReportUtil.retrieveFieldDataForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1701, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1703 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1703.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1703.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1703.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1703.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1703.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1703.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1702 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1702)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1700 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1701 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1700, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1705 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1705.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1700);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1705.setUnitRef(INR1699);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1705.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1705.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1702));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1704 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createPotentialFutureExposure(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1705);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1704);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR1706 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1706 = createUnitIfNotExist(INR1706, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1708 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1708.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1708.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1709 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1708);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1710 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1708, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1710 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1710.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1710.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1710.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1710.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1710.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1710.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1709 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1709)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1707 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1708 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1707, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1712 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1712.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1707);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1712.setUnitRef(INR1706);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1712.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1712.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1709));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1711 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1712);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1711);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR1713 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1713 = createUnitIfNotExist(INR1713, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1715 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1715.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1715.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1716 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1715);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1717 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1715, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1717 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1717.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1717.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1717.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1717.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1717.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1717.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1716 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1716)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1714 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1715 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1714, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1719 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1719.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1714);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1719.setUnitRef(INR1713);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1719.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1719.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1716));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1718 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1719);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1718);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR1720 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1720 = createUnitIfNotExist(INR1720, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1722 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1722.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1722.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1723 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1722);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1724 = DBS06ReportUtil.retrieveFieldDataForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1722, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1724 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1724.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1724.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1724.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1724.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1724.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1724.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1723 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1723)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1721 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1722 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1721, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1726 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1726.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1721);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1726.setUnitRef(INR1720);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1726.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1726.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1723));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1725 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createPotentialFutureExposure(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1726);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1725);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR1727 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1727 = createUnitIfNotExist(INR1727, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1729 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1729.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1729.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1730 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1729);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1731 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1729, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1731 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1731.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1731.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1731.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1731.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1731.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1731.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1730 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1730)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1728 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1729 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1728, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1733 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1733.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1728);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1733.setUnitRef(INR1727);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1733.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1733.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1730));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1732 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1733);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1732);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR1734 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1734 = createUnitIfNotExist(INR1734, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1736 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1736.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1736.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1737 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1736);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1738 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1736, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1738 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1738.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1738.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1738.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1738.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1738.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1738.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1737 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1737)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1735 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1736 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1735, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1740 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1740.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1735);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1740.setUnitRef(INR1734);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1740.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1740.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1737));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1739 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1740);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1739);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR1741 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1741 = createUnitIfNotExist(INR1741, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1743 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1743.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1743.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1744 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1743);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1745 = DBS06ReportUtil.retrieveFieldDataForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1743, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1745 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1745.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1745.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1745.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1745.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1745.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1745.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1744 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1744)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1742 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1743 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1742, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1747 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1747.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1742);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1747.setUnitRef(INR1741);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1747.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1747.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1744));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1746 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createPotentialFutureExposure(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1747);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1746);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR1748 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1748 = createUnitIfNotExist(INR1748, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1750 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1750.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1750.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1751 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1750);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1752 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1750, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1752 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1752.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1752.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1752.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1752.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1752.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1752.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1751 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1751)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1749 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1750 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1749, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1754 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1754.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1749);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1754.setUnitRef(INR1748);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1754.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1754.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1751));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1753 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1754);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1753);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR1755 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1755 = createUnitIfNotExist(INR1755, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1757 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1757.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1757.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1758 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1757);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1759 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1757, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1759 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1759.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1759.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1759.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1759.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1759.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1759.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1758 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1758)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1756 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1757 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1756, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1761 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1761.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1756);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1761.setUnitRef(INR1755);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1761.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1761.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1758));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1760 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1761);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1760);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR1762 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1762 = createUnitIfNotExist(INR1762, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1764 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1764.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1764.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1765 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1764);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1766 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1764, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1766 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1766.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1766.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1766.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1766.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1766.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1766.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1765 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1765)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1763 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1764 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1763, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1768 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1768.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1763);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1768.setUnitRef(INR1762);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1768.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1768.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1765));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1767 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1768);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1767);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR1769 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1769 = createUnitIfNotExist(INR1769, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1771 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1771.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1771.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1772 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1771);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1773 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1771, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1773 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1773.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1773.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1773.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1773.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1773.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1773.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1772 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1772)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1770 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1771 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1770, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1775 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1775.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1770);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1775.setUnitRef(INR1769);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1775.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1775.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1772));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1774 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1775);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1774);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR1776 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1776 = createUnitIfNotExist(INR1776, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1778 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1778.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1778.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1779 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1778);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1780 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1778, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1780 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1780.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1780.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1780.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1780.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1780.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1780.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1779 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1779)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1777 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1778 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1777, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1782 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1782.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1777);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1782.setUnitRef(INR1776);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1782.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1782.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1779));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1781 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1782);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1781);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR1783 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1783 = createUnitIfNotExist(INR1783, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1785 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1785.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1785.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1786 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1785);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1787 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1785, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1787 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1787.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1787.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1787.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1787.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1787.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1787.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1786 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1786)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1784 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1785 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1784, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1789 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1789.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1784);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1789.setUnitRef(INR1783);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1789.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1789.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1786));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1788 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1789);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1788);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR1790 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1790 = createUnitIfNotExist(INR1790, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1792 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1792.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1792.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1793 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1792);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1794 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1792, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1794 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1794.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1794.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1794.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1794.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1794.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1794.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1793 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1793)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1791 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1792 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1791, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1796 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1796.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1791);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1796.setUnitRef(INR1790);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1796.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1796.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1793));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1795 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1796);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1795);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR1797 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1797 = createUnitIfNotExist(INR1797, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1799 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1799.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1799.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1800 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1799);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1801 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1799, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1801 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1801.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1801.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1801.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1801.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1801.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1801.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1800 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1800)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1798 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1799 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1798, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1803 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1803.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1798);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1803.setUnitRef(INR1797);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1803.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1803.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1800));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1802 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1803);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1802);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR1804 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1804 = createUnitIfNotExist(INR1804, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1806 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1806.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1806.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1807 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1806);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1808 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1806, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1808 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1808.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1808.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1808.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1808.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1808.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1808.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1807 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1807)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1805 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1806 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1805, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1810 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1810.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1805);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1810.setUnitRef(INR1804);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1810.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1810.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1807));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1809 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1810);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1809);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR1811 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1811 = createUnitIfNotExist(INR1811, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1813 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1813.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1813.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1814 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1813);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1815 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1813, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1815 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1815.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1815.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1815.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1815.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1815.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1815.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1814 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1814)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1812 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1813 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1812, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1817 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1817.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1812);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1817.setUnitRef(INR1811);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1817.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1817.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1814));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1816 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1817);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1816);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR1818 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1818 = createUnitIfNotExist(INR1818, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1820 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1820.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1820.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1821 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1820);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1822 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1820, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1822 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1822.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1822.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1822.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1822.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1822.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1822.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1821 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1821)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1819 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1820 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1819, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1824 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1824.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1819);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1824.setUnitRef(INR1818);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1824.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1824.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1821));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1823 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1824);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1823);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR1825 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1825 = createUnitIfNotExist(INR1825, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1827 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1827.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1827.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1828 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1827);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1829 = DBS06ReportUtil.retrieveFieldDataForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1827, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1829 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1829.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1829.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1829.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1829.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1829.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1829.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1828 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1828)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1826 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1827 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1826, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1831 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1831.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1826);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1831.setUnitRef(INR1825);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1831.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1831.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1828));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1830 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createPotentialFutureExposure(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1831);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1830);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR1832 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1832 = createUnitIfNotExist(INR1832, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - ExposureAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisMap1834 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisMap1834.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisMap1834.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1835 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisMap1834);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1836 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisMap1834, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1836 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1836.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1836.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1836.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1836.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1836.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1836.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1835 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1835)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisContext1833 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisMap1834 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisContext1833, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1838 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1838.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisContext1833);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1838.setUnitRef(INR1832);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1838.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1838.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1835));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1837 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1838);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1837);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                        
                    
                        
                            
                            
                                
                                Unit INR1839 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1839 = createUnitIfNotExist(INR1839, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1841 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1841.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1841.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1842 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1841);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1843 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1841, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1843 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1843.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1843.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1843.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1843.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1843.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1843.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1842 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1842)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1840 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1841 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1840, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1845 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1845.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1840);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1845.setUnitRef(INR1839);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1845.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1845.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1842));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1844 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1845);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1844);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR1846 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1846 = createUnitIfNotExist(INR1846, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1848 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1848.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1848.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1849 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1848);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1850 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1848, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1850 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1850.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1850.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1850.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1850.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1850.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1850.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1849 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1849)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1847 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1848 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1847, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1852 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1852.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1847);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1852.setUnitRef(INR1846);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1852.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1852.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1849));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1851 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1852);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1851);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR1853 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1853 = createUnitIfNotExist(INR1853, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1855 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1855.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1855.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1856 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1855);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1857 = DBS06ReportUtil.retrieveFieldDataForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1855, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1857 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1857.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1857.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1857.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1857.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1857.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1857.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1856 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1856)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1854 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1855 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1854, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1859 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1859.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1854);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1859.setUnitRef(INR1853);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1859.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1859.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1856));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1858 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createPotentialFutureExposure(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1859);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1858);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR1860 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1860 = createUnitIfNotExist(INR1860, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1862 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1862.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1862.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1863 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1862);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1864 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1862, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1864 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1864.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1864.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1864.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1864.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1864.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1864.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1863 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1863)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1861 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1862 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1861, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1866 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1866.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1861);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1866.setUnitRef(INR1860);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1866.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1866.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1863));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1865 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1866);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1865);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR1867 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1867 = createUnitIfNotExist(INR1867, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1869 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1869.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1869.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1870 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1869);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1871 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1869, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1871 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1871.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1871.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1871.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1871.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1871.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1871.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1870 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1870)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1868 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1869 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1868, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1873 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1873.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1868);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1873.setUnitRef(INR1867);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1873.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1873.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1870));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1872 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1873);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1872);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR1874 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1874 = createUnitIfNotExist(INR1874, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1876 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1876.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1876.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1877 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1876);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1878 = DBS06ReportUtil.retrieveFieldDataForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1876, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1878 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1878.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1878.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1878.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1878.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1878.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1878.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1877 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1877)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1875 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1876 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1875, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1880 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1880.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1875);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1880.setUnitRef(INR1874);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1880.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1880.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1877));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1879 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createPotentialFutureExposure(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1880);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1879);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR1881 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1881 = createUnitIfNotExist(INR1881, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1883 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1883.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1883.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1884 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1883);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1885 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1883, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1885 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1885.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1885.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1885.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1885.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1885.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1885.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1884 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1884)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1882 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1883 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1882, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1887 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1887.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1882);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1887.setUnitRef(INR1881);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1887.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1887.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1884));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1886 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1887);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1886);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR1888 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1888 = createUnitIfNotExist(INR1888, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1890 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1890.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1890.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1891 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1890);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1892 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1890, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1892 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1892.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1892.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1892.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1892.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1892.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1892.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1891 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1891)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1889 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1890 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1889, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1894 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1894.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1889);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1894.setUnitRef(INR1888);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1894.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1894.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1891));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1893 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1894);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1893);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR1895 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1895 = createUnitIfNotExist(INR1895, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1897 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1897.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1897.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1898 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1897);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1899 = DBS06ReportUtil.retrieveFieldDataForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1897, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1899 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1899.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1899.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1899.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1899.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1899.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1899.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1898 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1898)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1896 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1897 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1896, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1901 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1901.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1896);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1901.setUnitRef(INR1895);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1901.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1901.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1898));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1900 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createPotentialFutureExposure(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1901);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1900);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR1902 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1902 = createUnitIfNotExist(INR1902, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1904 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1904.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1904.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1905 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1904);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1906 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1904, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1906 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1906.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1906.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1906.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1906.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1906.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1906.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1905 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1905)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1903 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1904 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1903, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1908 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1908.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1903);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1908.setUnitRef(INR1902);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1908.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1908.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1905));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1907 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1908);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1907);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR1909 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1909 = createUnitIfNotExist(INR1909, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1911 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1911.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1911.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1912 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1911);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1913 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1911, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1913 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1913.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1913.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1913.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1913.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1913.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1913.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1912 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1912)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1910 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1911 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1910, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1915 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1915.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1910);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1915.setUnitRef(INR1909);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1915.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1915.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1912));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1914 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1915);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1914);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR1916 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1916 = createUnitIfNotExist(INR1916, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1918 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1918.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1918.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1919 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1918);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1920 = DBS06ReportUtil.retrieveFieldDataForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1918, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1920 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1920.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1920.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1920.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1920.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1920.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1920.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1919 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1919)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1917 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1918 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1917, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1922 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1922.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1917);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1922.setUnitRef(INR1916);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1922.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1922.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1919));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1921 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createPotentialFutureExposure(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1922);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1921);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR1923 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1923 = createUnitIfNotExist(INR1923, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1925 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1925.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1925.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1926 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1925);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1927 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1925, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1927 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1927.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1927.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1927.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1927.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1927.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1927.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1926 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1926)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1924 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1925 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1924, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1929 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1929.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1924);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1929.setUnitRef(INR1923);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1929.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1929.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1926));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1928 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1929);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1928);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR1930 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1930 = createUnitIfNotExist(INR1930, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1932 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1932.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1932.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1933 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1932);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1934 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1932, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1934 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1934.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1934.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1934.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1934.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1934.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1934.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1933 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1933)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1931 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1932 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1931, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1936 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1936.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1931);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1936.setUnitRef(INR1930);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1936.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1936.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1933));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1935 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1936);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1935);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR1937 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1937 = createUnitIfNotExist(INR1937, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1939 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1939.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1939.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1940 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1939);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1941 = DBS06ReportUtil.retrieveFieldDataForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1939, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1941 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1941.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1941.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1941.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1941.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1941.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1941.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1940 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1940)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1938 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1939 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1938, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1943 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1943.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1938);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1943.setUnitRef(INR1937);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1943.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1943.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1940));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1942 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createPotentialFutureExposure(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1943);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1942);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR1944 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1944 = createUnitIfNotExist(INR1944, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1946 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1946.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1946.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1947 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1946);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1948 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1946, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1948 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1948.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1948.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1948.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1948.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1948.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1948.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1947 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1947)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1945 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1946 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1945, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1950 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1950.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1945);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1950.setUnitRef(INR1944);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1950.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1950.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1947));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1949 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1950);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1949);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR1951 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1951 = createUnitIfNotExist(INR1951, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1953 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1953.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1953.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1954 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1953);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1955 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1953, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1955 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1955.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1955.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1955.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1955.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1955.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1955.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1954 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1954)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1952 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1953 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1952, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1957 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1957.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1952);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1957.setUnitRef(INR1951);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1957.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1957.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1954));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1956 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1957);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1956);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR1958 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1958 = createUnitIfNotExist(INR1958, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1960 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1960.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1960.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1961 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1960);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1962 = DBS06ReportUtil.retrieveFieldDataForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1960, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1962 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1962.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1962.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1962.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1962.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1962.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1962.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1961 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1961)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1959 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1960 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1959, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1964 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1964.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1959);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1964.setUnitRef(INR1958);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1964.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1964.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1961));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1963 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createPotentialFutureExposure(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1964);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1963);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR1965 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1965 = createUnitIfNotExist(INR1965, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1967 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1967.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1967.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1968 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1967);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1969 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1967, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1969 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1969.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1969.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1969.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1969.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1969.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1969.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1968 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1968)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1966 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1967 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1966, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1971 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1971.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1966);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1971.setUnitRef(INR1965);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1971.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1971.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1968));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1970 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1971);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1970);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR1972 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1972 = createUnitIfNotExist(INR1972, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1974 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1974.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1974.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1975 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1974);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1976 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1974, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1976 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1976.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1976.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1976.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1976.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1976.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1976.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1975 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1975)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1973 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1974 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1973, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1978 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1978.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1973);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1978.setUnitRef(INR1972);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1978.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1978.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1975));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1977 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1978);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1977);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR1979 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1979 = createUnitIfNotExist(INR1979, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1981 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1981.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1981.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1982 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1981);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1983 = DBS06ReportUtil.retrieveFieldDataForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1981, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1983 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1983.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1983.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1983.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1983.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1983.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1983.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1982 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1982)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1980 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1981 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1980, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1985 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1985.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1980);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1985.setUnitRef(INR1979);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1985.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1985.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1982));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1984 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createPotentialFutureExposure(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1985);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1984);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR1986 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1986 = createUnitIfNotExist(INR1986, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1988 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1988.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1988.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1989 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1988);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1990 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1988, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1990 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1990.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1990.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1990.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1990.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1990.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1990.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1989 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1989)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1987 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1988 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1987, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1992 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1992.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1987);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1992.setUnitRef(INR1986);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1992.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1992.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1989));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1991 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1992);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1991);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR1993 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1993 = createUnitIfNotExist(INR1993, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1995 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1995.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1995.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1996 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1995);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1997 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1995, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1997 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1997.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1997.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1997.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1997.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1997.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1997.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1996 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1996)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1994 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1995 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1994, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1999 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1999.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1994);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1999.setUnitRef(INR1993);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1999.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1999.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1996));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1998 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1999);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1998);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR2000 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2000 = createUnitIfNotExist(INR2000, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2002 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2002.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2002.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2003 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2002);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2004 = DBS06ReportUtil.retrieveFieldDataForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2002, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2004 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2004.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2004.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2004.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2004.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2004.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2004.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2003 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2003)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2001 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2002 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2001, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2006 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2006.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2001);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2006.setUnitRef(INR2000);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2006.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2006.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2003));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2005 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createPotentialFutureExposure(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2006);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2005);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR2007 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2007 = createUnitIfNotExist(INR2007, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2009 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2009.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2009.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2010 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2009);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2011 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2009, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2011 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2011.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2011.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2011.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2011.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2011.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2011.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2010 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2010)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2008 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2009 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2008, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2013 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2013.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2008);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2013.setUnitRef(INR2007);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2013.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2013.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2010));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2012 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2013);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2012);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR2014 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2014 = createUnitIfNotExist(INR2014, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2016 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2016.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2016.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2017 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2016);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2018 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2016, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2018 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2018.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2018.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2018.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2018.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2018.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2018.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2017 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2017)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2015 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2016 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2015, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2020 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2020.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2015);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2020.setUnitRef(INR2014);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2020.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2020.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2017));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2019 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2020);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2019);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR2021 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2021 = createUnitIfNotExist(INR2021, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2023 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2023.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2023.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2024 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2023);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2025 = DBS06ReportUtil.retrieveFieldDataForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2023, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2025 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2025.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2025.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2025.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2025.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2025.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2025.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2024 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2024)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2022 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2023 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2022, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2027 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2027.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2022);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2027.setUnitRef(INR2021);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2027.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2027.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2024));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2026 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createPotentialFutureExposure(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2027);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2026);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR2028 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2028 = createUnitIfNotExist(INR2028, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2030 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2030.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2030.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2031 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2030);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2032 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2030, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2032 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2032.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2032.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2032.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2032.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2032.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2032.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2031 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2031)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2029 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2030 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2029, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2034 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2034.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2029);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2034.setUnitRef(INR2028);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2034.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2034.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2031));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2033 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2034);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2033);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR2035 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2035 = createUnitIfNotExist(INR2035, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2037 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2037.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2037.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2038 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2037);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2039 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2037, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2039 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2039.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2039.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2039.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2039.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2039.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2039.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2038 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2038)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2036 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2037 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2036, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2041 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2041.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2036);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2041.setUnitRef(INR2035);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2041.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2041.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2038));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2040 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2041);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2040);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR2042 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2042 = createUnitIfNotExist(INR2042, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2044 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2044.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2044.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2045 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2044);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2046 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2044, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2046 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2046.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2046.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2046.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2046.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2046.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2046.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2045 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2045)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2043 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2044 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2043, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2048 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2048.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2043);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2048.setUnitRef(INR2042);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2048.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2048.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2045));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2047 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2048);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2047);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR2049 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2049 = createUnitIfNotExist(INR2049, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2051 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2051.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2051.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2052 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2051);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2053 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2051, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2053 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2053.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2053.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2053.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2053.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2053.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2053.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2052 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2052)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2050 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2051 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2050, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2055 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2055.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2050);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2055.setUnitRef(INR2049);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2055.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2055.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2052));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2054 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2055);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2054);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR2056 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2056 = createUnitIfNotExist(INR2056, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2058 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2058.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2058.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2059 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2058);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2060 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2058, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2060 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2060.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2060.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2060.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2060.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2060.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2060.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2059 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2059)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2057 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2058 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2057, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2062 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2062.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2057);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2062.setUnitRef(INR2056);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2062.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2062.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2059));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2061 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2062);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2061);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR2063 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2063 = createUnitIfNotExist(INR2063, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2065 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2065.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2065.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2066 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2065);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2067 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2065, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2067 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2067.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2067.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2067.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2067.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2067.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2067.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2066 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2066)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2064 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2065 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2064, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2069 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2069.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2064);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2069.setUnitRef(INR2063);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2069.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2069.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2066));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2068 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2069);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2068);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR2070 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2070 = createUnitIfNotExist(INR2070, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2072 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2072.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2072.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2073 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2072);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2074 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2072, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2074 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2074.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2074.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2074.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2074.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2074.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2074.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2073 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2073)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2071 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2072 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2071, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2076 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2076.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2071);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2076.setUnitRef(INR2070);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2076.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2076.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2073));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2075 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2076);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2075);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR2077 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2077 = createUnitIfNotExist(INR2077, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2079 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2079.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2079.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2080 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2079);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2081 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2079, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2081 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2081.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2081.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2081.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2081.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2081.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2081.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2080 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2080)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2078 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2079 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2078, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2083 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2083.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2078);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2083.setUnitRef(INR2077);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2083.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2083.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2080));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2082 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2083);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2082);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR2084 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2084 = createUnitIfNotExist(INR2084, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2086 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2086.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2086.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2087 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2086);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2088 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2086, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2088 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2088.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2088.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2088.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2088.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2088.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2088.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2087 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2087)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2085 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2086 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2085, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2090 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2090.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2085);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2090.setUnitRef(INR2084);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2090.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2090.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2087));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2089 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2090);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2089);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR2091 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2091 = createUnitIfNotExist(INR2091, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2093 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2093.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2093.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2094 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2093);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2095 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2093, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2095 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2095.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2095.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2095.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2095.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2095.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2095.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2094 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2094)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2092 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2093 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2092, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2097 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2097.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2092);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2097.setUnitRef(INR2091);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2097.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2097.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2094));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2096 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2097);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2096);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR2098 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2098 = createUnitIfNotExist(INR2098, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2100 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2100.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2100.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2101 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2100);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2102 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2100, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2102 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2102.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2102.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2102.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2102.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2102.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2102.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2101 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2101)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2099 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2100 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2099, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2104 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2104.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2099);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2104.setUnitRef(INR2098);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2104.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2104.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2101));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2103 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2104);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2103);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR2105 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2105 = createUnitIfNotExist(INR2105, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2107 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2107.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2107.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2108 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2107);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2109 = DBS06ReportUtil.retrieveFieldDataForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2107, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2109 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2109.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2109.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2109.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2109.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2109.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2109.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2108 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2108)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2106 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2107 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2106, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2111 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2111.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2106);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2111.setUnitRef(INR2105);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2111.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2111.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2108));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2110 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createPotentialFutureExposure(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2111);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2110);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR2112 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2112 = createUnitIfNotExist(INR2112, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - ExposureAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisMap2114 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisMap2114.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisMap2114.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2115 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisMap2114);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2116 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisMap2114, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2116 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2116.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2116.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2116.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2116.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2116.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2116.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2115 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2115)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisContext2113 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisMap2114 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisContext2113, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2118 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2118.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisContext2113);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2118.setUnitRef(INR2112);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2118.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2118.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2115));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2117 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2118);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2117);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                        
                    
                        
                            
                            
                                
                                Unit INR2119 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2119 = createUnitIfNotExist(INR2119, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2121 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2121.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2121.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2122 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2121);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2123 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2121, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2123 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2123.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2123.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2123.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2123.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2123.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2123.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2122 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2122)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2120 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2121 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2120, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2125 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2125.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2120);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2125.setUnitRef(INR2119);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2125.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2125.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2122));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2124 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2125);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2124);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR2126 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2126 = createUnitIfNotExist(INR2126, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2128 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2128.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2128.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2129 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2128);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2130 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2128, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2130 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2130.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2130.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2130.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2130.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2130.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2130.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2129 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2129)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2127 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2128 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2127, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2132 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2132.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2127);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2132.setUnitRef(INR2126);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2132.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2132.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2129));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2131 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2132);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2131);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR2133 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2133 = createUnitIfNotExist(INR2133, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2135 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2135.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2135.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2136 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2135);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2137 = DBS06ReportUtil.retrieveFieldDataForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2135, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2137 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2137.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2137.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2137.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2137.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2137.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2137.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2136 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2136)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2134 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2135 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2134, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2139 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2139.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2134);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2139.setUnitRef(INR2133);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2139.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2139.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2136));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2138 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createPotentialFutureExposure(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2139);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2138);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR2140 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2140 = createUnitIfNotExist(INR2140, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2142 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2142.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2142.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2143 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2142);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2144 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2142, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2144 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2144.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2144.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2144.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2144.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2144.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2144.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2143 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2143)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2141 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2142 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2141, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2146 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2146.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2141);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2146.setUnitRef(INR2140);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2146.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2146.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2143));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2145 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2146);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2145);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR2147 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2147 = createUnitIfNotExist(INR2147, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2149 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2149.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2149.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2150 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2149);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2151 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2149, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2151 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2151.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2151.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2151.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2151.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2151.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2151.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2150 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2150)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2148 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2149 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2148, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2153 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2153.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2148);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2153.setUnitRef(INR2147);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2153.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2153.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2150));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2152 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2153);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2152);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR2154 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2154 = createUnitIfNotExist(INR2154, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2156 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2156.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2156.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2157 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2156);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2158 = DBS06ReportUtil.retrieveFieldDataForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2156, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2158 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2158.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2158.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2158.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2158.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2158.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2158.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2157 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2157)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2155 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2156 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2155, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2160 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2160.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2155);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2160.setUnitRef(INR2154);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2160.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2160.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2157));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2159 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createPotentialFutureExposure(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2160);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2159);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR2161 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2161 = createUnitIfNotExist(INR2161, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2163 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2163.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2163.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2164 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2163);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2165 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2163, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2165 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2165.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2165.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2165.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2165.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2165.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2165.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2164 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2164)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2162 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2163 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2162, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2167 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2167.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2162);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2167.setUnitRef(INR2161);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2167.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2167.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2164));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2166 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2167);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2166);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR2168 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2168 = createUnitIfNotExist(INR2168, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2170 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2170.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2170.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2171 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2170);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2172 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2170, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2172 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2172.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2172.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2172.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2172.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2172.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2172.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2171 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2171)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2169 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2170 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2169, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2174 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2174.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2169);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2174.setUnitRef(INR2168);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2174.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2174.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2171));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2173 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2174);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2173);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR2175 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2175 = createUnitIfNotExist(INR2175, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2177 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2177.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2177.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2178 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2177);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2179 = DBS06ReportUtil.retrieveFieldDataForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2177, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2179 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2179.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2179.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2179.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2179.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2179.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2179.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2178 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2178)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2176 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2177 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2176, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2181 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2181.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2176);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2181.setUnitRef(INR2175);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2181.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2181.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2178));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2180 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createPotentialFutureExposure(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2181);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2180);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR2182 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2182 = createUnitIfNotExist(INR2182, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2184 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2184.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2184.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2185 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2184);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2186 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2184, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2186 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2186.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2186.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2186.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2186.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2186.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2186.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2185 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2185)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2183 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2184 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2183, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2188 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2188.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2183);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2188.setUnitRef(INR2182);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2188.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2188.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2185));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2187 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2188);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2187);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR2189 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2189 = createUnitIfNotExist(INR2189, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2191 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2191.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2191.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2192 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2191);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2193 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2191, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2193 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2193.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2193.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2193.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2193.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2193.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2193.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2192 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2192)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2190 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2191 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2190, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2195 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2195.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2190);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2195.setUnitRef(INR2189);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2195.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2195.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2192));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2194 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2195);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2194);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR2196 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2196 = createUnitIfNotExist(INR2196, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2198 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2198.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2198.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2199 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2198);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2200 = DBS06ReportUtil.retrieveFieldDataForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2198, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2200 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2200.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2200.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2200.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2200.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2200.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2200.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2199 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2199)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2197 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2198 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2197, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2202 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2202.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2197);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2202.setUnitRef(INR2196);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2202.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2202.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2199));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2201 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createPotentialFutureExposure(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2202);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2201);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR2203 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2203 = createUnitIfNotExist(INR2203, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2205 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2205.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2205.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2206 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2205);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2207 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2205, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2207 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2207.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2207.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2207.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2207.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2207.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2207.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2206 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2206)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2204 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2205 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2204, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2209 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2209.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2204);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2209.setUnitRef(INR2203);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2209.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2209.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2206));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2208 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2209);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2208);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR2210 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2210 = createUnitIfNotExist(INR2210, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2212 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2212.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2212.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2213 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2212);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2214 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2212, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2214 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2214.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2214.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2214.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2214.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2214.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2214.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2213 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2213)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2211 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2212 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2211, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2216 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2216.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2211);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2216.setUnitRef(INR2210);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2216.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2216.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2213));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2215 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2216);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2215);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR2217 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2217 = createUnitIfNotExist(INR2217, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2219 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2219.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2219.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2220 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2219);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2221 = DBS06ReportUtil.retrieveFieldDataForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2219, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2221 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2221.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2221.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2221.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2221.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2221.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2221.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2220 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2220)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2218 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2219 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2218, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2223 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2223.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2218);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2223.setUnitRef(INR2217);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2223.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2223.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2220));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2222 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createPotentialFutureExposure(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2223);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2222);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR2224 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2224 = createUnitIfNotExist(INR2224, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2226 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2226.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2226.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2227 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2226);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2228 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2226, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2228 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2228.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2228.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2228.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2228.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2228.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2228.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2227 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2227)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2225 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2226 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2225, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2230 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2230.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2225);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2230.setUnitRef(INR2224);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2230.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2230.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2227));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2229 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2230);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2229);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR2231 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2231 = createUnitIfNotExist(INR2231, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2233 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2233.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2233.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2234 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2233);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2235 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2233, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2235 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2235.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2235.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2235.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2235.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2235.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2235.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2234 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2234)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2232 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2233 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2232, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2237 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2237.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2232);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2237.setUnitRef(INR2231);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2237.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2237.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2234));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2236 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2237);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2236);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR2238 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2238 = createUnitIfNotExist(INR2238, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2240 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2240.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2240.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2241 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2240);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2242 = DBS06ReportUtil.retrieveFieldDataForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2240, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2242 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2242.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2242.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2242.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2242.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2242.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2242.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2241 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2241)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2239 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2240 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2239, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2244 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2244.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2239);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2244.setUnitRef(INR2238);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2244.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2244.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2241));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2243 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createPotentialFutureExposure(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2244);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2243);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR2245 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2245 = createUnitIfNotExist(INR2245, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2247 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2247.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2247.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2248 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2247);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2249 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2247, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2249 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2249.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2249.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2249.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2249.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2249.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2249.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2248 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2248)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2246 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2247 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2246, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2251 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2251.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2246);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2251.setUnitRef(INR2245);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2251.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2251.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2248));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2250 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2251);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2250);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR2252 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2252 = createUnitIfNotExist(INR2252, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2254 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2254.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2254.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2255 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2254);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2256 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2254, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2256 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2256.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2256.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2256.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2256.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2256.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2256.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2255 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2255)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2253 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2254 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2253, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2258 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2258.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2253);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2258.setUnitRef(INR2252);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2258.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2258.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2255));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2257 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2258);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2257);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR2259 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2259 = createUnitIfNotExist(INR2259, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2261 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2261.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2261.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2262 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2261);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2263 = DBS06ReportUtil.retrieveFieldDataForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2261, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2263 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2263.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2263.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2263.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2263.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2263.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2263.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2262 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2262)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2260 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2261 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2260, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2265 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2265.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2260);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2265.setUnitRef(INR2259);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2265.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2265.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2262));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2264 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createPotentialFutureExposure(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2265);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2264);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR2266 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2266 = createUnitIfNotExist(INR2266, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2268 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2268.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2268.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2269 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2268);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2270 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2268, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2270 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2270.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2270.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2270.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2270.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2270.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2270.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2269 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2269)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2267 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2268 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2267, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2272 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2272.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2267);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2272.setUnitRef(INR2266);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2272.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2272.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2269));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2271 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2272);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2271);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR2273 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2273 = createUnitIfNotExist(INR2273, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2275 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2275.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2275.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2276 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2275);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2277 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2275, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2277 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2277.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2277.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2277.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2277.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2277.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2277.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2276 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2276)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2274 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2275 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2274, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2279 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2279.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2274);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2279.setUnitRef(INR2273);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2279.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2279.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2276));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2278 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2279);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2278);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR2280 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2280 = createUnitIfNotExist(INR2280, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2282 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2282.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2282.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2283 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2282);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2284 = DBS06ReportUtil.retrieveFieldDataForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2282, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2284 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2284.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2284.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2284.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2284.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2284.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2284.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2283 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2283)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2281 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2282 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2281, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2286 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2286.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2281);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2286.setUnitRef(INR2280);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2286.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2286.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2283));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2285 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createPotentialFutureExposure(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2286);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2285);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR2287 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2287 = createUnitIfNotExist(INR2287, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2289 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2289.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2289.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2290 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2289);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2291 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2289, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2291 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2291.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2291.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2291.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2291.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2291.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2291.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2290 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2290)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2288 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2289 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2288, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2293 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2293.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2288);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2293.setUnitRef(INR2287);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2293.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2293.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2290));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2292 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2293);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2292);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR2294 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2294 = createUnitIfNotExist(INR2294, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2296 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2296.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2296.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2297 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2296);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2298 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2296, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2298 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2298.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2298.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2298.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2298.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2298.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2298.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2297 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2297)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2295 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2296 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2295, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2300 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2300.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2295);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2300.setUnitRef(INR2294);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2300.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2300.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2297));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2299 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2300);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2299);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR2301 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2301 = createUnitIfNotExist(INR2301, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2303 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2303.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2303.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2304 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2303);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2305 = DBS06ReportUtil.retrieveFieldDataForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2303, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2305 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2305.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2305.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2305.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2305.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2305.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2305.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2304 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2304)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2302 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2303 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2302, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2307 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2307.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2302);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2307.setUnitRef(INR2301);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2307.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2307.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2304));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2306 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createPotentialFutureExposure(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2307);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2306);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR2308 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2308 = createUnitIfNotExist(INR2308, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2310 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2310.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2310.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2311 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2310);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2312 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2310, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2312 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2312.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2312.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2312.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2312.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2312.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2312.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2311 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2311)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2309 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2310 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2309, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2314 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2314.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2309);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2314.setUnitRef(INR2308);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2314.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2314.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2311));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2313 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2314);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2313);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR2315 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2315 = createUnitIfNotExist(INR2315, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2317 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2317.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2317.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2318 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2317);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2319 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2317, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2319 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2319.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2319.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2319.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2319.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2319.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2319.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2318 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2318)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2316 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2317 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2316, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2321 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2321.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2316);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2321.setUnitRef(INR2315);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2321.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2321.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2318));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2320 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2321);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2320);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR2322 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2322 = createUnitIfNotExist(INR2322, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2324 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2324.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2324.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2325 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2324);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2326 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2324, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2326 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2326.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2326.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2326.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2326.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2326.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2326.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2325 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2325)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2323 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2324 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2323, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2328 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2328.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2323);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2328.setUnitRef(INR2322);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2328.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2328.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2325));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2327 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2328);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2327);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR2329 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2329 = createUnitIfNotExist(INR2329, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2331 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2331.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2331.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2332 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2331);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2333 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2331, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2333 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2333.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2333.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2333.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2333.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2333.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2333.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2332 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2332)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2330 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2331 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2330, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2335 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2335.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2330);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2335.setUnitRef(INR2329);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2335.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2335.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2332));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2334 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2335);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2334);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR2336 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2336 = createUnitIfNotExist(INR2336, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2338 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2338.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2338.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2339 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2338);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2340 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2338, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2340 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2340.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2340.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2340.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2340.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2340.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2340.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2339 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2339)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2337 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2338 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2337, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2342 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2342.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2337);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2342.setUnitRef(INR2336);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2342.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2342.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2339));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2341 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2342);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2341);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR2343 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2343 = createUnitIfNotExist(INR2343, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2345 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2345.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2345.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2346 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2345);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2347 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2345, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2347 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2347.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2347.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2347.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2347.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2347.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2347.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2346 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2346)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2344 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2345 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2344, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2349 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2349.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2344);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2349.setUnitRef(INR2343);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2349.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2349.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2346));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2348 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2349);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2348);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR2350 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2350 = createUnitIfNotExist(INR2350, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2352 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2352.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2352.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2353 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2352);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2354 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2352, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2354 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2354.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2354.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2354.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2354.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2354.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2354.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2353 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2353)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2351 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2352 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2351, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2356 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2356.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2351);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2356.setUnitRef(INR2350);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2356.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2356.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2353));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2355 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2356);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2355);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR2357 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2357 = createUnitIfNotExist(INR2357, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2359 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2359.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2359.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2360 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2359);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2361 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2359, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2361 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2361.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2361.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2361.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2361.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2361.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2361.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2360 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2360)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2358 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2359 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2358, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2363 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2363.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2358);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2363.setUnitRef(INR2357);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2363.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2363.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2360));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2362 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2363);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2362);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR2364 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2364 = createUnitIfNotExist(INR2364, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2366 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2366.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2366.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2367 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2366);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2368 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2366, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2368 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2368.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2368.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2368.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2368.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2368.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2368.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2367 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2367)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2365 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2366 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2365, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2370 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2370.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2365);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2370.setUnitRef(INR2364);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2370.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2370.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2367));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2369 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2370);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2369);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR2371 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2371 = createUnitIfNotExist(INR2371, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2373 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2373.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2373.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2374 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2373);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2375 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2373, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2375 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2375.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2375.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2375.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2375.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2375.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2375.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2374 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2374)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2372 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2373 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2372, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2377 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2377.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2372);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2377.setUnitRef(INR2371);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2377.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2377.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2374));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2376 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2377);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2376);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR2378 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2378 = createUnitIfNotExist(INR2378, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2380 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2380.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2380.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2381 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2380);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2382 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2380, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2382 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2382.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2382.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2382.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2382.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2382.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2382.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2381 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2381)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2379 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2380 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2379, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2384 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2384.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2379);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2384.setUnitRef(INR2378);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2384.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2384.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2381));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2383 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2384);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2383);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR2385 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2385 = createUnitIfNotExist(INR2385, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2387 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2387.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2387.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2388 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2387);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2389 = DBS06ReportUtil.retrieveFieldDataForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2387, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2389 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2389.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2389.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2389.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2389.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2389.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2389.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2388 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2388)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2386 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2387 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2386, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2391 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2391.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2386);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2391.setUnitRef(INR2385);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2391.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2391.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2388));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2390 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createPotentialFutureExposure(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2391);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2390);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR2392 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2392 = createUnitIfNotExist(INR2392, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - ExposureAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisMap2394 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisMap2394.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisMap2394.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2395 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisMap2394);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2396 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisMap2394, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2396 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2396.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2396.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2396.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2396.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2396.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2396.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2395 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2395)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisContext2393 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisMap2394 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisContext2393, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2398 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2398.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisContext2393);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2398.setUnitRef(INR2392);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2398.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2398.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2395));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2397 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2398);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2397);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                        
                    
                        
                            
                            
                                
                                Unit INR2399 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2399 = createUnitIfNotExist(INR2399, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2401 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2401.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2401.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2402 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2401);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2403 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2401, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2403 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2403.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2403.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2403.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2403.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2403.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2403.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2402 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2402)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2400 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2401 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2400, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2405 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2405.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2400);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2405.setUnitRef(INR2399);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2405.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2405.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2402));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2404 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2405);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2404);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR2406 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2406 = createUnitIfNotExist(INR2406, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2408 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2408.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2408.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2409 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2408);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2410 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2408, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2410 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2410.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2410.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2410.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2410.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2410.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2410.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2409 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2409)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2407 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2408 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2407, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2412 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2412.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2407);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2412.setUnitRef(INR2406);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2412.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2412.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2409));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2411 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2412);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2411);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR2413 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2413 = createUnitIfNotExist(INR2413, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2415 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2415.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2415.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2416 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2415);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2417 = DBS06ReportUtil.retrieveFieldDataForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2415, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2417 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2417.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2417.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2417.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2417.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2417.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2417.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2416 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2416)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2414 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2415 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2414, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2419 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2419.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2414);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2419.setUnitRef(INR2413);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2419.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2419.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2416));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2418 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createPotentialFutureExposure(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2419);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2418);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR2420 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2420 = createUnitIfNotExist(INR2420, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2422 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2422.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2422.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2423 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2422);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2424 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2422, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2424 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2424.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2424.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2424.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2424.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2424.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2424.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2423 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2423)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2421 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2422 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2421, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2426 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2426.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2421);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2426.setUnitRef(INR2420);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2426.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2426.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2423));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2425 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2426);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2425);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR2427 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2427 = createUnitIfNotExist(INR2427, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2429 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2429.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2429.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2430 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2429);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2431 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2429, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2431 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2431.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2431.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2431.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2431.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2431.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2431.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2430 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2430)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2428 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2429 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2428, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2433 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2433.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2428);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2433.setUnitRef(INR2427);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2433.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2433.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2430));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2432 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2433);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2432);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR2434 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2434 = createUnitIfNotExist(INR2434, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2436 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2436.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2436.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2437 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2436);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2438 = DBS06ReportUtil.retrieveFieldDataForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2436, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2438 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2438.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2438.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2438.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2438.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2438.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2438.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2437 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2437)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2435 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2436 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2435, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2440 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2440.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2435);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2440.setUnitRef(INR2434);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2440.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2440.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2437));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2439 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createPotentialFutureExposure(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2440);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2439);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR2441 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2441 = createUnitIfNotExist(INR2441, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2443 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2443.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2443.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2444 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2443);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2445 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2443, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2445 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2445.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2445.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2445.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2445.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2445.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2445.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2444 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2444)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2442 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2443 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2442, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2447 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2447.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2442);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2447.setUnitRef(INR2441);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2447.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2447.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2444));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2446 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2447);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2446);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR2448 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2448 = createUnitIfNotExist(INR2448, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2450 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2450.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2450.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2451 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2450);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2452 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2450, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2452 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2452.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2452.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2452.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2452.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2452.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2452.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2451 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2451)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2449 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2450 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2449, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2454 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2454.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2449);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2454.setUnitRef(INR2448);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2454.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2454.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2451));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2453 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2454);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2453);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR2455 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2455 = createUnitIfNotExist(INR2455, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2457 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2457.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2457.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2458 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2457);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2459 = DBS06ReportUtil.retrieveFieldDataForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2457, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2459 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2459.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2459.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2459.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2459.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2459.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2459.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2458 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2458)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2456 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2457 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2456, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2461 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2461.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2456);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2461.setUnitRef(INR2455);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2461.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2461.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2458));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2460 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createPotentialFutureExposure(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2461);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2460);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR2462 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2462 = createUnitIfNotExist(INR2462, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2464 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2464.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2464.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2465 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2464);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2466 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2464, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2466 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2466.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2466.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2466.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2466.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2466.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2466.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2465 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2465)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2463 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2464 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2463, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2468 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2468.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2463);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2468.setUnitRef(INR2462);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2468.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2468.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2465));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2467 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2468);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2467);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR2469 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2469 = createUnitIfNotExist(INR2469, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2471 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2471.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2471.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2472 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2471);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2473 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2471, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2473 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2473.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2473.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2473.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2473.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2473.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2473.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2472 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2472)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2470 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2471 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2470, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2475 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2475.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2470);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2475.setUnitRef(INR2469);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2475.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2475.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2472));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2474 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2475);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2474);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR2476 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2476 = createUnitIfNotExist(INR2476, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2478 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2478.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2478.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2479 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2478);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2480 = DBS06ReportUtil.retrieveFieldDataForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2478, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2480 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2480.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2480.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2480.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2480.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2480.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2480.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2479 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2479)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2477 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2478 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2477, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2482 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2482.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2477);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2482.setUnitRef(INR2476);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2482.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2482.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2479));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2481 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createPotentialFutureExposure(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2482);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2481);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR2483 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2483 = createUnitIfNotExist(INR2483, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2485 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2485.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2485.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2486 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2485);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2487 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2485, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2487 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2487.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2487.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2487.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2487.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2487.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2487.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2486 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2486)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2484 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2485 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2484, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2489 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2489.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2484);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2489.setUnitRef(INR2483);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2489.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2489.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2486));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2488 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2489);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2488);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR2490 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2490 = createUnitIfNotExist(INR2490, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2492 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2492.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2492.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2493 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2492);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2494 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2492, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2494 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2494.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2494.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2494.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2494.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2494.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2494.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2493 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2493)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2491 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2492 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2491, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2496 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2496.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2491);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2496.setUnitRef(INR2490);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2496.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2496.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2493));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2495 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2496);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2495);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR2497 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2497 = createUnitIfNotExist(INR2497, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2499 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2499.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2499.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2500 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2499);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2501 = DBS06ReportUtil.retrieveFieldDataForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2499, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2501 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2501.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2501.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2501.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2501.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2501.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2501.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2500 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2500)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2498 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2499 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2498, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2503 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2503.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2498);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2503.setUnitRef(INR2497);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2503.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2503.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2500));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2502 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createPotentialFutureExposure(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2503);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2502);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR2504 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2504 = createUnitIfNotExist(INR2504, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2506 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2506.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2506.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2507 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2506);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2508 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2506, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2508 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2508.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2508.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2508.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2508.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2508.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2508.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2507 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2507)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2505 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2506 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2505, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2510 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2510.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2505);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2510.setUnitRef(INR2504);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2510.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2510.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2507));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2509 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2510);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2509);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR2511 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2511 = createUnitIfNotExist(INR2511, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2513 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2513.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2513.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2514 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2513);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2515 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2513, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2515 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2515.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2515.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2515.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2515.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2515.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2515.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2514 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2514)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2512 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2513 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2512, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2517 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2517.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2512);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2517.setUnitRef(INR2511);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2517.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2517.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2514));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2516 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2517);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2516);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR2518 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2518 = createUnitIfNotExist(INR2518, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2520 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2520.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2520.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2521 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2520);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2522 = DBS06ReportUtil.retrieveFieldDataForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2520, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2522 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2522.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2522.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2522.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2522.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2522.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2522.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2521 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2521)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2519 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2520 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2519, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2524 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2524.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2519);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2524.setUnitRef(INR2518);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2524.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2524.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2521));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2523 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createPotentialFutureExposure(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2524);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2523);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR2525 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2525 = createUnitIfNotExist(INR2525, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2527 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2527.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2527.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2528 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2527);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2529 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2527, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2529 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2529.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2529.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2529.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2529.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2529.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2529.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2528 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2528)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2526 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2527 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2526, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2531 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2531.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2526);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2531.setUnitRef(INR2525);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2531.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2531.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2528));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2530 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2531);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2530);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR2532 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2532 = createUnitIfNotExist(INR2532, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2534 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2534.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2534.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2535 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2534);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2536 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2534, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2536 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2536.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2536.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2536.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2536.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2536.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2536.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2535 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2535)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2533 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2534 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2533, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2538 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2538.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2533);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2538.setUnitRef(INR2532);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2538.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2538.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2535));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2537 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2538);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2537);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR2539 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2539 = createUnitIfNotExist(INR2539, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2541 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2541.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2541.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2542 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2541);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2543 = DBS06ReportUtil.retrieveFieldDataForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2541, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2543 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2543.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2543.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2543.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2543.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2543.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2543.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2542 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2542)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2540 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2541 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2540, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2545 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2545.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2540);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2545.setUnitRef(INR2539);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2545.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2545.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2542));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2544 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createPotentialFutureExposure(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2545);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2544);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR2546 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2546 = createUnitIfNotExist(INR2546, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2548 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2548.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2548.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2549 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2548);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2550 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2548, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2550 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2550.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2550.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2550.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2550.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2550.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2550.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2549 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2549)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2547 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2548 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2547, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2552 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2552.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2547);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2552.setUnitRef(INR2546);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2552.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2552.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2549));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2551 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2552);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2551);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR2553 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2553 = createUnitIfNotExist(INR2553, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2555 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2555.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2555.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2556 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2555);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2557 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2555, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2557 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2557.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2557.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2557.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2557.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2557.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2557.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2556 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2556)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2554 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2555 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2554, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2559 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2559.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2554);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2559.setUnitRef(INR2553);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2559.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2559.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2556));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2558 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2559);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2558);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR2560 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2560 = createUnitIfNotExist(INR2560, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2562 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2562.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2562.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2563 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2562);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2564 = DBS06ReportUtil.retrieveFieldDataForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2562, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2564 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2564.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2564.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2564.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2564.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2564.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2564.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2563 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2563)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2561 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2562 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2561, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2566 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2566.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2561);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2566.setUnitRef(INR2560);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2566.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2566.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2563));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2565 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createPotentialFutureExposure(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2566);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2565);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR2567 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2567 = createUnitIfNotExist(INR2567, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2569 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2569.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2569.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2570 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2569);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2571 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2569, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2571 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2571.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2571.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2571.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2571.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2571.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2571.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2570 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2570)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2568 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2569 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2568, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2573 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2573.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2568);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2573.setUnitRef(INR2567);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2573.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2573.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2570));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2572 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2573);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2572);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR2574 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2574 = createUnitIfNotExist(INR2574, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2576 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2576.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2576.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2577 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2576);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2578 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2576, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2578 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2578.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2578.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2578.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2578.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2578.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2578.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2577 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2577)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2575 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2576 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2575, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2580 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2580.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2575);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2580.setUnitRef(INR2574);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2580.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2580.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2577));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2579 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2580);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2579);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR2581 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2581 = createUnitIfNotExist(INR2581, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2583 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2583.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2583.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2584 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2583);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2585 = DBS06ReportUtil.retrieveFieldDataForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2583, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2585 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2585.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2585.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2585.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2585.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2585.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2585.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2584 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2584)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2582 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2583 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2582, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2587 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2587.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2582);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2587.setUnitRef(INR2581);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2587.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2587.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2584));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2586 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createPotentialFutureExposure(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2587);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2586);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR2588 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2588 = createUnitIfNotExist(INR2588, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2590 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2590.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2590.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2591 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2590);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2592 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2590, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2592 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2592.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2592.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2592.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2592.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2592.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2592.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2591 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2591)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2589 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2590 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2589, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2594 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2594.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2589);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2594.setUnitRef(INR2588);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2594.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2594.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2591));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2593 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2594);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2593);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR2595 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2595 = createUnitIfNotExist(INR2595, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2597 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2597.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2597.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2598 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2597);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2599 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2597, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2599 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2599.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2599.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2599.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2599.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2599.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2599.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2598 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2598)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2596 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2597 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2596, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2601 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2601.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2596);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2601.setUnitRef(INR2595);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2601.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2601.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2598));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2600 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2601);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2600);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR2602 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2602 = createUnitIfNotExist(INR2602, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2604 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2604.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2604.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2605 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2604);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2606 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2604, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2606 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2606.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2606.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2606.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2606.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2606.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2606.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2605 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2605)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2603 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2604 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2603, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2608 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2608.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2603);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2608.setUnitRef(INR2602);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2608.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2608.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2605));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2607 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2608);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2607);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR2609 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2609 = createUnitIfNotExist(INR2609, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2611 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2611.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2611.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2612 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2611);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2613 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2611, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2613 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2613.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2613.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2613.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2613.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2613.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2613.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2612 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2612)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2610 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2611 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2610, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2615 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2615.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2610);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2615.setUnitRef(INR2609);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2615.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2615.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2612));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2614 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2615);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2614);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR2616 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2616 = createUnitIfNotExist(INR2616, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2618 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2618.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2618.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2619 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2618);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2620 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2618, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2620 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2620.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2620.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2620.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2620.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2620.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2620.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2619 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2619)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2617 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2618 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2617, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2622 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2622.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2617);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2622.setUnitRef(INR2616);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2622.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2622.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2619));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2621 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2622);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2621);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR2623 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2623 = createUnitIfNotExist(INR2623, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2625 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2625.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2625.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2626 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2625);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2627 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2625, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2627 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2627.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2627.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2627.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2627.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2627.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2627.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2626 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2626)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2624 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2625 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2624, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2629 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2629.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2624);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2629.setUnitRef(INR2623);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2629.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2629.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2626));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2628 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2629);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2628);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR2630 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2630 = createUnitIfNotExist(INR2630, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2632 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2632.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2632.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2633 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2632);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2634 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2632, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2634 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2634.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2634.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2634.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2634.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2634.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2634.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2633 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2633)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2631 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2632 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2631, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2636 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2636.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2631);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2636.setUnitRef(INR2630);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2636.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2636.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2633));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2635 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2636);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2635);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR2637 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2637 = createUnitIfNotExist(INR2637, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2639 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2639.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2639.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2640 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2639);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2641 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2639, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2641 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2641.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2641.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2641.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2641.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2641.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2641.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2640 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2640)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2638 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2639 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2638, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2643 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2643.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2638);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2643.setUnitRef(INR2637);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2643.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2643.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2640));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2642 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2643);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2642);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR2644 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2644 = createUnitIfNotExist(INR2644, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2646 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2646.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2646.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2647 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2646);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2648 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2646, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2648 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2648.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2648.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2648.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2648.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2648.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2648.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2647 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2647)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2645 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2646 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2645, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2650 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2650.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2645);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2650.setUnitRef(INR2644);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2650.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2650.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2647));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2649 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2650);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2649);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR2651 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2651 = createUnitIfNotExist(INR2651, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2653 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2653.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2653.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2654 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2653);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2655 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2653, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2655 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2655.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2655.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2655.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2655.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2655.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2655.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2654 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2654)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2652 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2653 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2652, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2657 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2657.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2652);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2657.setUnitRef(INR2651);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2657.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2657.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2654));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2656 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2657);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2656);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR2658 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2658 = createUnitIfNotExist(INR2658, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2660 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2660.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2660.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2661 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2660);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2662 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2660, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2662 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2662.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2662.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2662.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2662.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2662.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2662.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2661 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2661)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2659 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2660 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2659, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2664 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2664.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2659);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2664.setUnitRef(INR2658);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2664.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2664.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2661));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2663 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2664);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2663);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR2665 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2665 = createUnitIfNotExist(INR2665, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2667 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2667.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2667.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2668 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2667);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2669 = DBS06ReportUtil.retrieveFieldDataForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2667, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2669 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2669.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2669.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2669.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2669.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2669.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2669.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2668 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2668)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2666 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2667 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2666, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2671 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2671.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2666);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2671.setUnitRef(INR2665);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2671.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2671.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2668));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2670 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createPotentialFutureExposure(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2671);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2670);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR2672 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2672 = createUnitIfNotExist(INR2672, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - ExposureAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisMap2674 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisMap2674.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisMap2674.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2675 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisMap2674);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2676 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisMap2674, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2676 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2676.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2676.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2676.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2676.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2676.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2676.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2675 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2675)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisContext2673 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisMap2674 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisContext2673, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2678 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2678.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisContext2673);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2678.setUnitRef(INR2672);
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2678.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2678.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2675));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2677 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2678);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2677);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                        
                    
                    
                    return "";
                    }

                
                    
                
                // if typemembers exist
                
                
                
                // create variable for subclass DBSLeverageRatioConsolidated_Layout4 if any typeMembers then List or Single
                //DBSLeverageRatioConsolidated_Layout4 dBSLeverageRatioConsolidated_Layout4 = mainReportData.getDBSLeverageRatioConsolidated_Layout4();
                
                    private String dBSLeverageRatioConsolidated_Layout4Method(DBSLeverageRatioConsolidated_Layout4 dBSLeverageRatioConsolidated_Layout4, List<String> contextIdentifiers,  List<Context> contextElements, List<Object> bodyElements, List<String> unitIdentifiers, List<Unit> unitElements, String bankCode, String startDateDefault, String endDateDefault, String periodDateDefault)
                
                    {
                        String startDate = startDateDefault;
                        String endDate = endDateDefault;
                        String periodDate = periodDateDefault;
                    DBSLeverageRatioConsolidated_Layout4 field = dBSLeverageRatioConsolidated_Layout4;
                    
                    
                        
                        
                            
                                
                                Unit INR2679 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2679 = createUnitIfNotExist(INR2679, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - ExposureAmount
                            
                                Map zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap2683 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap2683.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                    
                                    String zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountValue2681 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap2683);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue2682 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap2683, "", "", "xs:date($refPeriodEndDate)");
    
                                    if(zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue2682 != null ) {
                                        if(!zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue2682.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue2682.getStartDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue2682.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue2682.getEndDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue2682.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue2682.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioConsolidated_Layout4ExposureAmountContext2680 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap2683 );
                                        
                                
                                if(zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountValue2681 != null && !"".equals(zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountValue2681)) {
                                    
                                    addContext(DBSLeverageRatioConsolidated_Layout4ExposureAmountContext2680, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType exposureAmountValue2684 = new MonetaryItemType();
                                    exposureAmountValue2684.setContextRef(DBSLeverageRatioConsolidated_Layout4ExposureAmountContext2680);
                                    
                                    exposureAmountValue2684.setUnitRef(INR2679);
                                    exposureAmountValue2684.setDecimals("INF");
                                    exposureAmountValue2684.setValue(new BigDecimal(zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountValue2681));
                                    
                                    
                                    JAXBElement<MonetaryItemType> exposureAmountElement2685 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(exposureAmountValue2684);
                                    bodyElements.add(exposureAmountElement2685);
                                
                            }
                        
                        
                    
                    
            
                    
                    
                    
                    return "";
                    }

                
                    
                
                // if typemembers exist
                
                
                
                // create variable for subclass DBSLeverageRatioConsolidated_Layout5 if any typeMembers then List or Single
                //DBSLeverageRatioConsolidated_Layout5 dBSLeverageRatioConsolidated_Layout5 = mainReportData.getDBSLeverageRatioConsolidated_Layout5();
                
                    private String dBSLeverageRatioConsolidated_Layout5Method(DBSLeverageRatioConsolidated_Layout5 dBSLeverageRatioConsolidated_Layout5, List<String> contextIdentifiers,  List<Context> contextElements, List<Object> bodyElements, List<String> unitIdentifiers, List<Unit> unitElements, String bankCode, String startDateDefault, String endDateDefault, String periodDateDefault)
                
                    {
                        String startDate = startDateDefault;
                        String endDate = endDateDefault;
                        String periodDate = periodDateDefault;
                    DBSLeverageRatioConsolidated_Layout5 field = dBSLeverageRatioConsolidated_Layout5;
                    
                    
                    
            
                    
                    
                        
                            
                            
                                
                                Unit INR2686 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2686 = createUnitIfNotExist(INR2686, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - Tier1Capital
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisMap2688 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisMap2688.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2689 = DBS06ReportUtil.retrieveValueForElement(field.getTier1Capital(), explictMember1DBSLeverageRatioConsolidated_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisMap2688);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2690 = DBS06ReportUtil.retrieveFieldDataForElement(field.getTier1Capital(), explictMember1DBSLeverageRatioConsolidated_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisMap2688, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2690 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2690.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2690.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2690.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2690.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2690.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2690.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2689 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2689)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisContext2687 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisMap2688 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisContext2687, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2692 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2692.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisContext2687);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2692.setUnitRef(INR2686);
                                        explictMember1DBSLeverageRatioConsolidated_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2692.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2692.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2689));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2691 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createTier1Capital(explictMember1DBSLeverageRatioConsolidated_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2692);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2691);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR2693 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR2693 = createUnitIfNotExist(INR2693, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - ExposureAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisMap2695 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisMap2695.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisMap2695.put("rbi-core:LeverageRatioExposureAxis", "in-rbi-rep:TotalExposureMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2696 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), explictMember1DBSLeverageRatioConsolidated_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisMap2695);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2697 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), explictMember1DBSLeverageRatioConsolidated_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisMap2695, "", "", "xs:date($refPeriodEndDate)" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2697 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2697.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2697.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2697.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2697.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2697.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2697.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2696 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2696)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisContext2694 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisMap2695 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisContext2694, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2699 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2699.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisContext2694);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2699.setUnitRef(INR2693);
                                        explictMember1DBSLeverageRatioConsolidated_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2699.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2699.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2696));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2698 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(explictMember1DBSLeverageRatioConsolidated_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2699);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2698);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit pure2700 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                                pure2700 = createUnitIfNotExist(pure2700, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - BaselIILeverageRatio
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisMap2702 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisMap2702.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2703 = DBS06ReportUtil.retrieveValueForElement(field.getBaselIILeverageRatio(), explictMember1DBSLeverageRatioConsolidated_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisMap2702);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2704 = DBS06ReportUtil.retrieveFieldDataForElement(field.getBaselIILeverageRatio(), explictMember1DBSLeverageRatioConsolidated_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisMap2702, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "" );

                                if(explictMember1DBSLeverageRatioConsolidated_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2704 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2704.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2704.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2704.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2704.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2704.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue2704.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2703 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2703)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisContext2701 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisMap2702 );
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisContext2701, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    PercentItemType explictMember1DBSLeverageRatioConsolidated_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2706 = new PercentItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2706.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisContext2701);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2706.setUnitRef(pure2700);
                                        explictMember1DBSLeverageRatioConsolidated_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2706.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2706.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2703));
                                    
                                    
                                    JAXBElement<PercentItemType> explictMember1DBSLeverageRatioConsolidated_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2705 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createBaselIILeverageRatio(explictMember1DBSLeverageRatioConsolidated_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2706);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2705);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                        
                    
                    
                    return "";
                    }

                
                    
                
                // if typemembers exist
                
                
                
                // create variable for subclass DBSAuthorisedSignatory_Layout1 if any typeMembers then List or Single
                //DBSAuthorisedSignatory_Layout1 dBSAuthorisedSignatory_Layout1 = mainReportData.getDBSAuthorisedSignatory_Layout1();
                
                    private String dBSAuthorisedSignatory_Layout1Method(DBSAuthorisedSignatory_Layout1 dBSAuthorisedSignatory_Layout1, List<String> contextIdentifiers,  List<Context> contextElements, List<Object> bodyElements, List<String> unitIdentifiers, List<Unit> unitElements, String bankCode, String startDateDefault, String endDateDefault, String periodDateDefault)
                
                    {
                        String startDate = startDateDefault;
                        String endDate = endDateDefault;
                        String periodDate = periodDateDefault;
                    DBSAuthorisedSignatory_Layout1 field = dBSAuthorisedSignatory_Layout1;
                    
                    
                        
                        
                            
                            // - NameOfSignatory
                            
                                Map zeroDBSAuthorisedSignatory_Layout1NameOfSignatoryMap2710 = new HashMap<String, String>();
                                
                                
                                
                                    
                                    String zeroDBSAuthorisedSignatory_Layout1NameOfSignatoryValue2708 = DBS06ReportUtil.retrieveValueForElement(field.getNameOfSignatory(), zeroDBSAuthorisedSignatory_Layout1NameOfSignatoryMap2710);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSAuthorisedSignatory_Layout1NameOfSignatoryFieldDataValue2709 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNameOfSignatory(), zeroDBSAuthorisedSignatory_Layout1NameOfSignatoryMap2710, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
    
                                    if(zeroDBSAuthorisedSignatory_Layout1NameOfSignatoryFieldDataValue2709 != null ) {
                                        if(!zeroDBSAuthorisedSignatory_Layout1NameOfSignatoryFieldDataValue2709.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSAuthorisedSignatory_Layout1NameOfSignatoryFieldDataValue2709.getStartDateValue();
                                        if(!zeroDBSAuthorisedSignatory_Layout1NameOfSignatoryFieldDataValue2709.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSAuthorisedSignatory_Layout1NameOfSignatoryFieldDataValue2709.getEndDateValue();
                                        if(!zeroDBSAuthorisedSignatory_Layout1NameOfSignatoryFieldDataValue2709.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSAuthorisedSignatory_Layout1NameOfSignatoryFieldDataValue2709.getInstantDateValue();
                                    }

                                    
                                        Context DBSAuthorisedSignatory_Layout1NameOfSignatoryContext2707 = DBS06ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                
                                if(zeroDBSAuthorisedSignatory_Layout1NameOfSignatoryValue2708 != null && !"".equals(zeroDBSAuthorisedSignatory_Layout1NameOfSignatoryValue2708)) {
                                    
                                    addContext(DBSAuthorisedSignatory_Layout1NameOfSignatoryContext2707, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    StringItemType nameOfSignatoryValue2711 = new StringItemType();
                                    nameOfSignatoryValue2711.setContextRef(DBSAuthorisedSignatory_Layout1NameOfSignatoryContext2707);
                                    
                                    nameOfSignatoryValue2711.setValue(zeroDBSAuthorisedSignatory_Layout1NameOfSignatoryValue2708);        
                                    
                                    
                                    JAXBElement<StringItemType> nameOfSignatoryElement2712 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNameOfSignatory(nameOfSignatoryValue2711);
                                    bodyElements.add(nameOfSignatoryElement2712);
                                
                            }
                        
                            
                            // - DesignationOfSignatory
                            
                                Map zeroDBSAuthorisedSignatory_Layout1DesignationOfSignatoryMap2716 = new HashMap<String, String>();
                                
                                
                                
                                    
                                    String zeroDBSAuthorisedSignatory_Layout1DesignationOfSignatoryValue2714 = DBS06ReportUtil.retrieveValueForElement(field.getDesignationOfSignatory(), zeroDBSAuthorisedSignatory_Layout1DesignationOfSignatoryMap2716);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSAuthorisedSignatory_Layout1DesignationOfSignatoryFieldDataValue2715 = DBS06ReportUtil.retrieveFieldDataForElement(field.getDesignationOfSignatory(), zeroDBSAuthorisedSignatory_Layout1DesignationOfSignatoryMap2716, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
    
                                    if(zeroDBSAuthorisedSignatory_Layout1DesignationOfSignatoryFieldDataValue2715 != null ) {
                                        if(!zeroDBSAuthorisedSignatory_Layout1DesignationOfSignatoryFieldDataValue2715.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSAuthorisedSignatory_Layout1DesignationOfSignatoryFieldDataValue2715.getStartDateValue();
                                        if(!zeroDBSAuthorisedSignatory_Layout1DesignationOfSignatoryFieldDataValue2715.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSAuthorisedSignatory_Layout1DesignationOfSignatoryFieldDataValue2715.getEndDateValue();
                                        if(!zeroDBSAuthorisedSignatory_Layout1DesignationOfSignatoryFieldDataValue2715.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSAuthorisedSignatory_Layout1DesignationOfSignatoryFieldDataValue2715.getInstantDateValue();
                                    }

                                    
                                        Context DBSAuthorisedSignatory_Layout1DesignationOfSignatoryContext2713 = DBS06ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                
                                if(zeroDBSAuthorisedSignatory_Layout1DesignationOfSignatoryValue2714 != null && !"".equals(zeroDBSAuthorisedSignatory_Layout1DesignationOfSignatoryValue2714)) {
                                    
                                    addContext(DBSAuthorisedSignatory_Layout1DesignationOfSignatoryContext2713, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    StringItemType designationOfSignatoryValue2717 = new StringItemType();
                                    designationOfSignatoryValue2717.setContextRef(DBSAuthorisedSignatory_Layout1DesignationOfSignatoryContext2713);
                                    
                                    designationOfSignatoryValue2717.setValue(zeroDBSAuthorisedSignatory_Layout1DesignationOfSignatoryValue2714);        
                                    
                                    
                                    JAXBElement<StringItemType> designationOfSignatoryElement2718 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createDesignationOfSignatory(designationOfSignatoryValue2717);
                                    bodyElements.add(designationOfSignatoryElement2718);
                                
                            }
                        
                            
                            // - AuthorisedSignatoryOfficialLandlineNumber
                            
                                Map zeroDBSAuthorisedSignatory_Layout1AuthorisedSignatoryOfficialLandlineNumberMap2722 = new HashMap<String, String>();
                                
                                
                                
                                    
                                    String zeroDBSAuthorisedSignatory_Layout1AuthorisedSignatoryOfficialLandlineNumberValue2720 = DBS06ReportUtil.retrieveValueForElement(field.getAuthorisedSignatoryOfficialLandlineNumber(), zeroDBSAuthorisedSignatory_Layout1AuthorisedSignatoryOfficialLandlineNumberMap2722);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSAuthorisedSignatory_Layout1AuthorisedSignatoryOfficialLandlineNumberFieldDataValue2721 = DBS06ReportUtil.retrieveFieldDataForElement(field.getAuthorisedSignatoryOfficialLandlineNumber(), zeroDBSAuthorisedSignatory_Layout1AuthorisedSignatoryOfficialLandlineNumberMap2722, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
    
                                    if(zeroDBSAuthorisedSignatory_Layout1AuthorisedSignatoryOfficialLandlineNumberFieldDataValue2721 != null ) {
                                        if(!zeroDBSAuthorisedSignatory_Layout1AuthorisedSignatoryOfficialLandlineNumberFieldDataValue2721.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSAuthorisedSignatory_Layout1AuthorisedSignatoryOfficialLandlineNumberFieldDataValue2721.getStartDateValue();
                                        if(!zeroDBSAuthorisedSignatory_Layout1AuthorisedSignatoryOfficialLandlineNumberFieldDataValue2721.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSAuthorisedSignatory_Layout1AuthorisedSignatoryOfficialLandlineNumberFieldDataValue2721.getEndDateValue();
                                        if(!zeroDBSAuthorisedSignatory_Layout1AuthorisedSignatoryOfficialLandlineNumberFieldDataValue2721.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSAuthorisedSignatory_Layout1AuthorisedSignatoryOfficialLandlineNumberFieldDataValue2721.getInstantDateValue();
                                    }

                                    
                                        Context DBSAuthorisedSignatory_Layout1AuthorisedSignatoryOfficialLandlineNumberContext2719 = DBS06ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                
                                if(zeroDBSAuthorisedSignatory_Layout1AuthorisedSignatoryOfficialLandlineNumberValue2720 != null && !"".equals(zeroDBSAuthorisedSignatory_Layout1AuthorisedSignatoryOfficialLandlineNumberValue2720)) {
                                    
                                    addContext(DBSAuthorisedSignatory_Layout1AuthorisedSignatoryOfficialLandlineNumberContext2719, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    StringItemType authorisedSignatoryOfficialLandlineNumberValue2723 = new StringItemType();
                                    authorisedSignatoryOfficialLandlineNumberValue2723.setContextRef(DBSAuthorisedSignatory_Layout1AuthorisedSignatoryOfficialLandlineNumberContext2719);
                                    
                                    authorisedSignatoryOfficialLandlineNumberValue2723.setValue(zeroDBSAuthorisedSignatory_Layout1AuthorisedSignatoryOfficialLandlineNumberValue2720);        
                                    
                                    
                                    JAXBElement<StringItemType> authorisedSignatoryOfficialLandlineNumberElement2724 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createAuthorisedSignatoryOfficialLandlineNumber(authorisedSignatoryOfficialLandlineNumberValue2723);
                                    bodyElements.add(authorisedSignatoryOfficialLandlineNumberElement2724);
                                
                            }
                        
                            
                            // - MobileNumberOfAuthorisedSignatory
                            
                                Map zeroDBSAuthorisedSignatory_Layout1MobileNumberOfAuthorisedSignatoryMap2728 = new HashMap<String, String>();
                                
                                
                                
                                    
                                    String zeroDBSAuthorisedSignatory_Layout1MobileNumberOfAuthorisedSignatoryValue2726 = DBS06ReportUtil.retrieveValueForElement(field.getMobileNumberOfAuthorisedSignatory(), zeroDBSAuthorisedSignatory_Layout1MobileNumberOfAuthorisedSignatoryMap2728);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSAuthorisedSignatory_Layout1MobileNumberOfAuthorisedSignatoryFieldDataValue2727 = DBS06ReportUtil.retrieveFieldDataForElement(field.getMobileNumberOfAuthorisedSignatory(), zeroDBSAuthorisedSignatory_Layout1MobileNumberOfAuthorisedSignatoryMap2728, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
    
                                    if(zeroDBSAuthorisedSignatory_Layout1MobileNumberOfAuthorisedSignatoryFieldDataValue2727 != null ) {
                                        if(!zeroDBSAuthorisedSignatory_Layout1MobileNumberOfAuthorisedSignatoryFieldDataValue2727.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSAuthorisedSignatory_Layout1MobileNumberOfAuthorisedSignatoryFieldDataValue2727.getStartDateValue();
                                        if(!zeroDBSAuthorisedSignatory_Layout1MobileNumberOfAuthorisedSignatoryFieldDataValue2727.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSAuthorisedSignatory_Layout1MobileNumberOfAuthorisedSignatoryFieldDataValue2727.getEndDateValue();
                                        if(!zeroDBSAuthorisedSignatory_Layout1MobileNumberOfAuthorisedSignatoryFieldDataValue2727.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSAuthorisedSignatory_Layout1MobileNumberOfAuthorisedSignatoryFieldDataValue2727.getInstantDateValue();
                                    }

                                    
                                        Context DBSAuthorisedSignatory_Layout1MobileNumberOfAuthorisedSignatoryContext2725 = DBS06ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                
                                if(zeroDBSAuthorisedSignatory_Layout1MobileNumberOfAuthorisedSignatoryValue2726 != null && !"".equals(zeroDBSAuthorisedSignatory_Layout1MobileNumberOfAuthorisedSignatoryValue2726)) {
                                    
                                    addContext(DBSAuthorisedSignatory_Layout1MobileNumberOfAuthorisedSignatoryContext2725, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    StringItemType mobileNumberOfAuthorisedSignatoryValue2729 = new StringItemType();
                                    mobileNumberOfAuthorisedSignatoryValue2729.setContextRef(DBSAuthorisedSignatory_Layout1MobileNumberOfAuthorisedSignatoryContext2725);
                                    
                                    mobileNumberOfAuthorisedSignatoryValue2729.setValue(zeroDBSAuthorisedSignatory_Layout1MobileNumberOfAuthorisedSignatoryValue2726);        
                                    
                                    
                                    JAXBElement<StringItemType> mobileNumberOfAuthorisedSignatoryElement2730 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createMobileNumberOfAuthorisedSignatory(mobileNumberOfAuthorisedSignatoryValue2729);
                                    bodyElements.add(mobileNumberOfAuthorisedSignatoryElement2730);
                                
                            }
                        
                            
                            // - EMailIDOfAuthorisedReportingOfficial
                            
                                Map zeroDBSAuthorisedSignatory_Layout1EMailIDOfAuthorisedReportingOfficialMap2734 = new HashMap<String, String>();
                                
                                
                                
                                    
                                    String zeroDBSAuthorisedSignatory_Layout1EMailIDOfAuthorisedReportingOfficialValue2732 = DBS06ReportUtil.retrieveValueForElement(field.getEMailIDOfAuthorisedReportingOfficial(), zeroDBSAuthorisedSignatory_Layout1EMailIDOfAuthorisedReportingOfficialMap2734);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSAuthorisedSignatory_Layout1EMailIDOfAuthorisedReportingOfficialFieldDataValue2733 = DBS06ReportUtil.retrieveFieldDataForElement(field.getEMailIDOfAuthorisedReportingOfficial(), zeroDBSAuthorisedSignatory_Layout1EMailIDOfAuthorisedReportingOfficialMap2734, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
    
                                    if(zeroDBSAuthorisedSignatory_Layout1EMailIDOfAuthorisedReportingOfficialFieldDataValue2733 != null ) {
                                        if(!zeroDBSAuthorisedSignatory_Layout1EMailIDOfAuthorisedReportingOfficialFieldDataValue2733.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSAuthorisedSignatory_Layout1EMailIDOfAuthorisedReportingOfficialFieldDataValue2733.getStartDateValue();
                                        if(!zeroDBSAuthorisedSignatory_Layout1EMailIDOfAuthorisedReportingOfficialFieldDataValue2733.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSAuthorisedSignatory_Layout1EMailIDOfAuthorisedReportingOfficialFieldDataValue2733.getEndDateValue();
                                        if(!zeroDBSAuthorisedSignatory_Layout1EMailIDOfAuthorisedReportingOfficialFieldDataValue2733.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSAuthorisedSignatory_Layout1EMailIDOfAuthorisedReportingOfficialFieldDataValue2733.getInstantDateValue();
                                    }

                                    
                                        Context DBSAuthorisedSignatory_Layout1EMailIDOfAuthorisedReportingOfficialContext2731 = DBS06ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                
                                if(zeroDBSAuthorisedSignatory_Layout1EMailIDOfAuthorisedReportingOfficialValue2732 != null && !"".equals(zeroDBSAuthorisedSignatory_Layout1EMailIDOfAuthorisedReportingOfficialValue2732)) {
                                    
                                    addContext(DBSAuthorisedSignatory_Layout1EMailIDOfAuthorisedReportingOfficialContext2731, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    StringItemType eMailIDOfAuthorisedReportingOfficialValue2735 = new StringItemType();
                                    eMailIDOfAuthorisedReportingOfficialValue2735.setContextRef(DBSAuthorisedSignatory_Layout1EMailIDOfAuthorisedReportingOfficialContext2731);
                                    
                                    eMailIDOfAuthorisedReportingOfficialValue2735.setValue(zeroDBSAuthorisedSignatory_Layout1EMailIDOfAuthorisedReportingOfficialValue2732);        
                                    
                                    
                                    JAXBElement<StringItemType> eMailIDOfAuthorisedReportingOfficialElement2736 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createEMailIDOfAuthorisedReportingOfficial(eMailIDOfAuthorisedReportingOfficialValue2735);
                                    bodyElements.add(eMailIDOfAuthorisedReportingOfficialElement2736);
                                
                            }
                        
                            
                            // - Remarks
                            
                                Map zeroDBSAuthorisedSignatory_Layout1RemarksMap2740 = new HashMap<String, String>();
                                
                                
                                
                                    
                                    String zeroDBSAuthorisedSignatory_Layout1RemarksValue2738 = DBS06ReportUtil.retrieveValueForElement(field.getRemarks(), zeroDBSAuthorisedSignatory_Layout1RemarksMap2740);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSAuthorisedSignatory_Layout1RemarksFieldDataValue2739 = DBS06ReportUtil.retrieveFieldDataForElement(field.getRemarks(), zeroDBSAuthorisedSignatory_Layout1RemarksMap2740, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
    
                                    if(zeroDBSAuthorisedSignatory_Layout1RemarksFieldDataValue2739 != null ) {
                                        if(!zeroDBSAuthorisedSignatory_Layout1RemarksFieldDataValue2739.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSAuthorisedSignatory_Layout1RemarksFieldDataValue2739.getStartDateValue();
                                        if(!zeroDBSAuthorisedSignatory_Layout1RemarksFieldDataValue2739.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSAuthorisedSignatory_Layout1RemarksFieldDataValue2739.getEndDateValue();
                                        if(!zeroDBSAuthorisedSignatory_Layout1RemarksFieldDataValue2739.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSAuthorisedSignatory_Layout1RemarksFieldDataValue2739.getInstantDateValue();
                                    }

                                    
                                        Context DBSAuthorisedSignatory_Layout1RemarksContext2737 = DBS06ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                
                                if(zeroDBSAuthorisedSignatory_Layout1RemarksValue2738 != null && !"".equals(zeroDBSAuthorisedSignatory_Layout1RemarksValue2738)) {
                                    
                                    addContext(DBSAuthorisedSignatory_Layout1RemarksContext2737, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    StringItemType remarksValue2741 = new StringItemType();
                                    remarksValue2741.setContextRef(DBSAuthorisedSignatory_Layout1RemarksContext2737);
                                    
                                    remarksValue2741.setValue(zeroDBSAuthorisedSignatory_Layout1RemarksValue2738);        
                                    
                                    
                                    JAXBElement<StringItemType> remarksElement2742 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createRemarks(remarksValue2741);
                                    bodyElements.add(remarksElement2742);
                                
                            }
                        
                        
                    
                    
            
                    
                    
                    
                    return "";
                    }

                
                    
                
                // if typemembers exist
                
                
                
            
            private Unit createUnitIfNotExist(Unit unitObj, String unitId, String namespaceURI, String qNameValue, List<Unit> unitElements) {
                if(unitObj == null){
                    unitObj = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                    unitObj.setId(unitId);
                    QName unitMeasureValue = new QName(namespaceURI, qNameValue);
                    unitObj.getMeasure().add(unitMeasureValue);
                    unitElements.add(unitObj);
                }
                return unitObj;
            }

            private void addContext(Context uniqueIdForContext, List<Context> contextElements, List<String> contextIdentifiers){
                if(!contextIdentifiers.contains(uniqueIdForContext.getId())) {
                    contextElements.add(uniqueIdForContext);
                    contextIdentifiers.add(uniqueIdForContext.getId());
                }
            }
    
        }
    
    

