package in.armedu.banking.report.rbixbrl.reports.dbs06;



import javax.xml.datatype.DatatypeConstants;
import javax.xml.datatype.DatatypeFactory;
import javax.xml.datatype.XMLGregorianCalendar;
import javax.xml.namespace.QName;
import javax.xml.bind.JAXBContext;
import javax.xml.bind.JAXBElement;
import javax.xml.bind.Marshaller;

import org.xbrl._2003.instance.Context;
import org.xbrl._2003.instance.ContextEntityType;
import org.xbrl._2003.instance.ContextEntityType.Identifier;
import org.xbrl._2006.xbrldi.ExplicitMember;
import org.xbrl._2006.xbrldi.TypedMember;
import org.xbrl._2003.instance.ContextPeriodType;
import org.xbrl._2003.instance.ObjectFactory;
import org.xbrl._2003.instance.Unit;
import org.xbrl._2003.instance.Xbrl;
import org.xbrl._2003.xlink.SimpleType;

// generic import classes
import java.io.StringWriter;
import java.util.ArrayList;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.List;
import java.util.Map;
import java.util.HashMap;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.GregorianCalendar;
import in.armedu.banking.report.rbixbrl.util.DefaultNamespacePrefixMapper;
import lombok.Setter;

// import model class
import in.armedu.banking.report.rbixbrl.model.dbs06.*;
import in.armedu.banking.report.rbixbrl.model.FieldDataValue;
// add xbrl data type and inerface
import in.armedu.banking.report.rbixbrl.reports.XBRLReportIntf;
import in.armedu.banking.report.rbixbrl.util.CommonFns;
import in.armedu.banking.report.rbixbrl.model.ReportData;

// add data type 

import org.xbrl._2003.instance.StringItemType;

import org.xbrl._2003.instance.DateItemType;

import org.xbrl._2003.instance.ReportingScale;

import org.rbi.in.xbrl._2012_05_07.in_rbi_rep_types.ReportStatusItemType;

                        import org.xbrl.dtr.type.non_numeric.TextBlockItemType;
                        
import org.xbrl._2003.instance.BooleanItemType;

import org.xbrl._2003.instance.MonetaryItemType;

                        import org.xbrl.dtr.type.numeric.PercentItemType;
                        
import org.xbrl._2003.instance.IntegerItemType;

import org.xbrl._2003.instance.MobileNumber10Digit;

import org.xbrl._2003.instance.MailAddress;


@Setter
public class DBS06Report implements XBRLReportIntf {
    private org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory instancObjectFactory = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory();
    
    
    @Override
    public StringWriter generateReport(ReportData reportData){
        JAXBContext jc;
        Marshaller m;
        // TODO should be generated dynamically
        DBS06ReportData mainReportData = (DBS06ReportData) reportData;

        try {
            jc = JAXBContext.newInstance(ObjectFactory.class,
            org.rbi.in.xbrl._2012_05_07.in_rbi_rep_types.ObjectFactory.class,
            org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory.class,
            org.rbi.in_rbi_rep_par.ObjectFactory.class,
            org.xbrl._2003.xlink.ObjectFactory.class,
            org.xbrl._2003.instance.ObjectFactory.class,
            org.xbrl._2006.xbrldi.ObjectFactory.class,
            org.xbrl._2003.linkbase.ObjectFactory.class,
            org.xbrl._2005.xbrldt.ObjectFactory.class,
            org.xbrl.dtr.type.non_numeric.ObjectFactory.class,
            org.xbrl.dtr.type.numeric.ObjectFactory.class);

            m = jc.createMarshaller();
            StringWriter writer = new StringWriter();
            Xbrl xbrl = new org.xbrl._2003.instance.ObjectFactory().createXbrl();
            
            m.setProperty(Marshaller.JAXB_ENCODING, "UTF-8");
            m.setProperty(Marshaller.JAXB_FORMATTED_OUTPUT, true);
            m.setProperty("com.sun.xml.bind.namespacePrefixMapper", new DefaultNamespacePrefixMapper());
            org.xbrl._2003.xlink.ObjectFactory xlinkObjectFactory = new org.xbrl._2003.xlink.ObjectFactory();
            SimpleType simpleType = xlinkObjectFactory.createSimpleType();
            simpleType.setType("simple");
            // TODO should be changed to specific xsd related to report dbs06
            simpleType.setHref("../schemas/alo/in-rbi-dbs06.xsd");
            xbrl.getSchemaRef().add(simpleType);
            xbrl.getOtherAttributes().put(new QName("xml:lang"), "en");
           
            
            // context identifiers and body elements
            List<String> contextIdentifiers = new ArrayList<String>();
            List<Context> contextElements = new ArrayList<Context>();
            List<Object> bodyElements = new ArrayList<Object>();
            List<String> unitIdentifiers = new ArrayList<String>();
            List<Unit> unitElements = new ArrayList<Unit>();
           
            //Unit unitObj = null;
            //DBS06ReportData dBS06ReportData = new DBS06ReportData();
            // print values           
    

            // TODO : create proper context with loop and element
            // initiatilize data class and allow to be set 
            //private DBS06ReportData dBS06ReportData = new DBS06ReportData();
            // retrieve bankcode, startdate, enddate and perioddate
            String bankCode = mainReportData.getBankCode();
            String startDate = mainReportData.getStartDate();
            String endDate = mainReportData.getEndDate();
            String periodDate = mainReportData.getPeriodDate();

             
            
                // create variable for subclass FilingInfo_Layout1 if any typeMembers then List or Single
                FilingInfo_Layout1 filingInfo_Layout1 = mainReportData.getFilingInfo_Layout1();
            
                
                    {
            
                    FilingInfo_Layout1 field = filingInfo_Layout1;
                    // if explict member is empty
                    
                        // create xbrl report element
                        
                            // start create element for report of FilingInfo_Layout1
                            // create unit if not empty
                            
                            // create context for none explict member
                            // TODO: remove once done
                            // - ReturnName
                            
                                Map zeroFilingInfo_Layout1ReturnNameMap3 = new HashMap<String, String>();
                                
                                    // retrieve value for element
                                    String zeroFilingInfo_Layout1ReturnNameValue2 = DBS06ReportUtil.retrieveValueForElement(field.getReturnName(), zeroFilingInfo_Layout1ReturnNameMap3);

                                    
                                        Context FilingInfo_Layout1ReturnNameContext1 = DBS06ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                if(!contextIdentifiers.contains(FilingInfo_Layout1ReturnNameContext1.getId())) {
                                    contextElements.add(FilingInfo_Layout1ReturnNameContext1);
                                    contextIdentifiers.add(FilingInfo_Layout1ReturnNameContext1.getId());
                                }
                                // create element JAXB Element
                    
                                StringItemType returnNameValue = new StringItemType();
                                returnNameValue.setContextRef(FilingInfo_Layout1ReturnNameContext1);
                                
                                    returnNameValue.setValue(zeroFilingInfo_Layout1ReturnNameValue2);        
                                    
                                
                                JAXBElement<StringItemType> returnNameElement = instancObjectFactory.createReturnName(returnNameValue);
                                bodyElements.add(returnNameElement);
                            
                        
                        
                            // start create element for report of FilingInfo_Layout1
                            // create unit if not empty
                            
                            // create context for none explict member
                            // TODO: remove once done
                            // - ReturnCode
                            
                                Map zeroFilingInfo_Layout1ReturnCodeMap6 = new HashMap<String, String>();
                                
                                    // retrieve value for element
                                    String zeroFilingInfo_Layout1ReturnCodeValue5 = DBS06ReportUtil.retrieveValueForElement(field.getReturnCode(), zeroFilingInfo_Layout1ReturnCodeMap6);

                                    
                                        Context FilingInfo_Layout1ReturnCodeContext4 = DBS06ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                if(!contextIdentifiers.contains(FilingInfo_Layout1ReturnCodeContext4.getId())) {
                                    contextElements.add(FilingInfo_Layout1ReturnCodeContext4);
                                    contextIdentifiers.add(FilingInfo_Layout1ReturnCodeContext4.getId());
                                }
                                // create element JAXB Element
                    
                                StringItemType returnCodeValue = new StringItemType();
                                returnCodeValue.setContextRef(FilingInfo_Layout1ReturnCodeContext4);
                                
                                    returnCodeValue.setValue(zeroFilingInfo_Layout1ReturnCodeValue5);        
                                    
                                
                                JAXBElement<StringItemType> returnCodeElement = instancObjectFactory.createReturnCode(returnCodeValue);
                                bodyElements.add(returnCodeElement);
                            
                        
                        
                            // start create element for report of FilingInfo_Layout1
                            // create unit if not empty
                            
                            // create context for none explict member
                            // TODO: remove once done
                            // - BankCode
                            
                                Map zeroFilingInfo_Layout1BankCodeMap9 = new HashMap<String, String>();
                                
                                    // retrieve value for element
                                    String zeroFilingInfo_Layout1BankCodeValue8 = DBS06ReportUtil.retrieveValueForElement(field.getBankCode(), zeroFilingInfo_Layout1BankCodeMap9);

                                    
                                    Context FilingInfo_Layout1BankCodeContext7 = DBS06ReportContextUtil.createAsOfContext( bankCode, periodDate  );
                                        
                                    
                                if(!contextIdentifiers.contains(FilingInfo_Layout1BankCodeContext7.getId())) {
                                    contextElements.add(FilingInfo_Layout1BankCodeContext7);
                                    contextIdentifiers.add(FilingInfo_Layout1BankCodeContext7.getId());
                                }
                                // create element JAXB Element
                    
                                StringItemType bankCodeValue = new StringItemType();
                                bankCodeValue.setContextRef(FilingInfo_Layout1BankCodeContext7);
                                
                                    bankCodeValue.setValue(zeroFilingInfo_Layout1BankCodeValue8);        
                                    
                                
                                JAXBElement<StringItemType> bankCodeElement = instancObjectFactory.createBankCode(bankCodeValue);
                                bodyElements.add(bankCodeElement);
                            
                        
                        
                            // start create element for report of FilingInfo_Layout1
                            // create unit if not empty
                            
                            // create context for none explict member
                            // TODO: remove once done
                            // - NameOfReportingInstitution
                            
                                Map zeroFilingInfo_Layout1NameOfReportingInstitutionMap12 = new HashMap<String, String>();
                                
                                    // retrieve value for element
                                    String zeroFilingInfo_Layout1NameOfReportingInstitutionValue11 = DBS06ReportUtil.retrieveValueForElement(field.getNameOfReportingInstitution(), zeroFilingInfo_Layout1NameOfReportingInstitutionMap12);

                                    
                                        Context FilingInfo_Layout1NameOfReportingInstitutionContext10 = DBS06ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                if(!contextIdentifiers.contains(FilingInfo_Layout1NameOfReportingInstitutionContext10.getId())) {
                                    contextElements.add(FilingInfo_Layout1NameOfReportingInstitutionContext10);
                                    contextIdentifiers.add(FilingInfo_Layout1NameOfReportingInstitutionContext10.getId());
                                }
                                // create element JAXB Element
                    
                                StringItemType nameOfReportingInstitutionValue = new StringItemType();
                                nameOfReportingInstitutionValue.setContextRef(FilingInfo_Layout1NameOfReportingInstitutionContext10);
                                
                                    nameOfReportingInstitutionValue.setValue(zeroFilingInfo_Layout1NameOfReportingInstitutionValue11);        
                                    
                                
                                JAXBElement<StringItemType> nameOfReportingInstitutionElement = instancObjectFactory.createNameOfReportingInstitution(nameOfReportingInstitutionValue);
                                bodyElements.add(nameOfReportingInstitutionElement);
                            
                        
                        
                            // start create element for report of FilingInfo_Layout1
                            // create unit if not empty
                            
                            // create context for none explict member
                            // TODO: remove once done
                            // - InstitutionType
                            
                                Map zeroFilingInfo_Layout1InstitutionTypeMap15 = new HashMap<String, String>();
                                
                                    // retrieve value for element
                                    String zeroFilingInfo_Layout1InstitutionTypeValue14 = DBS06ReportUtil.retrieveValueForElement(field.getInstitutionType(), zeroFilingInfo_Layout1InstitutionTypeMap15);

                                    
                                        Context FilingInfo_Layout1InstitutionTypeContext13 = DBS06ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                if(!contextIdentifiers.contains(FilingInfo_Layout1InstitutionTypeContext13.getId())) {
                                    contextElements.add(FilingInfo_Layout1InstitutionTypeContext13);
                                    contextIdentifiers.add(FilingInfo_Layout1InstitutionTypeContext13.getId());
                                }
                                // create element JAXB Element
                    
                                StringItemType institutionTypeValue = new StringItemType();
                                institutionTypeValue.setContextRef(FilingInfo_Layout1InstitutionTypeContext13);
                                
                                    institutionTypeValue.setValue(zeroFilingInfo_Layout1InstitutionTypeValue14);        
                                    
                                
                                JAXBElement<StringItemType> institutionTypeElement = instancObjectFactory.createInstitutionType(institutionTypeValue);
                                bodyElements.add(institutionTypeElement);
                            
                        
                        
                            // start create element for report of FilingInfo_Layout1
                            // create unit if not empty
                            
                            // create context for none explict member
                            // TODO: remove once done
                            // - ReportingFrequency
                            
                                Map zeroFilingInfo_Layout1ReportingFrequencyMap18 = new HashMap<String, String>();
                                
                                    // retrieve value for element
                                    String zeroFilingInfo_Layout1ReportingFrequencyValue17 = DBS06ReportUtil.retrieveValueForElement(field.getReportingFrequency(), zeroFilingInfo_Layout1ReportingFrequencyMap18);

                                    
                                        Context FilingInfo_Layout1ReportingFrequencyContext16 = DBS06ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                if(!contextIdentifiers.contains(FilingInfo_Layout1ReportingFrequencyContext16.getId())) {
                                    contextElements.add(FilingInfo_Layout1ReportingFrequencyContext16);
                                    contextIdentifiers.add(FilingInfo_Layout1ReportingFrequencyContext16.getId());
                                }
                                // create element JAXB Element
                    
                                StringItemType reportingFrequencyValue = new StringItemType();
                                reportingFrequencyValue.setContextRef(FilingInfo_Layout1ReportingFrequencyContext16);
                                
                                    reportingFrequencyValue.setValue(zeroFilingInfo_Layout1ReportingFrequencyValue17);        
                                    
                                
                                JAXBElement<StringItemType> reportingFrequencyElement = instancObjectFactory.createReportingFrequency(reportingFrequencyValue);
                                bodyElements.add(reportingFrequencyElement);
                            
                        
                        
                            // start create element for report of FilingInfo_Layout1
                            // create unit if not empty
                            
                            // create context for none explict member
                            // TODO: remove once done
                            // - ReportingPeriodStartDate
                            
                                Map zeroFilingInfo_Layout1ReportingPeriodStartDateMap21 = new HashMap<String, String>();
                                
                                    // retrieve value for element
                                    String zeroFilingInfo_Layout1ReportingPeriodStartDateValue20 = DBS06ReportUtil.retrieveValueForElement(field.getReportingPeriodStartDate(), zeroFilingInfo_Layout1ReportingPeriodStartDateMap21);

                                    
                                    Context FilingInfo_Layout1ReportingPeriodStartDateContext19 = DBS06ReportContextUtil.createAsOfContext( bankCode, periodDate  );
                                        
                                    
                                if(!contextIdentifiers.contains(FilingInfo_Layout1ReportingPeriodStartDateContext19.getId())) {
                                    contextElements.add(FilingInfo_Layout1ReportingPeriodStartDateContext19);
                                    contextIdentifiers.add(FilingInfo_Layout1ReportingPeriodStartDateContext19.getId());
                                }
                                // create element JAXB Element
                    
                                DateItemType reportingPeriodStartDateValue = new DateItemType();
                                reportingPeriodStartDateValue.setContextRef(FilingInfo_Layout1ReportingPeriodStartDateContext19);
                                
                                reportingPeriodStartDateValue.setValue(DBS06ReportContextUtil.toXMLGeo(zeroFilingInfo_Layout1ReportingPeriodStartDateValue20));
                                
                                
                                JAXBElement<DateItemType> reportingPeriodStartDateElement = instancObjectFactory.createReportingPeriodStartDate(reportingPeriodStartDateValue);
                                bodyElements.add(reportingPeriodStartDateElement);
                            
                        
                        
                            // start create element for report of FilingInfo_Layout1
                            // create unit if not empty
                            
                            // create context for none explict member
                            // TODO: remove once done
                            // - ReportingPeriodEndDate
                            
                                Map zeroFilingInfo_Layout1ReportingPeriodEndDateMap24 = new HashMap<String, String>();
                                
                                    // retrieve value for element
                                    String zeroFilingInfo_Layout1ReportingPeriodEndDateValue23 = DBS06ReportUtil.retrieveValueForElement(field.getReportingPeriodEndDate(), zeroFilingInfo_Layout1ReportingPeriodEndDateMap24);

                                    
                                    Context FilingInfo_Layout1ReportingPeriodEndDateContext22 = DBS06ReportContextUtil.createAsOfContext( bankCode, periodDate  );
                                        
                                    
                                if(!contextIdentifiers.contains(FilingInfo_Layout1ReportingPeriodEndDateContext22.getId())) {
                                    contextElements.add(FilingInfo_Layout1ReportingPeriodEndDateContext22);
                                    contextIdentifiers.add(FilingInfo_Layout1ReportingPeriodEndDateContext22.getId());
                                }
                                // create element JAXB Element
                    
                                DateItemType reportingPeriodEndDateValue = new DateItemType();
                                reportingPeriodEndDateValue.setContextRef(FilingInfo_Layout1ReportingPeriodEndDateContext22);
                                
                                reportingPeriodEndDateValue.setValue(DBS06ReportContextUtil.toXMLGeo(zeroFilingInfo_Layout1ReportingPeriodEndDateValue23));
                                
                                
                                JAXBElement<DateItemType> reportingPeriodEndDateElement = instancObjectFactory.createReportingPeriodEndDate(reportingPeriodEndDateValue);
                                bodyElements.add(reportingPeriodEndDateElement);
                            
                        
                        
                            // start create element for report of FilingInfo_Layout1
                            // create unit if not empty
                            
                            // create context for none explict member
                            // TODO: remove once done
                            // - ReportingCurrency
                            
                                Map zeroFilingInfo_Layout1ReportingCurrencyMap27 = new HashMap<String, String>();
                                
                                    // retrieve value for element
                                    String zeroFilingInfo_Layout1ReportingCurrencyValue26 = DBS06ReportUtil.retrieveValueForElement(field.getReportingCurrency(), zeroFilingInfo_Layout1ReportingCurrencyMap27);

                                    
                                        Context FilingInfo_Layout1ReportingCurrencyContext25 = DBS06ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                if(!contextIdentifiers.contains(FilingInfo_Layout1ReportingCurrencyContext25.getId())) {
                                    contextElements.add(FilingInfo_Layout1ReportingCurrencyContext25);
                                    contextIdentifiers.add(FilingInfo_Layout1ReportingCurrencyContext25.getId());
                                }
                                // create element JAXB Element
                    
                                StringItemType reportingCurrencyValue = new StringItemType();
                                reportingCurrencyValue.setContextRef(FilingInfo_Layout1ReportingCurrencyContext25);
                                
                                    reportingCurrencyValue.setValue(zeroFilingInfo_Layout1ReportingCurrencyValue26);        
                                    
                                
                                JAXBElement<StringItemType> reportingCurrencyElement = instancObjectFactory.createReportingCurrency(reportingCurrencyValue);
                                bodyElements.add(reportingCurrencyElement);
                            
                        
                        
                            // start create element for report of FilingInfo_Layout1
                            // create unit if not empty
                            
                            // create context for none explict member
                            // TODO: remove once done
                            // - ReportingScale
                            
                                Map zeroFilingInfo_Layout1ReportingScaleMap30 = new HashMap<String, String>();
                                
                                    // retrieve value for element
                                    String zeroFilingInfo_Layout1ReportingScaleValue29 = DBS06ReportUtil.retrieveValueForElement(field.getReportingScale(), zeroFilingInfo_Layout1ReportingScaleMap30);

                                    
                                        Context FilingInfo_Layout1ReportingScaleContext28 = DBS06ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                if(!contextIdentifiers.contains(FilingInfo_Layout1ReportingScaleContext28.getId())) {
                                    contextElements.add(FilingInfo_Layout1ReportingScaleContext28);
                                    contextIdentifiers.add(FilingInfo_Layout1ReportingScaleContext28.getId());
                                }
                                // create element JAXB Element
                    
                                ReportingScale reportingScaleValue = new ReportingScale();
                                reportingScaleValue.setContextRef(FilingInfo_Layout1ReportingScaleContext28);
                                
                                    reportingScaleValue.setValue(zeroFilingInfo_Layout1ReportingScaleValue29);        
                                    
                                
                                JAXBElement<ReportingScale> reportingScaleElement = instancObjectFactory.createReportingScale(reportingScaleValue);
                                bodyElements.add(reportingScaleElement);
                            
                        
                        
                            // start create element for report of FilingInfo_Layout1
                            // create unit if not empty
                            
                            // create context for none explict member
                            // TODO: remove once done
                            // - TaxonomyVersion
                            
                                Map zeroFilingInfo_Layout1TaxonomyVersionMap33 = new HashMap<String, String>();
                                
                                    // retrieve value for element
                                    String zeroFilingInfo_Layout1TaxonomyVersionValue32 = DBS06ReportUtil.retrieveValueForElement(field.getTaxonomyVersion(), zeroFilingInfo_Layout1TaxonomyVersionMap33);

                                    
                                        Context FilingInfo_Layout1TaxonomyVersionContext31 = DBS06ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                if(!contextIdentifiers.contains(FilingInfo_Layout1TaxonomyVersionContext31.getId())) {
                                    contextElements.add(FilingInfo_Layout1TaxonomyVersionContext31);
                                    contextIdentifiers.add(FilingInfo_Layout1TaxonomyVersionContext31.getId());
                                }
                                // create element JAXB Element
                    
                                StringItemType taxonomyVersionValue = new StringItemType();
                                taxonomyVersionValue.setContextRef(FilingInfo_Layout1TaxonomyVersionContext31);
                                
                                    taxonomyVersionValue.setValue(zeroFilingInfo_Layout1TaxonomyVersionValue32);        
                                    
                                
                                JAXBElement<StringItemType> taxonomyVersionElement = instancObjectFactory.createTaxonomyVersion(taxonomyVersionValue);
                                bodyElements.add(taxonomyVersionElement);
                            
                        
                        
                            // start create element for report of FilingInfo_Layout1
                            // create unit if not empty
                            
                            // create context for none explict member
                            // TODO: remove once done
                            // - ToolName
                            
                                Map zeroFilingInfo_Layout1ToolNameMap36 = new HashMap<String, String>();
                                
                                    // retrieve value for element
                                    String zeroFilingInfo_Layout1ToolNameValue35 = DBS06ReportUtil.retrieveValueForElement(field.getToolName(), zeroFilingInfo_Layout1ToolNameMap36);

                                    
                                        Context FilingInfo_Layout1ToolNameContext34 = DBS06ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                if(!contextIdentifiers.contains(FilingInfo_Layout1ToolNameContext34.getId())) {
                                    contextElements.add(FilingInfo_Layout1ToolNameContext34);
                                    contextIdentifiers.add(FilingInfo_Layout1ToolNameContext34.getId());
                                }
                                // create element JAXB Element
                    
                                StringItemType toolNameValue = new StringItemType();
                                toolNameValue.setContextRef(FilingInfo_Layout1ToolNameContext34);
                                
                                    toolNameValue.setValue(zeroFilingInfo_Layout1ToolNameValue35);        
                                    
                                
                                JAXBElement<StringItemType> toolNameElement = instancObjectFactory.createToolName(toolNameValue);
                                bodyElements.add(toolNameElement);
                            
                        
                        
                            // start create element for report of FilingInfo_Layout1
                            // create unit if not empty
                            
                            // create context for none explict member
                            // TODO: remove once done
                            // - ToolVersion
                            
                                Map zeroFilingInfo_Layout1ToolVersionMap39 = new HashMap<String, String>();
                                
                                    // retrieve value for element
                                    String zeroFilingInfo_Layout1ToolVersionValue38 = DBS06ReportUtil.retrieveValueForElement(field.getToolVersion(), zeroFilingInfo_Layout1ToolVersionMap39);

                                    
                                        Context FilingInfo_Layout1ToolVersionContext37 = DBS06ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                if(!contextIdentifiers.contains(FilingInfo_Layout1ToolVersionContext37.getId())) {
                                    contextElements.add(FilingInfo_Layout1ToolVersionContext37);
                                    contextIdentifiers.add(FilingInfo_Layout1ToolVersionContext37.getId());
                                }
                                // create element JAXB Element
                    
                                StringItemType toolVersionValue = new StringItemType();
                                toolVersionValue.setContextRef(FilingInfo_Layout1ToolVersionContext37);
                                
                                    toolVersionValue.setValue(zeroFilingInfo_Layout1ToolVersionValue38);        
                                    
                                
                                JAXBElement<StringItemType> toolVersionElement = instancObjectFactory.createToolVersion(toolVersionValue);
                                bodyElements.add(toolVersionElement);
                            
                        
                        
                            // start create element for report of FilingInfo_Layout1
                            // create unit if not empty
                            
                            // create context for none explict member
                            // TODO: remove once done
                            // - ReportStatus
                            
                                Map zeroFilingInfo_Layout1ReportStatusMap42 = new HashMap<String, String>();
                                
                                    // retrieve value for element
                                    String zeroFilingInfo_Layout1ReportStatusValue41 = DBS06ReportUtil.retrieveValueForElement(field.getReportStatus(), zeroFilingInfo_Layout1ReportStatusMap42);

                                    
                                        Context FilingInfo_Layout1ReportStatusContext40 = DBS06ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                if(!contextIdentifiers.contains(FilingInfo_Layout1ReportStatusContext40.getId())) {
                                    contextElements.add(FilingInfo_Layout1ReportStatusContext40);
                                    contextIdentifiers.add(FilingInfo_Layout1ReportStatusContext40.getId());
                                }
                                // create element JAXB Element
                    
                                ReportStatusItemType reportStatusValue = new ReportStatusItemType();
                                reportStatusValue.setContextRef(FilingInfo_Layout1ReportStatusContext40);
                                
                                    reportStatusValue.setValue(zeroFilingInfo_Layout1ReportStatusValue41);        
                                    
                                
                                JAXBElement<ReportStatusItemType> reportStatusElement = instancObjectFactory.createReportStatus(reportStatusValue);
                                bodyElements.add(reportStatusElement);
                            
                        
                        
                            // start create element for report of FilingInfo_Layout1
                            // create unit if not empty
                            
                            // create context for none explict member
                            // TODO: remove once done
                            // - DateOfAudit
                            
                                Map zeroFilingInfo_Layout1DateOfAuditMap45 = new HashMap<String, String>();
                                
                                    // retrieve value for element
                                    String zeroFilingInfo_Layout1DateOfAuditValue44 = DBS06ReportUtil.retrieveValueForElement(field.getDateOfAudit(), zeroFilingInfo_Layout1DateOfAuditMap45);

                                    
                                    Context FilingInfo_Layout1DateOfAuditContext43 = DBS06ReportContextUtil.createAsOfContext( bankCode, periodDate  );
                                        
                                    
                                if(!contextIdentifiers.contains(FilingInfo_Layout1DateOfAuditContext43.getId())) {
                                    contextElements.add(FilingInfo_Layout1DateOfAuditContext43);
                                    contextIdentifiers.add(FilingInfo_Layout1DateOfAuditContext43.getId());
                                }
                                // create element JAXB Element
                    
                                DateItemType dateOfAuditValue = new DateItemType();
                                dateOfAuditValue.setContextRef(FilingInfo_Layout1DateOfAuditContext43);
                                
                                dateOfAuditValue.setValue(DBS06ReportContextUtil.toXMLGeo(zeroFilingInfo_Layout1DateOfAuditValue44));
                                
                                
                                JAXBElement<DateItemType> dateOfAuditElement = instancObjectFactory.createDateOfAudit(dateOfAuditValue);
                                bodyElements.add(dateOfAuditElement);
                            
                        
                        
                            // start create element for report of FilingInfo_Layout1
                            // create unit if not empty
                            
                            // create context for none explict member
                            // TODO: remove once done
                            // - GeneralRemarks
                            
                                Map zeroFilingInfo_Layout1GeneralRemarksMap48 = new HashMap<String, String>();
                                
                                    // retrieve value for element
                                    String zeroFilingInfo_Layout1GeneralRemarksValue47 = DBS06ReportUtil.retrieveValueForElement(field.getGeneralRemarks(), zeroFilingInfo_Layout1GeneralRemarksMap48);

                                    
                                        Context FilingInfo_Layout1GeneralRemarksContext46 = DBS06ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                if(!contextIdentifiers.contains(FilingInfo_Layout1GeneralRemarksContext46.getId())) {
                                    contextElements.add(FilingInfo_Layout1GeneralRemarksContext46);
                                    contextIdentifiers.add(FilingInfo_Layout1GeneralRemarksContext46.getId());
                                }
                                // create element JAXB Element
                    
                                TextBlockItemType generalRemarksValue = new TextBlockItemType();
                                generalRemarksValue.setContextRef(FilingInfo_Layout1GeneralRemarksContext46);
                                
                                    generalRemarksValue.setValue(zeroFilingInfo_Layout1GeneralRemarksValue47);        
                                    
                                
                                JAXBElement<TextBlockItemType> generalRemarksElement = instancObjectFactory.createGeneralRemarks(generalRemarksValue);
                                bodyElements.add(generalRemarksElement);
                            
                        
                        
                        // end xbrl report element 
                    
                    // end if block for explicitMember is empty
            
                    // loop explicitMember if not empty -- insert taken out code
                    
                    // end loop for explicitmember
                    }

                
                    
                
                // if typemembers exist
                
                
                
                // create variable for subclass FilingInfo_Layout2 if any typeMembers then List or Single
                FilingInfo_Layout2 filingInfo_Layout2 = mainReportData.getFilingInfo_Layout2();
            
                
                    {
            
                    FilingInfo_Layout2 field = filingInfo_Layout2;
                    // if explict member is empty
                    
                        // create xbrl report element
                        
                            // start create element for report of FilingInfo_Layout2
                            // create unit if not empty
                            
                            // create context for none explict member
                            // TODO: remove once done
                            // - WhetherBankHasSubsidiaries
                            
                                Map zeroFilingInfo_Layout2WhetherBankHasSubsidiariesMap51 = new HashMap<String, String>();
                                
                                    // retrieve value for element
                                    String zeroFilingInfo_Layout2WhetherBankHasSubsidiariesValue50 = DBS06ReportUtil.retrieveValueForElement(field.getWhetherBankHasSubsidiaries(), zeroFilingInfo_Layout2WhetherBankHasSubsidiariesMap51);

                                    
                                    Context FilingInfo_Layout2WhetherBankHasSubsidiariesContext49 = DBS06ReportContextUtil.createAsOfContext( bankCode, periodDate  );
                                        
                                    
                                if(!contextIdentifiers.contains(FilingInfo_Layout2WhetherBankHasSubsidiariesContext49.getId())) {
                                    contextElements.add(FilingInfo_Layout2WhetherBankHasSubsidiariesContext49);
                                    contextIdentifiers.add(FilingInfo_Layout2WhetherBankHasSubsidiariesContext49.getId());
                                }
                                // create element JAXB Element
                    
                                BooleanItemType whetherBankHasSubsidiariesValue = new BooleanItemType();
                                whetherBankHasSubsidiariesValue.setContextRef(FilingInfo_Layout2WhetherBankHasSubsidiariesContext49);
                                
                                    whetherBankHasSubsidiariesValue.setValue(zeroFilingInfo_Layout2WhetherBankHasSubsidiariesValue50);        
                                    
                                
                                JAXBElement<BooleanItemType> whetherBankHasSubsidiariesElement = instancObjectFactory.createWhetherBankHasSubsidiaries(whetherBankHasSubsidiariesValue);
                                bodyElements.add(whetherBankHasSubsidiariesElement);
                            
                        
                        
                        // end xbrl report element 
                    
                    // end if block for explicitMember is empty
            
                    // loop explicitMember if not empty -- insert taken out code
                    
                    // end loop for explicitmember
                    }

                
                    
                
                // if typemembers exist
                
                
                
                // create variable for subclass DBSLeverageRatioSolo_Layout1 if any typeMembers then List or Single
                DBSLeverageRatioSolo_Layout1 dBSLeverageRatioSolo_Layout1 = mainReportData.getDBSLeverageRatioSolo_Layout1();
            
                
                    {
            
                    DBSLeverageRatioSolo_Layout1 field = dBSLeverageRatioSolo_Layout1;
                    // if explict member is empty
                    
                    // end if block for explicitMember is empty
            
                    // loop explicitMember if not empty -- insert taken out code
                    
                        
                            // create unit if not empty
                            
                                
                                Unit INR52 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR52 == null){
                                    INR52 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR52.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR52.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR52);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //LeverageRatioExposureAxis - ExposureAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap54 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap54.put("LeverageRatioExposureAxis", "DomesticSovereignsMember");                
                                
                                        // put embeddedexplicitmember into map
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap54.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisDomesticSovereignsMemberValue55 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap54);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisDomesticSovereignsMemberValue55 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisDomesticSovereignsMemberValue55)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext53 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap54 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext53.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext53);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext53.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisDomesticSovereignsMemberDataType57 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisDomesticSovereignsMemberDataType57.setContextRef(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext53);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisDomesticSovereignsMemberDataType57.setUnitRef(INR52);
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisDomesticSovereignsMemberDataType57.setDecimals(CommonFns.getDecimals(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisDomesticSovereignsMemberValue55, "100000"));
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisDomesticSovereignsMemberDataType57.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisDomesticSovereignsMemberValue55));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisDomesticSovereignsMemberElement56 = instancObjectFactory.createExposureAmount(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisDomesticSovereignsMemberDataType57);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisDomesticSovereignsMemberElement56);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                        // end xbrl report element
                    
                        
                            // create unit if not empty
                            
                                
                                Unit INR58 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR58 == null){
                                    INR58 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR58.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR58.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR58);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //LeverageRatioExposureAxis - ExposureAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap60 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap60.put("LeverageRatioExposureAxis", "ForeignSovereignsMember");                
                                
                                        // put embeddedexplicitmember into map
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap60.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignSovereignsMemberValue61 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap60);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignSovereignsMemberValue61 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignSovereignsMemberValue61)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext59 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap60 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext59.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext59);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext59.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignSovereignsMemberDataType63 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignSovereignsMemberDataType63.setContextRef(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext59);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignSovereignsMemberDataType63.setUnitRef(INR58);
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignSovereignsMemberDataType63.setDecimals(CommonFns.getDecimals(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignSovereignsMemberValue61, "100000"));
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignSovereignsMemberDataType63.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignSovereignsMemberValue61));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignSovereignsMemberElement62 = instancObjectFactory.createExposureAmount(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignSovereignsMemberDataType63);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignSovereignsMemberElement62);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                        // end xbrl report element
                    
                        
                            // create unit if not empty
                            
                                
                                Unit INR64 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR64 == null){
                                    INR64 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR64.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR64.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR64);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //LeverageRatioExposureAxis - ExposureAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap66 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap66.put("LeverageRatioExposureAxis", "BanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMember");                
                                
                                        // put embeddedexplicitmember into map
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap66.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberValue67 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap66);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberValue67 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberValue67)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext65 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap66 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext65.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext65);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext65.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberDataType69 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberDataType69.setContextRef(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext65);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberDataType69.setUnitRef(INR64);
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberDataType69.setDecimals(CommonFns.getDecimals(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberValue67, "100000"));
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberDataType69.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberValue67));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberElement68 = instancObjectFactory.createExposureAmount(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberDataType69);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberElement68);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                        // end xbrl report element
                    
                        
                            // create unit if not empty
                            
                                
                                Unit INR70 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR70 == null){
                                    INR70 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR70.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR70.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR70);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //LeverageRatioExposureAxis - ExposureAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap72 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap72.put("LeverageRatioExposureAxis", "ForeignBanksMember");                
                                
                                        // put embeddedexplicitmember into map
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap72.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignBanksMemberValue73 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap72);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignBanksMemberValue73 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignBanksMemberValue73)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext71 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap72 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext71.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext71);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext71.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignBanksMemberDataType75 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignBanksMemberDataType75.setContextRef(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext71);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignBanksMemberDataType75.setUnitRef(INR70);
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignBanksMemberDataType75.setDecimals(CommonFns.getDecimals(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignBanksMemberValue73, "100000"));
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignBanksMemberDataType75.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignBanksMemberValue73));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignBanksMemberElement74 = instancObjectFactory.createExposureAmount(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignBanksMemberDataType75);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignBanksMemberElement74);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                        // end xbrl report element
                    
                        
                            // create unit if not empty
                            
                                
                                Unit INR76 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR76 == null){
                                    INR76 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR76.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR76.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR76);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //LeverageRatioExposureAxis - ExposureAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap78 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap78.put("LeverageRatioExposureAxis", "DomesticPublicSectorEntitiesMember");                
                                
                                        // put embeddedexplicitmember into map
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap78.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisDomesticPublicSectorEntitiesMemberValue79 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap78);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisDomesticPublicSectorEntitiesMemberValue79 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisDomesticPublicSectorEntitiesMemberValue79)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext77 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap78 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext77.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext77);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext77.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisDomesticPublicSectorEntitiesMemberDataType81 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisDomesticPublicSectorEntitiesMemberDataType81.setContextRef(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext77);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisDomesticPublicSectorEntitiesMemberDataType81.setUnitRef(INR76);
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisDomesticPublicSectorEntitiesMemberDataType81.setDecimals(CommonFns.getDecimals(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisDomesticPublicSectorEntitiesMemberValue79, "100000"));
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisDomesticPublicSectorEntitiesMemberDataType81.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisDomesticPublicSectorEntitiesMemberValue79));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisDomesticPublicSectorEntitiesMemberElement80 = instancObjectFactory.createExposureAmount(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisDomesticPublicSectorEntitiesMemberDataType81);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisDomesticPublicSectorEntitiesMemberElement80);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                        // end xbrl report element
                    
                        
                            // create unit if not empty
                            
                                
                                Unit INR82 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR82 == null){
                                    INR82 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR82.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR82.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR82);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //LeverageRatioExposureAxis - ExposureAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap84 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap84.put("LeverageRatioExposureAxis", "ForeignPublicSectorEntitiesMember");                
                                
                                        // put embeddedexplicitmember into map
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap84.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignPublicSectorEntitiesMemberValue85 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap84);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignPublicSectorEntitiesMemberValue85 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignPublicSectorEntitiesMemberValue85)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext83 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap84 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext83.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext83);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext83.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignPublicSectorEntitiesMemberDataType87 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignPublicSectorEntitiesMemberDataType87.setContextRef(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext83);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignPublicSectorEntitiesMemberDataType87.setUnitRef(INR82);
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignPublicSectorEntitiesMemberDataType87.setDecimals(CommonFns.getDecimals(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignPublicSectorEntitiesMemberValue85, "100000"));
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignPublicSectorEntitiesMemberDataType87.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignPublicSectorEntitiesMemberValue85));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignPublicSectorEntitiesMemberElement86 = instancObjectFactory.createExposureAmount(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignPublicSectorEntitiesMemberDataType87);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignPublicSectorEntitiesMemberElement86);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                        // end xbrl report element
                    
                        
                            // create unit if not empty
                            
                                
                                Unit INR88 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR88 == null){
                                    INR88 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR88.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR88.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR88);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //LeverageRatioExposureAxis - ExposureAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap90 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap90.put("LeverageRatioExposureAxis", "PrimaryDealersMember");                
                                
                                        // put embeddedexplicitmember into map
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap90.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisPrimaryDealersMemberValue91 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap90);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisPrimaryDealersMemberValue91 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisPrimaryDealersMemberValue91)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext89 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap90 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext89.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext89);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext89.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisPrimaryDealersMemberDataType93 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisPrimaryDealersMemberDataType93.setContextRef(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext89);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisPrimaryDealersMemberDataType93.setUnitRef(INR88);
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisPrimaryDealersMemberDataType93.setDecimals(CommonFns.getDecimals(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisPrimaryDealersMemberValue91, "100000"));
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisPrimaryDealersMemberDataType93.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisPrimaryDealersMemberValue91));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisPrimaryDealersMemberElement92 = instancObjectFactory.createExposureAmount(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisPrimaryDealersMemberDataType93);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisPrimaryDealersMemberElement92);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                        // end xbrl report element
                    
                        
                            // create unit if not empty
                            
                                
                                Unit INR94 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR94 == null){
                                    INR94 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR94.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR94.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR94);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //LeverageRatioExposureAxis - ExposureAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap96 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap96.put("LeverageRatioExposureAxis", "CorporateMember");                
                                
                                        // put embeddedexplicitmember into map
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap96.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisCorporateMemberValue97 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap96);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisCorporateMemberValue97 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisCorporateMemberValue97)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext95 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap96 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext95.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext95);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext95.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisCorporateMemberDataType99 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisCorporateMemberDataType99.setContextRef(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext95);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisCorporateMemberDataType99.setUnitRef(INR94);
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisCorporateMemberDataType99.setDecimals(CommonFns.getDecimals(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisCorporateMemberValue97, "100000"));
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisCorporateMemberDataType99.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisCorporateMemberValue97));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisCorporateMemberElement98 = instancObjectFactory.createExposureAmount(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisCorporateMemberDataType99);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisCorporateMemberElement98);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                        // end xbrl report element
                    
                        
                            // create unit if not empty
                            
                                
                                Unit INR100 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR100 == null){
                                    INR100 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR100.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR100.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR100);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //LeverageRatioExposureAxis - ExposureAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap102 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap102.put("LeverageRatioExposureAxis", "ExposureToCCPsMember");                
                                
                                        // put embeddedexplicitmember into map
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap102.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToCCPsMemberValue103 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap102);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToCCPsMemberValue103 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToCCPsMemberValue103)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext101 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap102 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext101.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext101);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext101.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToCCPsMemberDataType105 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToCCPsMemberDataType105.setContextRef(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext101);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToCCPsMemberDataType105.setUnitRef(INR100);
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToCCPsMemberDataType105.setDecimals(CommonFns.getDecimals(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToCCPsMemberValue103, "100000"));
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToCCPsMemberDataType105.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToCCPsMemberValue103));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToCCPsMemberElement104 = instancObjectFactory.createExposureAmount(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToCCPsMemberDataType105);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToCCPsMemberElement104);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                        // end xbrl report element
                    
                        
                            // create unit if not empty
                            
                                
                                Unit INR106 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR106 == null){
                                    INR106 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR106.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR106.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR106);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //LeverageRatioExposureAxis - ExposureAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap108 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap108.put("LeverageRatioExposureAxis", "ExposureToCapitalOfCCPsMember");                
                                
                                        // put embeddedexplicitmember into map
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap108.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToCapitalOfCCPsMemberValue109 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap108);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToCapitalOfCCPsMemberValue109 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToCapitalOfCCPsMemberValue109)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext107 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap108 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext107.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext107);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext107.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToCapitalOfCCPsMemberDataType111 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToCapitalOfCCPsMemberDataType111.setContextRef(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext107);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToCapitalOfCCPsMemberDataType111.setUnitRef(INR106);
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToCapitalOfCCPsMemberDataType111.setDecimals(CommonFns.getDecimals(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToCapitalOfCCPsMemberValue109, "100000"));
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToCapitalOfCCPsMemberDataType111.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToCapitalOfCCPsMemberValue109));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToCapitalOfCCPsMemberElement110 = instancObjectFactory.createExposureAmount(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToCapitalOfCCPsMemberDataType111);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToCapitalOfCCPsMemberElement110);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                        // end xbrl report element
                    
                        
                            // create unit if not empty
                            
                                
                                Unit INR112 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR112 == null){
                                    INR112 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR112.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR112.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR112);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //LeverageRatioExposureAxis - ExposureAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap114 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap114.put("LeverageRatioExposureAxis", "ExposureToDefaultFundContributionOfCCPsMember");                
                                
                                        // put embeddedexplicitmember into map
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap114.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToDefaultFundContributionOfCCPsMemberValue115 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap114);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToDefaultFundContributionOfCCPsMemberValue115 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToDefaultFundContributionOfCCPsMemberValue115)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext113 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap114 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext113.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext113);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext113.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToDefaultFundContributionOfCCPsMemberDataType117 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToDefaultFundContributionOfCCPsMemberDataType117.setContextRef(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext113);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToDefaultFundContributionOfCCPsMemberDataType117.setUnitRef(INR112);
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToDefaultFundContributionOfCCPsMemberDataType117.setDecimals(CommonFns.getDecimals(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToDefaultFundContributionOfCCPsMemberValue115, "100000"));
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToDefaultFundContributionOfCCPsMemberDataType117.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToDefaultFundContributionOfCCPsMemberValue115));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToDefaultFundContributionOfCCPsMemberElement116 = instancObjectFactory.createExposureAmount(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToDefaultFundContributionOfCCPsMemberDataType117);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToDefaultFundContributionOfCCPsMemberElement116);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                        // end xbrl report element
                    
                        
                            // create unit if not empty
                            
                                
                                Unit INR118 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR118 == null){
                                    INR118 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR118.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR118.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR118);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //LeverageRatioExposureAxis - ExposureAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap120 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap120.put("LeverageRatioExposureAxis", "OtherExposureToCCPsMember");                
                                
                                        // put embeddedexplicitmember into map
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap120.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisOtherExposureToCCPsMemberValue121 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap120);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisOtherExposureToCCPsMemberValue121 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisOtherExposureToCCPsMemberValue121)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext119 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap120 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext119.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext119);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext119.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisOtherExposureToCCPsMemberDataType123 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisOtherExposureToCCPsMemberDataType123.setContextRef(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext119);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisOtherExposureToCCPsMemberDataType123.setUnitRef(INR118);
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisOtherExposureToCCPsMemberDataType123.setDecimals(CommonFns.getDecimals(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisOtherExposureToCCPsMemberValue121, "100000"));
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisOtherExposureToCCPsMemberDataType123.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisOtherExposureToCCPsMemberValue121));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisOtherExposureToCCPsMemberElement122 = instancObjectFactory.createExposureAmount(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisOtherExposureToCCPsMemberDataType123);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisOtherExposureToCCPsMemberElement122);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                        // end xbrl report element
                    
                        
                            // create unit if not empty
                            
                                
                                Unit INR124 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR124 == null){
                                    INR124 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR124.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR124.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR124);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //LeverageRatioExposureAxis - ExposureAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap126 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap126.put("LeverageRatioExposureAxis", "AllOtherExposuresMember");                
                                
                                        // put embeddedexplicitmember into map
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap126.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisAllOtherExposuresMemberValue127 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap126);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisAllOtherExposuresMemberValue127 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisAllOtherExposuresMemberValue127)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext125 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap126 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext125.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext125);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext125.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisAllOtherExposuresMemberDataType129 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisAllOtherExposuresMemberDataType129.setContextRef(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext125);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisAllOtherExposuresMemberDataType129.setUnitRef(INR124);
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisAllOtherExposuresMemberDataType129.setDecimals(CommonFns.getDecimals(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisAllOtherExposuresMemberValue127, "100000"));
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisAllOtherExposuresMemberDataType129.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisAllOtherExposuresMemberValue127));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisAllOtherExposuresMemberElement128 = instancObjectFactory.createExposureAmount(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisAllOtherExposuresMemberDataType129);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisAllOtherExposuresMemberElement128);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                        // end xbrl report element
                    
                        
                            // create unit if not empty
                            
                                
                                Unit INR130 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR130 == null){
                                    INR130 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR130.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR130.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR130);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //LeverageRatioExposureAxis - ExposureAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap132 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap132.put("LeverageRatioExposureAxis", "BalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMember");                
                                
                                        // put embeddedexplicitmember into map
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap132.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberValue133 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap132);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberValue133 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberValue133)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext131 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap132 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext131.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext131);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext131.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberDataType135 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberDataType135.setContextRef(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext131);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberDataType135.setUnitRef(INR130);
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberDataType135.setDecimals(CommonFns.getDecimals(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberValue133, "100000"));
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberDataType135.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberValue133));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberElement134 = instancObjectFactory.createExposureAmount(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberDataType135);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberElement134);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                        // end xbrl report element
                    
                        
                            // create unit if not empty
                            
                                
                                Unit INR136 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR136 == null){
                                    INR136 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR136.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR136.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR136);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //LeverageRatioExposureAxis - ExposureAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap138 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap138.put("LeverageRatioExposureAxis", "FiduciaryAssetsMember");                
                                
                                        // put embeddedexplicitmember into map
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap138.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisFiduciaryAssetsMemberValue139 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap138);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisFiduciaryAssetsMemberValue139 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisFiduciaryAssetsMemberValue139)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext137 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap138 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext137.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext137);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext137.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisFiduciaryAssetsMemberDataType141 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisFiduciaryAssetsMemberDataType141.setContextRef(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext137);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisFiduciaryAssetsMemberDataType141.setUnitRef(INR136);
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisFiduciaryAssetsMemberDataType141.setDecimals(CommonFns.getDecimals(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisFiduciaryAssetsMemberValue139, "100000"));
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisFiduciaryAssetsMemberDataType141.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisFiduciaryAssetsMemberValue139));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisFiduciaryAssetsMemberElement140 = instancObjectFactory.createExposureAmount(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisFiduciaryAssetsMemberDataType141);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisFiduciaryAssetsMemberElement140);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                        // end xbrl report element
                    
                        
                            // create unit if not empty
                            
                                
                                Unit INR142 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR142 == null){
                                    INR142 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR142.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR142.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR142);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //LeverageRatioExposureAxis - ExposureAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap144 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap144.put("LeverageRatioExposureAxis", "OnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMember");                
                                
                                        // put embeddedexplicitmember into map
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap144.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberValue145 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap144);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberValue145 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberValue145)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext143 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap144 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext143.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext143);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext143.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberDataType147 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberDataType147.setContextRef(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext143);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberDataType147.setUnitRef(INR142);
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberDataType147.setDecimals(CommonFns.getDecimals(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberValue145, "100000"));
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberDataType147.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberValue145));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberElement146 = instancObjectFactory.createExposureAmount(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberDataType147);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberElement146);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                        // end xbrl report element
                    
                    // end loop for explicitmember
                    }

                
                    
                
                // if typemembers exist
                
                
                
                // create variable for subclass DBSLeverageRatioSolo_Layout2 if any typeMembers then List or Single
                DBSLeverageRatioSolo_Layout2 dBSLeverageRatioSolo_Layout2 = mainReportData.getDBSLeverageRatioSolo_Layout2();
            
                
                    {
            
                    DBSLeverageRatioSolo_Layout2 field = dBSLeverageRatioSolo_Layout2;
                    // if explict member is empty
                    
                    // end if block for explicitMember is empty
            
                    // loop explicitMember if not empty -- insert taken out code
                    
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout2AbstractConsolidatedAndSeparateFinancialStatementsAxisMap149 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout2AbstractConsolidatedAndSeparateFinancialStatementsAxisMap149.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout2AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue150 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout2AbstractConsolidatedAndSeparateFinancialStatementsAxisMap149);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout2AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue150 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout2AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue150)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout2AbstractConsolidatedAndSeparateFinancialStatementsAxisContext148 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout2AbstractConsolidatedAndSeparateFinancialStatementsAxisMap149 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout2AbstractConsolidatedAndSeparateFinancialStatementsAxisContext148.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout2AbstractConsolidatedAndSeparateFinancialStatementsAxisContext148);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout2AbstractConsolidatedAndSeparateFinancialStatementsAxisContext148.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout2AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType152 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout2AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType152.setContextRef(explictMember1DBSLeverageRatioSolo_Layout2AbstractConsolidatedAndSeparateFinancialStatementsAxisContext148);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout2AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType152.setValue(explictMember1DBSLeverageRatioSolo_Layout2AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue150);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout2AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement151 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout2AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType152);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout2AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement151);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit pure153 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(pure153 == null){
                                    pure153 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    pure153.setId("PURE");
                                    QName unitMeasureValue = new QName("xbrli:pure");
                                    pure153.getMeasure().add(unitMeasureValue);
                                    unitElements.add(pure153);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - CreditConversionFactor
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap155 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap155.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue156 = DBS06ReportUtil.retrieveValueForElement(field.getCreditConversionFactor(), explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap155);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue156 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue156)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisContext154 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap155 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisContext154.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisContext154);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisContext154.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType158 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType158.setContextRef(explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisContext154);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType158.setValue(explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue156);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement157 = instancObjectFactory.createCreditConversionFactor(explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType158);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement157);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit pure159 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(pure159 == null){
                                    pure159 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    pure159.setId("PURE");
                                    QName unitMeasureValue = new QName("xbrli:pure");
                                    pure159.getMeasure().add(unitMeasureValue);
                                    unitElements.add(pure159);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - CreditConversionFactor
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap161 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap161.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue162 = DBS06ReportUtil.retrieveValueForElement(field.getCreditConversionFactor(), explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap161);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue162 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue162)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisContext160 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap161 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisContext160.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisContext160);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisContext160.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType164 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType164.setContextRef(explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisContext160);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType164.setValue(explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue162);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement163 = instancObjectFactory.createCreditConversionFactor(explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType164);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement163);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit pure165 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(pure165 == null){
                                    pure165 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    pure165.setId("PURE");
                                    QName unitMeasureValue = new QName("xbrli:pure");
                                    pure165.getMeasure().add(unitMeasureValue);
                                    unitElements.add(pure165);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - CreditConversionFactor
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap167 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap167.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue168 = DBS06ReportUtil.retrieveValueForElement(field.getCreditConversionFactor(), explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap167);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue168 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue168)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisContext166 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap167 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisContext166.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisContext166);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisContext166.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType170 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType170.setContextRef(explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisContext166);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType170.setValue(explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue168);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement169 = instancObjectFactory.createCreditConversionFactor(explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType170);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement169);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit pure171 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(pure171 == null){
                                    pure171 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    pure171.setId("PURE");
                                    QName unitMeasureValue = new QName("xbrli:pure");
                                    pure171.getMeasure().add(unitMeasureValue);
                                    unitElements.add(pure171);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - CreditConversionFactor
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap173 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap173.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue174 = DBS06ReportUtil.retrieveValueForElement(field.getCreditConversionFactor(), explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap173);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue174 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue174)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisContext172 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap173 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisContext172.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisContext172);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisContext172.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType176 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType176.setContextRef(explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisContext172);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType176.setValue(explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue174);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement175 = instancObjectFactory.createCreditConversionFactor(explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType176);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement175);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit pure177 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(pure177 == null){
                                    pure177 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    pure177.setId("PURE");
                                    QName unitMeasureValue = new QName("xbrli:pure");
                                    pure177.getMeasure().add(unitMeasureValue);
                                    unitElements.add(pure177);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - CreditConversionFactor
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap179 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap179.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue180 = DBS06ReportUtil.retrieveValueForElement(field.getCreditConversionFactor(), explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap179);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue180 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue180)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisContext178 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap179 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisContext178.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisContext178);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisContext178.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType182 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType182.setContextRef(explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisContext178);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType182.setValue(explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue180);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement181 = instancObjectFactory.createCreditConversionFactor(explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType182);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement181);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit pure183 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(pure183 == null){
                                    pure183 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    pure183.setId("PURE");
                                    QName unitMeasureValue = new QName("xbrli:pure");
                                    pure183.getMeasure().add(unitMeasureValue);
                                    unitElements.add(pure183);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - CreditConversionFactor
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap185 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap185.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue186 = DBS06ReportUtil.retrieveValueForElement(field.getCreditConversionFactor(), explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap185);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue186 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue186)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisContext184 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap185 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisContext184.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisContext184);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisContext184.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType188 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType188.setContextRef(explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisContext184);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType188.setValue(explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue186);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement187 = instancObjectFactory.createCreditConversionFactor(explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType188);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement187);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout2AbstractConsolidatedAndSeparateFinancialStatementsAxisMap190 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout2AbstractConsolidatedAndSeparateFinancialStatementsAxisMap190.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout2AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue191 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout2AbstractConsolidatedAndSeparateFinancialStatementsAxisMap190);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout2AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue191 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout2AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue191)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout2AbstractConsolidatedAndSeparateFinancialStatementsAxisContext189 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout2AbstractConsolidatedAndSeparateFinancialStatementsAxisMap190 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout2AbstractConsolidatedAndSeparateFinancialStatementsAxisContext189.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout2AbstractConsolidatedAndSeparateFinancialStatementsAxisContext189);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout2AbstractConsolidatedAndSeparateFinancialStatementsAxisContext189.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout2AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType193 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout2AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType193.setContextRef(explictMember1DBSLeverageRatioSolo_Layout2AbstractConsolidatedAndSeparateFinancialStatementsAxisContext189);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout2AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType193.setValue(explictMember1DBSLeverageRatioSolo_Layout2AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue191);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout2AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement192 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout2AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType193);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout2AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement192);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                        // end xbrl report element
                    
                    // end loop for explicitmember
                    }

                
                    
                
                // if typemembers exist
                
                
                
                // create variable for subclass DBSLeverageRatioSolo_Layout3 if any typeMembers then List or Single
                DBSLeverageRatioSolo_Layout3 dBSLeverageRatioSolo_Layout3 = mainReportData.getDBSLeverageRatioSolo_Layout3();
            
                
                    {
            
                    DBSLeverageRatioSolo_Layout3 field = dBSLeverageRatioSolo_Layout3;
                    // if explict member is empty
                    
                    // end if block for explicitMember is empty
            
                    // loop explicitMember if not empty -- insert taken out code
                    
                        
                            // create unit if not empty
                            
                                
                                Unit INR194 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR194 == null){
                                    INR194 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR194.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR194.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR194);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap196 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap196.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue197 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap196);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue197 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue197)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext195 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap196 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext195.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext195);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext195.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType199 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType199.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext195);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType199.setValue(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue197);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement198 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType199);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement198);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR200 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR200 == null){
                                    INR200 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR200.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR200.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR200);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap202 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap202.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue203 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap202);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue203 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue203)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext201 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap202 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext201.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext201);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext201.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType205 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType205.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext201);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType205.setValue(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue203);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement204 = instancObjectFactory.createReplacementCost(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType205);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement204);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR206 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR206 == null){
                                    INR206 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR206.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR206.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR206);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap208 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap208.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue209 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap208);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue209 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue209)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext207 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap208 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext207.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext207);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext207.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType211 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType211.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext207);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType211.setValue(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue209);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement210 = instancObjectFactory.createPotentialFutureExposure(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType211);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement210);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap213 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap213.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue214 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap213);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue214 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue214)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext212 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap213 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext212.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext212);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext212.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType216 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType216.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext212);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType216.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue214);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement215 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType216);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement215);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR217 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR217 == null){
                                    INR217 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR217.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR217.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR217);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap219 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap219.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue220 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap219);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue220 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue220)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext218 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap219 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext218.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext218);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext218.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType222 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType222.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext218);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType222.setValue(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue220);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement221 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType222);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement221);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR223 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR223 == null){
                                    INR223 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR223.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR223.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR223);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap225 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap225.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue226 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap225);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue226 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue226)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext224 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap225 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext224.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext224);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext224.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType228 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType228.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext224);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType228.setValue(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue226);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement227 = instancObjectFactory.createReplacementCost(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType228);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement227);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR229 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR229 == null){
                                    INR229 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR229.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR229.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR229);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap231 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap231.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue232 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap231);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue232 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue232)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext230 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap231 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext230.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext230);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext230.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType234 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType234.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext230);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType234.setValue(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue232);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement233 = instancObjectFactory.createPotentialFutureExposure(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType234);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement233);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap236 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap236.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue237 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap236);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue237 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue237)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext235 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap236 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext235.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext235);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext235.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType239 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType239.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext235);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType239.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue237);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement238 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType239);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement238);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR240 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR240 == null){
                                    INR240 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR240.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR240.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR240);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap242 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap242.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue243 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap242);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue243 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue243)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext241 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap242 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext241.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext241);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext241.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType245 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType245.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext241);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType245.setValue(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue243);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement244 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType245);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement244);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR246 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR246 == null){
                                    INR246 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR246.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR246.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR246);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap248 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap248.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue249 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap248);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue249 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue249)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext247 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap248 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext247.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext247);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext247.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType251 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType251.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext247);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType251.setValue(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue249);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement250 = instancObjectFactory.createReplacementCost(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType251);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement250);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR252 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR252 == null){
                                    INR252 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR252.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR252.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR252);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap254 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap254.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue255 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap254);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue255 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue255)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext253 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap254 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext253.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext253);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext253.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType257 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType257.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext253);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType257.setValue(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue255);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement256 = instancObjectFactory.createPotentialFutureExposure(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType257);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement256);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap259 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap259.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue260 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap259);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue260 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue260)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext258 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap259 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext258.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext258);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext258.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType262 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType262.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext258);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType262.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue260);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement261 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType262);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement261);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR263 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR263 == null){
                                    INR263 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR263.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR263.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR263);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap265 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap265.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue266 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap265);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue266 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue266)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext264 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap265 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext264.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext264);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext264.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType268 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType268.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext264);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType268.setValue(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue266);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement267 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType268);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement267);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR269 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR269 == null){
                                    INR269 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR269.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR269.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR269);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap271 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap271.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue272 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap271);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue272 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue272)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext270 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap271 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext270.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext270);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext270.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType274 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType274.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext270);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType274.setValue(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue272);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement273 = instancObjectFactory.createReplacementCost(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType274);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement273);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR275 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR275 == null){
                                    INR275 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR275.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR275.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR275);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap277 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap277.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue278 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap277);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue278 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue278)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext276 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap277 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext276.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext276);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext276.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType280 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType280.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext276);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType280.setValue(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue278);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement279 = instancObjectFactory.createPotentialFutureExposure(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType280);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement279);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap282 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap282.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue283 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap282);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue283 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue283)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext281 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap282 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext281.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext281);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext281.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType285 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType285.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext281);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType285.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue283);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement284 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType285);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement284);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR286 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR286 == null){
                                    INR286 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR286.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR286.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR286);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap288 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap288.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue289 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap288);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue289 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue289)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext287 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap288 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext287.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext287);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext287.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType291 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType291.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext287);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType291.setValue(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue289);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement290 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType291);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement290);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR292 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR292 == null){
                                    INR292 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR292.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR292.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR292);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap294 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap294.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue295 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap294);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue295 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue295)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext293 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap294 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext293.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext293);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext293.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType297 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType297.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext293);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType297.setValue(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue295);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement296 = instancObjectFactory.createReplacementCost(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType297);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement296);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR298 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR298 == null){
                                    INR298 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR298.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR298.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR298);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap300 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap300.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue301 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap300);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue301 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue301)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext299 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap300 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext299.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext299);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext299.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType303 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType303.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext299);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType303.setValue(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue301);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement302 = instancObjectFactory.createPotentialFutureExposure(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType303);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement302);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap305 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap305.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue306 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap305);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue306 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue306)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext304 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap305 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext304.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext304);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext304.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType308 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType308.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext304);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType308.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue306);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement307 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType308);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement307);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR309 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR309 == null){
                                    INR309 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR309.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR309.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR309);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap311 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap311.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue312 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap311);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue312 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue312)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext310 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap311 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext310.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext310);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext310.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType314 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType314.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext310);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType314.setValue(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue312);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement313 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType314);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement313);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR315 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR315 == null){
                                    INR315 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR315.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR315.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR315);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap317 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap317.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue318 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap317);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue318 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue318)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext316 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap317 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext316.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext316);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext316.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType320 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType320.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext316);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType320.setValue(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue318);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement319 = instancObjectFactory.createReplacementCost(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType320);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement319);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR321 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR321 == null){
                                    INR321 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR321.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR321.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR321);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap323 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap323.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue324 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap323);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue324 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue324)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext322 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap323 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext322.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext322);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext322.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType326 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType326.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext322);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType326.setValue(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue324);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement325 = instancObjectFactory.createPotentialFutureExposure(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType326);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement325);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap328 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap328.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue329 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap328);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue329 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue329)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext327 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap328 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext327.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext327);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext327.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType331 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType331.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext327);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType331.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue329);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement330 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType331);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement330);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR332 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR332 == null){
                                    INR332 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR332.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR332.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR332);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap334 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap334.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue335 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap334);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue335 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue335)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext333 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap334 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext333.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext333);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext333.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType337 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType337.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext333);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType337.setValue(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue335);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement336 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType337);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement336);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR338 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR338 == null){
                                    INR338 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR338.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR338.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR338);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap340 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap340.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue341 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap340);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue341 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue341)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext339 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap340 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext339.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext339);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext339.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType343 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType343.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext339);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType343.setValue(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue341);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement342 = instancObjectFactory.createReplacementCost(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType343);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement342);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR344 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR344 == null){
                                    INR344 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR344.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR344.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR344);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap346 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap346.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue347 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap346);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue347 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue347)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext345 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap346 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext345.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext345);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext345.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType349 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType349.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext345);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType349.setValue(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue347);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement348 = instancObjectFactory.createPotentialFutureExposure(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType349);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement348);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap351 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap351.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue352 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap351);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue352 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue352)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext350 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap351 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext350.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext350);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext350.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType354 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType354.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext350);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType354.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue352);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement353 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType354);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement353);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR355 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR355 == null){
                                    INR355 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR355.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR355.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR355);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap357 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap357.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue358 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap357);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue358 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue358)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext356 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap357 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext356.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext356);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext356.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType360 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType360.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext356);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType360.setValue(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue358);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement359 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType360);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement359);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR361 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR361 == null){
                                    INR361 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR361.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR361.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR361);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap363 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap363.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue364 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap363);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue364 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue364)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext362 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap363 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext362.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext362);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext362.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType366 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType366.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext362);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType366.setValue(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue364);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement365 = instancObjectFactory.createReplacementCost(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType366);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement365);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR367 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR367 == null){
                                    INR367 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR367.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR367.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR367);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap369 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap369.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue370 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap369);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue370 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue370)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext368 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap369 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext368.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext368);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext368.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType372 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType372.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext368);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType372.setValue(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue370);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement371 = instancObjectFactory.createPotentialFutureExposure(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType372);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement371);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap374 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap374.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue375 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap374);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue375 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue375)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext373 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap374 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext373.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext373);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext373.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType377 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType377.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext373);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType377.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue375);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement376 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType377);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement376);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR378 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR378 == null){
                                    INR378 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR378.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR378.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR378);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap380 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap380.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue381 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap380);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue381 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue381)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext379 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap380 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext379.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext379);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext379.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType383 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType383.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext379);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType383.setValue(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue381);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement382 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType383);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement382);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR384 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR384 == null){
                                    INR384 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR384.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR384.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR384);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap386 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap386.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue387 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap386);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue387 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue387)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext385 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap386 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext385.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext385);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext385.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType389 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType389.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext385);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType389.setValue(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue387);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement388 = instancObjectFactory.createReplacementCost(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType389);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement388);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR390 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR390 == null){
                                    INR390 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR390.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR390.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR390);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap392 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap392.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue393 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap392);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue393 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue393)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext391 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap392 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext391.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext391);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext391.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType395 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType395.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext391);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType395.setValue(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue393);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement394 = instancObjectFactory.createPotentialFutureExposure(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType395);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement394);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap397 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap397.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue398 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap397);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue398 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue398)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext396 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap397 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext396.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext396);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext396.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType400 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType400.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext396);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType400.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue398);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement399 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType400);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement399);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR401 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR401 == null){
                                    INR401 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR401.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR401.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR401);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap403 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap403.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue404 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap403);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue404 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue404)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext402 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap403 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext402.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext402);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext402.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType406 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType406.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext402);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType406.setValue(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue404);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement405 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType406);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement405);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap408 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap408.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue409 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap408);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue409 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue409)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext407 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap408 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext407.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext407);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext407.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType411 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType411.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext407);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType411.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue409);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement410 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType411);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement410);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap413 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap413.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue414 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap413);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue414 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue414)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext412 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap413 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext412.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext412);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext412.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType416 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType416.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext412);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType416.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue414);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement415 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType416);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement415);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap418 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap418.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue419 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap418);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue419 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue419)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext417 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap418 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext417.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext417);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext417.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType421 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType421.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext417);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType421.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue419);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement420 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType421);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement420);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR422 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR422 == null){
                                    INR422 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR422.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR422.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR422);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap424 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap424.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue425 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap424);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue425 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue425)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext423 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap424 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext423.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext423);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext423.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType427 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType427.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext423);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType427.setValue(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue425);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement426 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType427);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement426);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap429 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap429.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue430 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap429);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue430 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue430)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext428 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap429 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext428.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext428);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext428.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType432 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType432.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext428);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType432.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue430);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement431 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType432);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement431);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap434 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap434.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue435 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap434);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue435 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue435)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext433 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap434 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext433.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext433);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext433.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType437 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType437.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext433);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType437.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue435);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement436 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType437);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement436);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap439 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap439.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue440 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap439);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue440 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue440)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext438 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap439 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext438.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext438);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext438.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType442 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType442.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext438);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType442.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue440);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement441 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType442);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement441);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR443 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR443 == null){
                                    INR443 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR443.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR443.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR443);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap445 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap445.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue446 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap445);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue446 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue446)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext444 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap445 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext444.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext444);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext444.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType448 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType448.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext444);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType448.setValue(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue446);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement447 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType448);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement447);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap450 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap450.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue451 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap450);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue451 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue451)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext449 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap450 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext449.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext449);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext449.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType453 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType453.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext449);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType453.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue451);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement452 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType453);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement452);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap455 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap455.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue456 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap455);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue456 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue456)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext454 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap455 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext454.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext454);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext454.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType458 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType458.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext454);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType458.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue456);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement457 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType458);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement457);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap460 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap460.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue461 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap460);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue461 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue461)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext459 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap460 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext459.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext459);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext459.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType463 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType463.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext459);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType463.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue461);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement462 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType463);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement462);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR464 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR464 == null){
                                    INR464 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR464.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR464.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR464);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap466 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap466.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue467 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap466);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue467 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue467)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext465 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap466 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext465.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext465);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext465.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType469 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType469.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext465);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType469.setValue(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue467);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement468 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType469);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement468);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap471 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap471.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue472 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap471);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue472 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue472)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext470 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap471 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext470.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext470);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext470.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType474 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType474.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext470);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType474.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue472);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement473 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType474);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement473);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap476 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap476.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue477 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap476);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue477 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue477)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext475 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap476 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext475.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext475);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext475.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType479 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType479.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext475);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType479.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue477);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement478 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType479);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement478);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap481 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap481.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue482 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap481);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue482 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue482)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext480 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap481 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext480.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext480);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext480.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType484 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType484.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext480);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType484.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue482);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement483 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType484);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement483);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR485 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR485 == null){
                                    INR485 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR485.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR485.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR485);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap487 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap487.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue488 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap487);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue488 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue488)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext486 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap487 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext486.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext486);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext486.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType490 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType490.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext486);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType490.setValue(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue488);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement489 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType490);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement489);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap492 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap492.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue493 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap492);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue493 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue493)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext491 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap492 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext491.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext491);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext491.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType495 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType495.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext491);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType495.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue493);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement494 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType495);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement494);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap497 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap497.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue498 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap497);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue498 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue498)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext496 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap497 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext496.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext496);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext496.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType500 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType500.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext496);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType500.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue498);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement499 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType500);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement499);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap502 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap502.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue503 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap502);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue503 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue503)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext501 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap502 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext501.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext501);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext501.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType505 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType505.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext501);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType505.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue503);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement504 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType505);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement504);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR506 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR506 == null){
                                    INR506 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR506.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR506.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR506);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap508 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap508.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue509 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap508);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue509 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue509)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext507 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap508 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext507.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext507);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext507.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType511 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType511.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext507);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType511.setValue(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue509);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement510 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType511);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement510);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap513 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap513.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue514 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap513);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue514 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue514)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext512 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap513 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext512.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext512);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext512.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType516 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType516.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext512);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType516.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue514);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement515 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType516);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement515);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap518 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap518.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue519 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap518);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue519 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue519)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext517 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap518 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext517.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext517);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext517.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType521 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType521.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext517);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType521.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue519);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement520 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType521);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement520);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap523 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap523.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue524 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap523);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue524 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue524)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext522 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap523 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext522.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext522);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext522.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType526 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType526.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext522);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType526.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue524);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement525 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType526);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement525);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR527 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR527 == null){
                                    INR527 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR527.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR527.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR527);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap529 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap529.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue530 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap529);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue530 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue530)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext528 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap529 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext528.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext528);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext528.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType532 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType532.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext528);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType532.setValue(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue530);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement531 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType532);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement531);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap534 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap534.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue535 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap534);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue535 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue535)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext533 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap534 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext533.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext533);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext533.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType537 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType537.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext533);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType537.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue535);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement536 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType537);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement536);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap539 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap539.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue540 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap539);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue540 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue540)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext538 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap539 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext538.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext538);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext538.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType542 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType542.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext538);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType542.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue540);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement541 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType542);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement541);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap544 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap544.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue545 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap544);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue545 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue545)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext543 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap544 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext543.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext543);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext543.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType547 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType547.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext543);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType547.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue545);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement546 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType547);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement546);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap549 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap549.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue550 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap549);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue550 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue550)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext548 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap549 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext548.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext548);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext548.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType552 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType552.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext548);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType552.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue550);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement551 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType552);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement551);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR553 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR553 == null){
                                    INR553 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR553.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR553.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR553);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap555 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap555.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue556 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap555);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue556 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue556)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext554 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap555 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext554.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext554);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext554.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType558 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType558.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext554);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType558.setValue(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue556);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement557 = instancObjectFactory.createReplacementCost(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType558);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement557);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap560 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap560.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue561 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap560);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue561 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue561)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext559 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap560 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext559.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext559);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext559.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType563 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType563.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext559);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType563.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue561);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement562 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType563);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement562);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap565 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap565.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue566 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap565);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue566 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue566)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext564 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap565 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext564.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext564);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext564.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType568 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType568.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext564);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType568.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue566);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement567 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType568);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement567);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap570 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap570.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue571 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap570);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue571 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue571)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext569 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap570 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext569.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext569);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext569.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType573 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType573.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext569);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType573.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue571);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement572 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType573);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement572);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR574 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR574 == null){
                                    INR574 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR574.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR574.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR574);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap576 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap576.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue577 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap576);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue577 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue577)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext575 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap576 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext575.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext575);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext575.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType579 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType579.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext575);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType579.setValue(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue577);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement578 = instancObjectFactory.createReplacementCost(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType579);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement578);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap581 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap581.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue582 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap581);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue582 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue582)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext580 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap581 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext580.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext580);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext580.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType584 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType584.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext580);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType584.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue582);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement583 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType584);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement583);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap586 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap586.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue587 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap586);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue587 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue587)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext585 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap586 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext585.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext585);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext585.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType589 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType589.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext585);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType589.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue587);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement588 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType589);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement588);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap591 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap591.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue592 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap591);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue592 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue592)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext590 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap591 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext590.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext590);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext590.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType594 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType594.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext590);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType594.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue592);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement593 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType594);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement593);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR595 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR595 == null){
                                    INR595 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR595.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR595.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR595);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap597 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap597.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue598 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap597);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue598 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue598)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext596 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap597 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext596.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext596);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext596.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType600 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType600.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext596);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType600.setValue(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue598);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement599 = instancObjectFactory.createReplacementCost(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType600);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement599);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap602 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap602.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue603 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap602);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue603 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue603)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext601 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap602 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext601.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext601);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext601.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType605 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType605.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext601);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType605.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue603);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement604 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType605);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement604);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap607 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap607.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue608 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap607);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue608 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue608)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext606 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap607 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext606.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext606);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext606.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType610 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType610.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext606);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType610.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue608);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement609 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType610);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement609);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap612 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap612.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue613 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap612);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue613 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue613)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext611 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap612 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext611.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext611);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext611.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType615 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType615.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext611);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType615.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue613);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement614 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType615);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement614);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR616 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR616 == null){
                                    INR616 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR616.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR616.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR616);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap618 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap618.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue619 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap618);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue619 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue619)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext617 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap618 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext617.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext617);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext617.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType621 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType621.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext617);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType621.setValue(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue619);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement620 = instancObjectFactory.createReplacementCost(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType621);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement620);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap623 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap623.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue624 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap623);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue624 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue624)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext622 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap623 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext622.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext622);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext622.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType626 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType626.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext622);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType626.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue624);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement625 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType626);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement625);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap628 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap628.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue629 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap628);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue629 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue629)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext627 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap628 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext627.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext627);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext627.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType631 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType631.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext627);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType631.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue629);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement630 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType631);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement630);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap633 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap633.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue634 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap633);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue634 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue634)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext632 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap633 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext632.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext632);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext632.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType636 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType636.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext632);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType636.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue634);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement635 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType636);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement635);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap638 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap638.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue639 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap638);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue639 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue639)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext637 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap638 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext637.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext637);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext637.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType641 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType641.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext637);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType641.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue639);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement640 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType641);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement640);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR642 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR642 == null){
                                    INR642 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR642.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR642.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR642);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap644 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap644.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue645 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap644);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue645 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue645)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext643 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap644 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext643.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext643);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext643.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType647 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType647.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext643);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType647.setValue(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue645);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement646 = instancObjectFactory.createPotentialFutureExposure(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType647);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement646);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap649 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap649.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue650 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap649);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue650 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue650)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext648 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap649 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext648.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext648);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext648.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType652 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType652.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext648);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType652.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue650);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement651 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType652);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement651);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap654 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap654.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue655 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap654);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue655 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue655)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext653 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap654 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext653.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext653);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext653.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType657 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType657.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext653);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType657.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue655);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement656 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType657);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement656);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap659 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap659.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue660 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap659);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue660 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue660)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext658 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap659 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext658.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext658);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext658.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType662 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType662.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext658);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType662.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue660);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement661 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType662);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement661);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap664 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap664.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue665 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap664);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue665 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue665)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext663 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap664 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext663.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext663);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext663.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType667 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType667.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext663);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType667.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue665);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement666 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType667);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement666);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR668 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR668 == null){
                                    INR668 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR668.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR668.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR668);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - ExposureAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisMap670 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisMap670.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue671 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisMap670);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue671 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue671)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisContext669 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisMap670 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisContext669.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisContext669);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisContext669.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType673 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType673.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisContext669);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType673.setValue(explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue671);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement672 = instancObjectFactory.createExposureAmount(explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType673);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement672);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                        // end xbrl report element
                    
                        
                            // create unit if not empty
                            
                                
                                Unit INR674 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR674 == null){
                                    INR674 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR674.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR674.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR674);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap676 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap676.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue677 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap676);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue677 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue677)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext675 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap676 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext675.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext675);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext675.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType679 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType679.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext675);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType679.setValue(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue677);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement678 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType679);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement678);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR680 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR680 == null){
                                    INR680 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR680.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR680.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR680);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap682 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap682.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue683 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap682);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue683 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue683)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext681 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap682 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext681.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext681);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext681.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType685 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType685.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext681);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType685.setValue(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue683);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement684 = instancObjectFactory.createReplacementCost(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType685);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement684);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR686 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR686 == null){
                                    INR686 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR686.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR686.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR686);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap688 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap688.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue689 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap688);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue689 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue689)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext687 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap688 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext687.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext687);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext687.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType691 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType691.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext687);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType691.setValue(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue689);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement690 = instancObjectFactory.createPotentialFutureExposure(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType691);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement690);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap693 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap693.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue694 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap693);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue694 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue694)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext692 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap693 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext692.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext692);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext692.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType696 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType696.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext692);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType696.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue694);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement695 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType696);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement695);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR697 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR697 == null){
                                    INR697 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR697.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR697.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR697);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap699 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap699.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue700 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap699);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue700 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue700)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext698 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap699 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext698.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext698);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext698.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType702 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType702.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext698);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType702.setValue(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue700);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement701 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType702);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement701);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR703 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR703 == null){
                                    INR703 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR703.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR703.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR703);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap705 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap705.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue706 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap705);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue706 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue706)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext704 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap705 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext704.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext704);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext704.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType708 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType708.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext704);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType708.setValue(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue706);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement707 = instancObjectFactory.createReplacementCost(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType708);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement707);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR709 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR709 == null){
                                    INR709 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR709.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR709.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR709);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap711 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap711.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue712 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap711);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue712 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue712)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext710 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap711 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext710.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext710);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext710.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType714 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType714.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext710);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType714.setValue(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue712);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement713 = instancObjectFactory.createPotentialFutureExposure(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType714);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement713);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap716 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap716.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue717 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap716);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue717 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue717)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext715 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap716 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext715.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext715);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext715.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType719 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType719.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext715);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType719.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue717);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement718 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType719);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement718);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR720 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR720 == null){
                                    INR720 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR720.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR720.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR720);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap722 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap722.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue723 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap722);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue723 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue723)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext721 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap722 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext721.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext721);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext721.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType725 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType725.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext721);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType725.setValue(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue723);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement724 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType725);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement724);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR726 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR726 == null){
                                    INR726 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR726.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR726.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR726);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap728 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap728.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue729 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap728);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue729 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue729)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext727 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap728 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext727.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext727);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext727.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType731 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType731.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext727);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType731.setValue(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue729);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement730 = instancObjectFactory.createReplacementCost(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType731);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement730);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR732 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR732 == null){
                                    INR732 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR732.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR732.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR732);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap734 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap734.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue735 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap734);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue735 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue735)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext733 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap734 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext733.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext733);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext733.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType737 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType737.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext733);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType737.setValue(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue735);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement736 = instancObjectFactory.createPotentialFutureExposure(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType737);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement736);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap739 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap739.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue740 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap739);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue740 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue740)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext738 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap739 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext738.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext738);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext738.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType742 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType742.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext738);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType742.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue740);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement741 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType742);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement741);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR743 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR743 == null){
                                    INR743 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR743.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR743.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR743);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap745 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap745.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue746 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap745);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue746 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue746)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext744 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap745 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext744.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext744);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext744.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType748 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType748.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext744);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType748.setValue(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue746);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement747 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType748);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement747);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR749 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR749 == null){
                                    INR749 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR749.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR749.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR749);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap751 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap751.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue752 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap751);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue752 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue752)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext750 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap751 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext750.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext750);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext750.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType754 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType754.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext750);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType754.setValue(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue752);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement753 = instancObjectFactory.createReplacementCost(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType754);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement753);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR755 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR755 == null){
                                    INR755 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR755.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR755.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR755);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap757 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap757.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue758 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap757);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue758 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue758)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext756 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap757 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext756.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext756);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext756.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType760 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType760.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext756);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType760.setValue(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue758);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement759 = instancObjectFactory.createPotentialFutureExposure(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType760);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement759);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap762 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap762.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue763 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap762);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue763 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue763)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext761 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap762 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext761.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext761);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext761.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType765 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType765.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext761);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType765.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue763);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement764 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType765);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement764);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR766 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR766 == null){
                                    INR766 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR766.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR766.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR766);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap768 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap768.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue769 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap768);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue769 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue769)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext767 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap768 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext767.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext767);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext767.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType771 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType771.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext767);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType771.setValue(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue769);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement770 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType771);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement770);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR772 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR772 == null){
                                    INR772 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR772.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR772.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR772);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap774 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap774.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue775 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap774);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue775 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue775)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext773 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap774 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext773.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext773);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext773.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType777 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType777.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext773);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType777.setValue(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue775);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement776 = instancObjectFactory.createReplacementCost(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType777);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement776);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR778 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR778 == null){
                                    INR778 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR778.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR778.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR778);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap780 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap780.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue781 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap780);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue781 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue781)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext779 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap780 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext779.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext779);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext779.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType783 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType783.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext779);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType783.setValue(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue781);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement782 = instancObjectFactory.createPotentialFutureExposure(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType783);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement782);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap785 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap785.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue786 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap785);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue786 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue786)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext784 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap785 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext784.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext784);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext784.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType788 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType788.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext784);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType788.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue786);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement787 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType788);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement787);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR789 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR789 == null){
                                    INR789 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR789.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR789.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR789);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap791 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap791.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue792 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap791);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue792 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue792)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext790 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap791 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext790.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext790);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext790.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType794 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType794.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext790);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType794.setValue(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue792);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement793 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType794);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement793);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR795 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR795 == null){
                                    INR795 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR795.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR795.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR795);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap797 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap797.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue798 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap797);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue798 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue798)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext796 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap797 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext796.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext796);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext796.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType800 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType800.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext796);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType800.setValue(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue798);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement799 = instancObjectFactory.createReplacementCost(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType800);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement799);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR801 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR801 == null){
                                    INR801 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR801.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR801.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR801);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap803 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap803.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue804 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap803);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue804 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue804)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext802 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap803 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext802.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext802);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext802.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType806 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType806.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext802);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType806.setValue(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue804);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement805 = instancObjectFactory.createPotentialFutureExposure(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType806);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement805);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap808 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap808.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue809 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap808);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue809 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue809)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext807 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap808 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext807.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext807);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext807.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType811 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType811.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext807);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType811.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue809);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement810 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType811);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement810);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR812 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR812 == null){
                                    INR812 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR812.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR812.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR812);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap814 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap814.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue815 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap814);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue815 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue815)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext813 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap814 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext813.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext813);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext813.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType817 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType817.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext813);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType817.setValue(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue815);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement816 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType817);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement816);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR818 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR818 == null){
                                    INR818 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR818.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR818.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR818);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap820 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap820.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue821 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap820);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue821 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue821)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext819 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap820 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext819.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext819);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext819.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType823 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType823.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext819);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType823.setValue(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue821);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement822 = instancObjectFactory.createReplacementCost(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType823);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement822);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR824 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR824 == null){
                                    INR824 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR824.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR824.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR824);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap826 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap826.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue827 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap826);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue827 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue827)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext825 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap826 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext825.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext825);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext825.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType829 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType829.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext825);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType829.setValue(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue827);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement828 = instancObjectFactory.createPotentialFutureExposure(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType829);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement828);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap831 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap831.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue832 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap831);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue832 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue832)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext830 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap831 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext830.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext830);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext830.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType834 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType834.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext830);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType834.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue832);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement833 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType834);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement833);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR835 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR835 == null){
                                    INR835 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR835.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR835.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR835);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap837 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap837.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue838 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap837);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue838 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue838)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext836 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap837 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext836.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext836);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext836.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType840 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType840.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext836);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType840.setValue(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue838);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement839 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType840);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement839);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR841 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR841 == null){
                                    INR841 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR841.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR841.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR841);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap843 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap843.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue844 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap843);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue844 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue844)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext842 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap843 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext842.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext842);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext842.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType846 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType846.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext842);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType846.setValue(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue844);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement845 = instancObjectFactory.createReplacementCost(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType846);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement845);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR847 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR847 == null){
                                    INR847 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR847.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR847.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR847);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap849 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap849.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue850 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap849);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue850 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue850)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext848 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap849 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext848.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext848);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext848.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType852 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType852.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext848);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType852.setValue(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue850);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement851 = instancObjectFactory.createPotentialFutureExposure(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType852);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement851);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap854 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap854.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue855 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap854);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue855 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue855)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext853 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap854 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext853.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext853);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext853.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType857 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType857.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext853);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType857.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue855);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement856 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType857);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement856);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR858 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR858 == null){
                                    INR858 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR858.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR858.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR858);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap860 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap860.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue861 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap860);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue861 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue861)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext859 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap860 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext859.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext859);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext859.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType863 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType863.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext859);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType863.setValue(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue861);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement862 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType863);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement862);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR864 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR864 == null){
                                    INR864 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR864.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR864.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR864);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap866 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap866.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue867 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap866);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue867 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue867)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext865 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap866 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext865.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext865);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext865.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType869 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType869.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext865);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType869.setValue(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue867);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement868 = instancObjectFactory.createReplacementCost(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType869);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement868);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR870 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR870 == null){
                                    INR870 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR870.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR870.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR870);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap872 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap872.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue873 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap872);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue873 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue873)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext871 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap872 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext871.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext871);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext871.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType875 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType875.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext871);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType875.setValue(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue873);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement874 = instancObjectFactory.createPotentialFutureExposure(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType875);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement874);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap877 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap877.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue878 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap877);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue878 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue878)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext876 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap877 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext876.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext876);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext876.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType880 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType880.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext876);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType880.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue878);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement879 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType880);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement879);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR881 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR881 == null){
                                    INR881 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR881.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR881.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR881);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap883 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap883.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue884 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap883);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue884 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue884)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext882 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap883 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext882.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext882);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext882.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType886 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType886.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext882);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType886.setValue(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue884);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement885 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType886);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement885);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap888 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap888.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue889 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap888);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue889 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue889)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext887 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap888 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext887.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext887);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext887.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType891 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType891.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext887);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType891.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue889);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement890 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType891);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement890);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap893 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap893.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue894 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap893);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue894 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue894)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext892 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap893 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext892.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext892);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext892.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType896 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType896.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext892);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType896.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue894);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement895 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType896);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement895);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap898 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap898.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue899 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap898);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue899 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue899)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext897 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap898 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext897.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext897);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext897.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType901 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType901.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext897);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType901.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue899);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement900 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType901);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement900);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR902 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR902 == null){
                                    INR902 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR902.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR902.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR902);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap904 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap904.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue905 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap904);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue905 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue905)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext903 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap904 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext903.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext903);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext903.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType907 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType907.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext903);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType907.setValue(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue905);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement906 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType907);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement906);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap909 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap909.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue910 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap909);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue910 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue910)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext908 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap909 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext908.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext908);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext908.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType912 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType912.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext908);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType912.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue910);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement911 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType912);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement911);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap914 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap914.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue915 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap914);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue915 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue915)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext913 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap914 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext913.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext913);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext913.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType917 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType917.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext913);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType917.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue915);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement916 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType917);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement916);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap919 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap919.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue920 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap919);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue920 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue920)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext918 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap919 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext918.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext918);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext918.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType922 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType922.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext918);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType922.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue920);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement921 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType922);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement921);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR923 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR923 == null){
                                    INR923 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR923.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR923.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR923);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap925 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap925.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue926 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap925);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue926 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue926)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext924 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap925 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext924.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext924);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext924.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType928 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType928.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext924);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType928.setValue(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue926);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement927 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType928);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement927);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap930 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap930.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue931 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap930);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue931 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue931)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext929 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap930 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext929.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext929);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext929.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType933 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType933.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext929);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType933.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue931);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement932 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType933);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement932);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap935 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap935.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue936 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap935);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue936 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue936)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext934 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap935 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext934.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext934);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext934.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType938 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType938.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext934);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType938.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue936);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement937 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType938);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement937);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap940 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap940.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue941 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap940);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue941 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue941)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext939 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap940 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext939.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext939);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext939.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType943 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType943.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext939);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType943.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue941);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement942 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType943);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement942);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR944 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR944 == null){
                                    INR944 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR944.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR944.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR944);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap946 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap946.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue947 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap946);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue947 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue947)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext945 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap946 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext945.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext945);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext945.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType949 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType949.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext945);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType949.setValue(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue947);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement948 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType949);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement948);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap951 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap951.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue952 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap951);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue952 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue952)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext950 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap951 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext950.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext950);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext950.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType954 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType954.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext950);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType954.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue952);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement953 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType954);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement953);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap956 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap956.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue957 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap956);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue957 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue957)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext955 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap956 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext955.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext955);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext955.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType959 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType959.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext955);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType959.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue957);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement958 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType959);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement958);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap961 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap961.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue962 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap961);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue962 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue962)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext960 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap961 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext960.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext960);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext960.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType964 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType964.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext960);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType964.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue962);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement963 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType964);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement963);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR965 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR965 == null){
                                    INR965 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR965.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR965.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR965);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap967 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap967.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue968 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap967);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue968 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue968)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext966 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap967 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext966.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext966);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext966.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType970 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType970.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext966);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType970.setValue(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue968);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement969 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType970);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement969);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap972 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap972.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue973 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap972);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue973 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue973)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext971 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap972 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext971.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext971);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext971.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType975 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType975.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext971);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType975.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue973);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement974 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType975);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement974);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap977 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap977.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue978 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap977);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue978 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue978)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext976 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap977 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext976.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext976);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext976.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType980 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType980.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext976);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType980.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue978);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement979 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType980);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement979);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap982 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap982.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue983 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap982);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue983 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue983)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext981 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap982 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext981.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext981);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext981.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType985 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType985.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext981);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType985.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue983);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement984 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType985);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement984);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR986 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR986 == null){
                                    INR986 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR986.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR986.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR986);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap988 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap988.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue989 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap988);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue989 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue989)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext987 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap988 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext987.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext987);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext987.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType991 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType991.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext987);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType991.setValue(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue989);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement990 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType991);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement990);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap993 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap993.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue994 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap993);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue994 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue994)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext992 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap993 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext992.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext992);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext992.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType996 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType996.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext992);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType996.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue994);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement995 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType996);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement995);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap998 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap998.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue999 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap998);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue999 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue999)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext997 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap998 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext997.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext997);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext997.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1001 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1001.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext997);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1001.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue999);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1000 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1001);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1000);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1003 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1003.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1004 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1003);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1004 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1004)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1002 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1003 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1002.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1002);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1002.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1006 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1006.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1002);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1006.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1004);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1005 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1006);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1005);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1007 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1007 == null){
                                    INR1007 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1007.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1007.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1007);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1009 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1009.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1010 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1009);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1010 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1010)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1008 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1009 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1008.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1008);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1008.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1012 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1012.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1008);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1012.setValue(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1010);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1011 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1012);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1011);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1014 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1014.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1015 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1014);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1015 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1015)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1013 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1014 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1013.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1013);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1013.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1017 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1017.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1013);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1017.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1015);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1016 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1017);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1016);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1019 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1019.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1020 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1019);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1020 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1020)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1018 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1019 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1018.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1018);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1018.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1022 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1022.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1018);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1022.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1020);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1021 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1022);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1021);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1024 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1024.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1025 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1024);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1025 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1025)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1023 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1024 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1023.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1023);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1023.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1027 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1027.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1023);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1027.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1025);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1026 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1027);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1026);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1029 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1029.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1030 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1029);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1030 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1030)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1028 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1029 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1028.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1028);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1028.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1032 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1032.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1028);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1032.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1030);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1031 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1032);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1031);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1033 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1033 == null){
                                    INR1033 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1033.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1033.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1033);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1035 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1035.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1036 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1035);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1036 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1036)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1034 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1035 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1034.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1034);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1034.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1038 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1038.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1034);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1038.setValue(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1036);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1037 = instancObjectFactory.createReplacementCost(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1038);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1037);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1040 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1040.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1041 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1040);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1041 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1041)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1039 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1040 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1039.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1039);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1039.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1043 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1043.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1039);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1043.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1041);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1042 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1043);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1042);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1045 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1045.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1046 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1045);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1046 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1046)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1044 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1045 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1044.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1044);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1044.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1048 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1048.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1044);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1048.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1046);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1047 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1048);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1047);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1050 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1050.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1051 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1050);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1051 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1051)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1049 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1050 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1049.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1049);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1049.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1053 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1053.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1049);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1053.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1051);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1052 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1053);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1052);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1054 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1054 == null){
                                    INR1054 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1054.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1054.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1054);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1056 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1056.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1057 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1056);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1057 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1057)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1055 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1056 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1055.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1055);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1055.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1059 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1059.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1055);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1059.setValue(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1057);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1058 = instancObjectFactory.createReplacementCost(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1059);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1058);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1061 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1061.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1062 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1061);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1062 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1062)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1060 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1061 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1060.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1060);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1060.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1064 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1064.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1060);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1064.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1062);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1063 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1064);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1063);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1066 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1066.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1067 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1066);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1067 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1067)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1065 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1066 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1065.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1065);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1065.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1069 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1069.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1065);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1069.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1067);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1068 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1069);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1068);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1071 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1071.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1072 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1071);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1072 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1072)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1070 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1071 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1070.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1070);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1070.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1074 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1074.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1070);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1074.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1072);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1073 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1074);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1073);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1075 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1075 == null){
                                    INR1075 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1075.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1075.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1075);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1077 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1077.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1078 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1077);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1078 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1078)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1076 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1077 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1076.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1076);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1076.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1080 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1080.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1076);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1080.setValue(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1078);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1079 = instancObjectFactory.createReplacementCost(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1080);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1079);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1082 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1082.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1083 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1082);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1083 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1083)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1081 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1082 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1081.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1081);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1081.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1085 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1085.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1081);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1085.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1083);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1084 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1085);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1084);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1087 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1087.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1088 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1087);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1088 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1088)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1086 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1087 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1086.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1086);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1086.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1090 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1090.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1086);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1090.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1088);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1089 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1090);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1089);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1092 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1092.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1093 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1092);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1093 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1093)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1091 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1092 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1091.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1091);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1091.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1095 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1095.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1091);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1095.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1093);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1094 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1095);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1094);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1096 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1096 == null){
                                    INR1096 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1096.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1096.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1096);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1098 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1098.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1099 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1098);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1099 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1099)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1097 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1098 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1097.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1097);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1097.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1101 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1101.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1097);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1101.setValue(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1099);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1100 = instancObjectFactory.createReplacementCost(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1101);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1100);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1103 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1103.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1104 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1103);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1104 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1104)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1102 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1103 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1102.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1102);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1102.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1106 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1106.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1102);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1106.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1104);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1105 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1106);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1105);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1108 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1108.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1109 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1108);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1109 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1109)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1107 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1108 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1107.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1107);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1107.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1111 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1111.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1107);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1111.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1109);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1110 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1111);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1110);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1113 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1113.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1114 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1113);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1114 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1114)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1112 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1113 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1112.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1112);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1112.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1116 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1116.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1112);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1116.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1114);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1115 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1116);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1115);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1118 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1118.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1119 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1118);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1119 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1119)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1117 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1118 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1117.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1117);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1117.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1121 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1121.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1117);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1121.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1119);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1120 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1121);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1120);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1122 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1122 == null){
                                    INR1122 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1122.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1122.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1122);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1124 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1124.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1125 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1124);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1125 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1125)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1123 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1124 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1123.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1123);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1123.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1127 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1127.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1123);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1127.setValue(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1125);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1126 = instancObjectFactory.createPotentialFutureExposure(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1127);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1126);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1129 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1129.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1130 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1129);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1130 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1130)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1128 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1129 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1128.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1128);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1128.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1132 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1132.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1128);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1132.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1130);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1131 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1132);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1131);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1134 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1134.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1135 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1134);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1135 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1135)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1133 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1134 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1133.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1133);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1133.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1137 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1137.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1133);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1137.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1135);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1136 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1137);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1136);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1139 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1139.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1140 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1139);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1140 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1140)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1138 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1139 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1138.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1138);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1138.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1142 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1142.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1138);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1142.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1140);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1141 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1142);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1141);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1144 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1144.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1145 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1144);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1145 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1145)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1143 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1144 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1143.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1143);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1143.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1147 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1147.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1143);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1147.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1145);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1146 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1147);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1146);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1148 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1148 == null){
                                    INR1148 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1148.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1148.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1148);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - ExposureAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisMap1150 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisMap1150.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1151 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisMap1150);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1151 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1151)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisContext1149 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisMap1150 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisContext1149.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisContext1149);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisContext1149.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1153 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1153.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisContext1149);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1153.setValue(explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1151);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1152 = instancObjectFactory.createExposureAmount(explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1153);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1152);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                        // end xbrl report element
                    
                        
                            // create unit if not empty
                            
                                
                                Unit INR1154 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1154 == null){
                                    INR1154 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1154.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1154.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1154);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1156 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1156.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1157 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1156);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1157 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1157)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1155 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1156 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1155.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1155);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1155.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1159 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1159.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1155);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1159.setValue(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1157);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1158 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1159);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1158);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1160 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1160 == null){
                                    INR1160 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1160.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1160.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1160);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1162 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1162.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1163 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1162);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1163 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1163)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1161 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1162 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1161.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1161);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1161.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1165 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1165.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1161);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1165.setValue(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1163);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1164 = instancObjectFactory.createReplacementCost(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1165);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1164);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1166 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1166 == null){
                                    INR1166 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1166.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1166.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1166);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1168 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1168.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1169 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1168);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1169 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1169)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1167 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1168 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1167.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1167);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1167.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1171 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1171.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1167);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1171.setValue(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1169);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1170 = instancObjectFactory.createPotentialFutureExposure(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1171);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1170);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1173 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1173.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1174 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1173);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1174 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1174)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1172 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1173 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1172.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1172);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1172.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1176 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1176.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1172);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1176.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1174);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1175 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1176);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1175);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1177 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1177 == null){
                                    INR1177 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1177.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1177.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1177);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1179 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1179.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1180 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1179);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1180 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1180)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1178 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1179 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1178.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1178);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1178.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1182 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1182.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1178);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1182.setValue(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1180);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1181 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1182);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1181);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1183 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1183 == null){
                                    INR1183 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1183.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1183.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1183);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1185 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1185.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1186 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1185);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1186 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1186)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1184 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1185 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1184.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1184);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1184.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1188 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1188.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1184);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1188.setValue(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1186);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1187 = instancObjectFactory.createReplacementCost(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1188);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1187);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1189 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1189 == null){
                                    INR1189 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1189.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1189.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1189);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1191 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1191.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1192 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1191);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1192 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1192)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1190 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1191 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1190.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1190);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1190.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1194 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1194.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1190);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1194.setValue(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1192);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1193 = instancObjectFactory.createPotentialFutureExposure(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1194);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1193);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1196 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1196.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1197 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1196);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1197 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1197)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1195 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1196 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1195.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1195);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1195.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1199 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1199.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1195);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1199.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1197);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1198 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1199);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1198);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1200 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1200 == null){
                                    INR1200 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1200.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1200.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1200);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1202 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1202.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1203 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1202);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1203 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1203)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1201 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1202 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1201.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1201);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1201.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1205 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1205.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1201);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1205.setValue(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1203);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1204 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1205);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1204);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1206 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1206 == null){
                                    INR1206 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1206.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1206.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1206);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1208 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1208.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1209 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1208);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1209 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1209)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1207 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1208 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1207.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1207);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1207.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1211 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1211.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1207);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1211.setValue(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1209);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1210 = instancObjectFactory.createReplacementCost(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1211);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1210);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1212 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1212 == null){
                                    INR1212 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1212.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1212.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1212);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1214 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1214.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1215 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1214);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1215 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1215)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1213 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1214 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1213.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1213);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1213.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1217 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1217.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1213);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1217.setValue(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1215);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1216 = instancObjectFactory.createPotentialFutureExposure(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1217);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1216);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1219 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1219.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1220 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1219);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1220 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1220)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1218 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1219 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1218.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1218);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1218.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1222 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1222.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1218);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1222.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1220);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1221 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1222);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1221);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1223 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1223 == null){
                                    INR1223 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1223.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1223.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1223);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1225 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1225.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1226 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1225);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1226 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1226)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1224 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1225 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1224.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1224);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1224.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1228 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1228.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1224);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1228.setValue(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1226);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1227 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1228);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1227);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1229 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1229 == null){
                                    INR1229 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1229.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1229.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1229);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1231 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1231.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1232 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1231);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1232 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1232)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1230 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1231 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1230.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1230);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1230.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1234 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1234.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1230);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1234.setValue(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1232);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1233 = instancObjectFactory.createReplacementCost(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1234);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1233);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1235 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1235 == null){
                                    INR1235 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1235.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1235.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1235);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1237 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1237.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1238 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1237);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1238 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1238)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1236 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1237 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1236.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1236);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1236.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1240 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1240.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1236);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1240.setValue(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1238);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1239 = instancObjectFactory.createPotentialFutureExposure(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1240);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1239);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1242 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1242.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1243 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1242);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1243 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1243)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1241 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1242 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1241.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1241);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1241.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1245 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1245.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1241);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1245.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1243);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1244 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1245);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1244);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1246 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1246 == null){
                                    INR1246 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1246.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1246.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1246);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1248 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1248.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1249 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1248);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1249 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1249)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1247 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1248 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1247.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1247);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1247.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1251 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1251.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1247);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1251.setValue(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1249);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1250 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1251);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1250);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1252 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1252 == null){
                                    INR1252 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1252.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1252.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1252);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1254 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1254.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1255 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1254);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1255 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1255)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1253 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1254 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1253.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1253);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1253.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1257 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1257.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1253);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1257.setValue(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1255);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1256 = instancObjectFactory.createReplacementCost(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1257);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1256);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1258 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1258 == null){
                                    INR1258 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1258.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1258.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1258);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1260 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1260.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1261 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1260);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1261 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1261)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1259 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1260 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1259.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1259);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1259.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1263 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1263.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1259);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1263.setValue(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1261);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1262 = instancObjectFactory.createPotentialFutureExposure(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1263);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1262);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1265 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1265.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1266 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1265);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1266 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1266)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1264 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1265 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1264.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1264);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1264.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1268 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1268.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1264);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1268.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1266);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1267 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1268);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1267);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1269 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1269 == null){
                                    INR1269 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1269.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1269.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1269);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1271 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1271.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1272 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1271);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1272 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1272)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1270 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1271 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1270.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1270);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1270.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1274 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1274.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1270);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1274.setValue(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1272);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1273 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1274);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1273);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1275 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1275 == null){
                                    INR1275 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1275.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1275.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1275);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1277 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1277.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1278 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1277);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1278 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1278)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1276 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1277 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1276.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1276);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1276.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1280 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1280.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1276);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1280.setValue(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1278);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1279 = instancObjectFactory.createReplacementCost(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1280);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1279);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1281 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1281 == null){
                                    INR1281 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1281.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1281.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1281);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1283 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1283.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1284 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1283);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1284 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1284)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1282 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1283 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1282.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1282);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1282.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1286 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1286.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1282);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1286.setValue(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1284);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1285 = instancObjectFactory.createPotentialFutureExposure(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1286);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1285);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1288 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1288.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1289 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1288);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1289 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1289)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1287 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1288 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1287.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1287);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1287.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1291 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1291.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1287);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1291.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1289);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1290 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1291);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1290);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1292 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1292 == null){
                                    INR1292 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1292.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1292.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1292);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1294 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1294.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1295 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1294);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1295 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1295)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1293 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1294 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1293.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1293);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1293.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1297 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1297.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1293);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1297.setValue(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1295);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1296 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1297);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1296);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1298 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1298 == null){
                                    INR1298 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1298.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1298.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1298);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1300 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1300.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1301 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1300);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1301 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1301)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1299 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1300 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1299.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1299);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1299.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1303 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1303.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1299);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1303.setValue(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1301);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1302 = instancObjectFactory.createReplacementCost(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1303);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1302);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1304 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1304 == null){
                                    INR1304 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1304.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1304.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1304);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1306 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1306.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1307 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1306);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1307 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1307)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1305 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1306 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1305.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1305);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1305.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1309 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1309.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1305);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1309.setValue(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1307);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1308 = instancObjectFactory.createPotentialFutureExposure(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1309);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1308);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1311 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1311.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1312 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1311);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1312 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1312)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1310 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1311 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1310.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1310);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1310.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1314 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1314.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1310);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1314.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1312);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1313 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1314);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1313);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1315 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1315 == null){
                                    INR1315 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1315.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1315.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1315);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1317 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1317.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1318 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1317);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1318 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1318)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1316 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1317 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1316.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1316);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1316.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1320 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1320.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1316);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1320.setValue(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1318);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1319 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1320);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1319);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1321 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1321 == null){
                                    INR1321 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1321.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1321.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1321);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1323 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1323.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1324 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1323);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1324 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1324)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1322 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1323 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1322.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1322);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1322.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1326 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1326.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1322);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1326.setValue(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1324);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1325 = instancObjectFactory.createReplacementCost(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1326);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1325);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1327 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1327 == null){
                                    INR1327 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1327.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1327.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1327);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1329 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1329.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1330 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1329);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1330 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1330)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1328 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1329 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1328.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1328);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1328.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1332 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1332.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1328);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1332.setValue(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1330);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1331 = instancObjectFactory.createPotentialFutureExposure(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1332);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1331);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1334 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1334.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1335 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1334);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1335 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1335)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1333 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1334 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1333.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1333);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1333.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1337 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1337.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1333);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1337.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1335);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1336 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1337);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1336);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1338 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1338 == null){
                                    INR1338 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1338.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1338.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1338);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1340 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1340.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1341 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1340);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1341 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1341)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1339 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1340 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1339.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1339);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1339.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1343 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1343.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1339);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1343.setValue(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1341);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1342 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1343);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1342);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1344 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1344 == null){
                                    INR1344 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1344.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1344.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1344);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1346 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1346.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1347 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1346);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1347 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1347)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1345 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1346 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1345.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1345);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1345.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1349 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1349.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1345);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1349.setValue(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1347);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1348 = instancObjectFactory.createReplacementCost(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1349);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1348);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1350 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1350 == null){
                                    INR1350 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1350.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1350.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1350);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1352 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1352.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1353 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1352);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1353 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1353)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1351 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1352 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1351.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1351);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1351.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1355 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1355.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1351);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1355.setValue(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1353);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1354 = instancObjectFactory.createPotentialFutureExposure(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1355);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1354);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1357 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1357.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1358 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1357);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1358 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1358)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1356 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1357 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1356.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1356);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1356.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1360 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1360.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1356);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1360.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1358);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1359 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1360);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1359);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1361 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1361 == null){
                                    INR1361 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1361.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1361.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1361);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1363 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1363.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1364 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1363);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1364 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1364)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1362 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1363 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1362.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1362);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1362.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1366 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1366.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1362);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1366.setValue(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1364);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1365 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1366);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1365);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1368 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1368.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1369 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1368);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1369 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1369)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1367 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1368 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1367.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1367);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1367.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1371 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1371.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1367);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1371.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1369);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1370 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1371);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1370);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1373 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1373.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1374 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1373);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1374 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1374)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1372 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1373 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1372.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1372);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1372.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1376 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1376.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1372);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1376.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1374);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1375 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1376);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1375);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1378 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1378.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1379 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1378);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1379 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1379)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1377 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1378 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1377.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1377);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1377.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1381 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1381.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1377);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1381.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1379);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1380 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1381);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1380);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1382 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1382 == null){
                                    INR1382 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1382.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1382.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1382);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1384 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1384.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1385 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1384);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1385 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1385)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1383 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1384 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1383.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1383);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1383.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1387 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1387.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1383);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1387.setValue(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1385);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1386 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1387);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1386);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1389 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1389.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1390 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1389);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1390 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1390)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1388 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1389 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1388.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1388);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1388.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1392 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1392.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1388);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1392.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1390);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1391 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1392);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1391);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1394 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1394.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1395 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1394);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1395 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1395)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1393 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1394 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1393.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1393);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1393.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1397 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1397.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1393);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1397.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1395);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1396 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1397);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1396);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1399 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1399.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1400 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1399);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1400 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1400)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1398 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1399 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1398.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1398);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1398.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1402 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1402.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1398);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1402.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1400);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1401 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1402);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1401);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1403 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1403 == null){
                                    INR1403 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1403.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1403.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1403);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1405 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1405.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1406 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1405);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1406 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1406)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1404 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1405 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1404.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1404);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1404.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1408 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1408.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1404);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1408.setValue(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1406);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1407 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1408);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1407);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1410 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1410.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1411 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1410);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1411 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1411)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1409 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1410 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1409.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1409);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1409.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1413 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1413.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1409);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1413.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1411);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1412 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1413);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1412);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1415 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1415.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1416 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1415);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1416 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1416)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1414 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1415 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1414.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1414);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1414.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1418 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1418.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1414);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1418.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1416);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1417 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1418);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1417);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1420 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1420.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1421 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1420);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1421 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1421)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1419 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1420 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1419.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1419);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1419.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1423 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1423.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1419);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1423.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1421);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1422 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1423);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1422);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1424 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1424 == null){
                                    INR1424 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1424.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1424.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1424);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1426 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1426.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1427 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1426);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1427 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1427)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1425 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1426 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1425.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1425);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1425.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1429 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1429.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1425);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1429.setValue(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1427);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1428 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1429);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1428);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1431 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1431.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1432 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1431);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1432 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1432)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1430 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1431 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1430.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1430);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1430.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1434 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1434.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1430);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1434.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1432);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1433 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1434);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1433);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1436 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1436.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1437 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1436);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1437 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1437)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1435 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1436 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1435.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1435);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1435.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1439 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1439.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1435);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1439.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1437);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1438 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1439);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1438);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1441 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1441.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1442 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1441);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1442 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1442)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1440 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1441 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1440.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1440);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1440.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1444 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1444.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1440);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1444.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1442);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1443 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1444);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1443);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1445 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1445 == null){
                                    INR1445 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1445.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1445.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1445);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1447 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1447.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1448 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1447);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1448 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1448)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1446 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1447 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1446.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1446);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1446.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1450 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1450.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1446);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1450.setValue(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1448);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1449 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1450);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1449);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1452 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1452.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1453 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1452);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1453 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1453)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1451 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1452 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1451.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1451);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1451.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1455 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1455.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1451);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1455.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1453);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1454 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1455);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1454);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1457 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1457.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1458 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1457);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1458 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1458)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1456 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1457 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1456.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1456);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1456.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1460 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1460.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1456);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1460.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1458);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1459 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1460);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1459);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1462 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1462.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1463 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1462);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1463 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1463)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1461 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1462 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1461.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1461);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1461.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1465 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1465.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1461);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1465.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1463);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1464 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1465);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1464);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1466 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1466 == null){
                                    INR1466 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1466.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1466.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1466);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1468 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1468.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1469 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1468);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1469 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1469)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1467 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1468 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1467.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1467);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1467.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1471 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1471.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1467);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1471.setValue(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1469);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1470 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1471);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1470);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1473 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1473.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1474 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1473);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1474 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1474)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1472 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1473 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1472.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1472);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1472.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1476 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1476.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1472);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1476.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1474);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1475 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1476);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1475);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1478 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1478.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1479 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1478);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1479 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1479)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1477 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1478 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1477.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1477);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1477.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1481 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1481.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1477);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1481.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1479);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1480 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1481);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1480);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1483 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1483.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1484 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1483);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1484 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1484)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1482 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1483 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1482.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1482);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1482.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1486 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1486.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1482);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1486.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1484);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1485 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1486);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1485);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1487 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1487 == null){
                                    INR1487 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1487.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1487.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1487);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1489 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1489.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1490 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1489);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1490 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1490)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1488 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1489 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1488.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1488);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1488.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1492 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1492.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1488);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1492.setValue(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1490);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1491 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1492);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1491);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1494 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1494.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1495 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1494);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1495 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1495)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1493 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1494 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1493.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1493);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1493.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1497 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1497.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1493);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1497.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1495);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1496 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1497);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1496);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1499 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1499.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1500 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1499);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1500 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1500)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1498 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1499 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1498.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1498);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1498.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1502 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1502.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1498);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1502.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1500);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1501 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1502);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1501);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1504 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1504.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1505 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1504);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1505 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1505)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1503 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1504 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1503.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1503);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1503.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1507 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1507.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1503);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1507.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1505);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1506 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1507);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1506);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1509 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1509.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1510 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1509);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1510 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1510)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1508 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1509 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1508.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1508);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1508.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1512 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1512.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1508);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1512.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1510);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1511 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1512);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1511);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1513 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1513 == null){
                                    INR1513 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1513.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1513.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1513);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1515 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1515.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1516 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1515);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1516 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1516)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1514 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1515 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1514.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1514);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1514.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1518 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1518.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1514);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1518.setValue(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1516);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1517 = instancObjectFactory.createReplacementCost(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1518);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1517);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1520 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1520.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1521 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1520);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1521 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1521)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1519 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1520 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1519.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1519);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1519.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1523 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1523.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1519);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1523.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1521);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1522 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1523);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1522);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1525 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1525.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1526 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1525);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1526 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1526)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1524 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1525 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1524.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1524);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1524.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1528 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1528.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1524);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1528.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1526);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1527 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1528);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1527);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1530 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1530.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1531 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1530);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1531 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1531)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1529 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1530 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1529.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1529);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1529.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1533 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1533.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1529);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1533.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1531);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1532 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1533);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1532);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1534 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1534 == null){
                                    INR1534 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1534.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1534.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1534);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1536 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1536.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1537 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1536);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1537 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1537)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1535 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1536 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1535.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1535);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1535.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1539 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1539.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1535);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1539.setValue(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1537);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1538 = instancObjectFactory.createReplacementCost(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1539);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1538);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1541 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1541.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1542 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1541);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1542 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1542)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1540 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1541 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1540.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1540);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1540.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1544 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1544.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1540);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1544.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1542);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1543 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1544);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1543);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1546 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1546.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1547 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1546);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1547 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1547)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1545 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1546 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1545.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1545);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1545.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1549 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1549.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1545);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1549.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1547);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1548 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1549);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1548);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1551 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1551.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1552 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1551);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1552 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1552)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1550 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1551 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1550.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1550);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1550.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1554 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1554.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1550);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1554.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1552);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1553 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1554);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1553);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1555 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1555 == null){
                                    INR1555 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1555.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1555.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1555);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1557 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1557.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1558 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1557);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1558 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1558)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1556 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1557 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1556.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1556);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1556.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1560 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1560.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1556);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1560.setValue(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1558);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1559 = instancObjectFactory.createReplacementCost(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1560);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1559);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1562 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1562.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1563 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1562);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1563 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1563)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1561 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1562 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1561.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1561);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1561.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1565 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1565.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1561);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1565.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1563);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1564 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1565);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1564);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1567 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1567.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1568 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1567);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1568 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1568)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1566 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1567 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1566.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1566);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1566.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1570 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1570.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1566);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1570.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1568);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1569 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1570);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1569);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1572 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1572.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1573 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1572);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1573 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1573)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1571 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1572 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1571.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1571);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1571.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1575 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1575.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1571);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1575.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1573);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1574 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1575);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1574);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1576 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1576 == null){
                                    INR1576 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1576.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1576.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1576);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1578 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1578.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1579 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1578);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1579 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1579)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1577 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1578 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1577.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1577);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1577.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1581 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1581.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1577);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1581.setValue(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1579);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1580 = instancObjectFactory.createReplacementCost(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1581);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1580);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1583 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1583.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1584 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1583);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1584 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1584)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1582 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1583 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1582.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1582);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1582.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1586 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1586.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1582);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1586.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1584);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1585 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1586);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1585);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1588 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1588.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1589 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1588);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1589 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1589)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1587 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1588 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1587.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1587);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1587.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1591 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1591.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1587);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1591.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1589);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1590 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1591);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1590);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1593 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1593.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1594 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1593);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1594 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1594)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1592 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1593 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1592.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1592);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1592.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1596 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1596.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1592);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1596.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1594);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1595 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1596);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1595);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1598 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1598.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1599 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1598);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1599 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1599)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1597 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1598 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1597.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1597);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1597.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1601 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1601.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1597);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1601.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1599);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1600 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1601);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1600);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1602 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1602 == null){
                                    INR1602 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1602.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1602.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1602);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1604 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1604.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1605 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1604);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1605 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1605)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1603 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1604 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1603.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1603);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1603.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1607 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1607.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1603);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1607.setValue(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1605);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1606 = instancObjectFactory.createPotentialFutureExposure(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1607);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1606);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1609 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1609.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1610 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1609);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1610 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1610)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1608 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1609 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1608.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1608);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1608.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1612 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1612.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1608);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1612.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1610);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1611 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1612);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1611);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1614 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1614.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1615 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1614);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1615 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1615)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1613 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1614 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1613.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1613);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1613.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1617 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1617.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1613);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1617.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1615);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1616 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1617);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1616);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1619 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1619.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1620 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1619);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1620 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1620)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1618 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1619 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1618.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1618);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1618.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1622 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1622.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1618);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1622.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1620);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1621 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1622);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1621);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1624 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1624.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1625 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1624);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1625 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1625)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1623 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1624 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1623.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1623);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1623.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1627 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1627.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1623);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1627.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1625);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1626 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1627);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1626);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1628 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1628 == null){
                                    INR1628 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1628.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1628.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1628);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - ExposureAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisMap1630 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisMap1630.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1631 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisMap1630);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1631 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1631)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisContext1629 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisMap1630 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisContext1629.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisContext1629);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisContext1629.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1633 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1633.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisContext1629);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1633.setValue(explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1631);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1632 = instancObjectFactory.createExposureAmount(explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1633);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1632);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                        // end xbrl report element
                    
                        
                            // create unit if not empty
                            
                                
                                Unit INR1634 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1634 == null){
                                    INR1634 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1634.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1634.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1634);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1636 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1636.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1637 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1636);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1637 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1637)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1635 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1636 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1635.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1635);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1635.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1639 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1639.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1635);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1639.setValue(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1637);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1638 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1639);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1638);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1640 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1640 == null){
                                    INR1640 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1640.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1640.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1640);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1642 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1642.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1643 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1642);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1643 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1643)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1641 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1642 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1641.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1641);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1641.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1645 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1645.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1641);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1645.setValue(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1643);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1644 = instancObjectFactory.createReplacementCost(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1645);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1644);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1646 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1646 == null){
                                    INR1646 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1646.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1646.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1646);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1648 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1648.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1649 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1648);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1649 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1649)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1647 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1648 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1647.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1647);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1647.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1651 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1651.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1647);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1651.setValue(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1649);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1650 = instancObjectFactory.createPotentialFutureExposure(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1651);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1650);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1653 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1653.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1654 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1653);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1654 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1654)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1652 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1653 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1652.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1652);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1652.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1656 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1656.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1652);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1656.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1654);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1655 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1656);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1655);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1657 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1657 == null){
                                    INR1657 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1657.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1657.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1657);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1659 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1659.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1660 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1659);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1660 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1660)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1658 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1659 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1658.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1658);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1658.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1662 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1662.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1658);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1662.setValue(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1660);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1661 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1662);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1661);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1663 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1663 == null){
                                    INR1663 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1663.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1663.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1663);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1665 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1665.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1666 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1665);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1666 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1666)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1664 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1665 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1664.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1664);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1664.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1668 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1668.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1664);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1668.setValue(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1666);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1667 = instancObjectFactory.createReplacementCost(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1668);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1667);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1669 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1669 == null){
                                    INR1669 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1669.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1669.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1669);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1671 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1671.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1672 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1671);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1672 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1672)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1670 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1671 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1670.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1670);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1670.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1674 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1674.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1670);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1674.setValue(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1672);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1673 = instancObjectFactory.createPotentialFutureExposure(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1674);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1673);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1676 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1676.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1677 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1676);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1677 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1677)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1675 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1676 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1675.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1675);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1675.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1679 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1679.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1675);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1679.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1677);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1678 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1679);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1678);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1680 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1680 == null){
                                    INR1680 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1680.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1680.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1680);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1682 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1682.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1683 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1682);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1683 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1683)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1681 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1682 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1681.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1681);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1681.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1685 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1685.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1681);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1685.setValue(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1683);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1684 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1685);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1684);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1686 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1686 == null){
                                    INR1686 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1686.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1686.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1686);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1688 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1688.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1689 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1688);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1689 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1689)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1687 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1688 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1687.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1687);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1687.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1691 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1691.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1687);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1691.setValue(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1689);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1690 = instancObjectFactory.createReplacementCost(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1691);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1690);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1692 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1692 == null){
                                    INR1692 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1692.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1692.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1692);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1694 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1694.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1695 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1694);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1695 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1695)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1693 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1694 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1693.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1693);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1693.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1697 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1697.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1693);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1697.setValue(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1695);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1696 = instancObjectFactory.createPotentialFutureExposure(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1697);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1696);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1699 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1699.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1700 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1699);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1700 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1700)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1698 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1699 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1698.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1698);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1698.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1702 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1702.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1698);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1702.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1700);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1701 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1702);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1701);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1703 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1703 == null){
                                    INR1703 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1703.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1703.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1703);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1705 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1705.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1706 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1705);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1706 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1706)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1704 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1705 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1704.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1704);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1704.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1708 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1708.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1704);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1708.setValue(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1706);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1707 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1708);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1707);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1709 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1709 == null){
                                    INR1709 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1709.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1709.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1709);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1711 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1711.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1712 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1711);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1712 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1712)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1710 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1711 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1710.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1710);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1710.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1714 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1714.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1710);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1714.setValue(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1712);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1713 = instancObjectFactory.createReplacementCost(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1714);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1713);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1715 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1715 == null){
                                    INR1715 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1715.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1715.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1715);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1717 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1717.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1718 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1717);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1718 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1718)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1716 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1717 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1716.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1716);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1716.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1720 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1720.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1716);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1720.setValue(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1718);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1719 = instancObjectFactory.createPotentialFutureExposure(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1720);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1719);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1722 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1722.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1723 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1722);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1723 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1723)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1721 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1722 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1721.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1721);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1721.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1725 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1725.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1721);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1725.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1723);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1724 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1725);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1724);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1726 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1726 == null){
                                    INR1726 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1726.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1726.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1726);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1728 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1728.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1729 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1728);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1729 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1729)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1727 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1728 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1727.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1727);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1727.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1731 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1731.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1727);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1731.setValue(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1729);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1730 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1731);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1730);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1732 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1732 == null){
                                    INR1732 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1732.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1732.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1732);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1734 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1734.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1735 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1734);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1735 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1735)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1733 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1734 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1733.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1733);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1733.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1737 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1737.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1733);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1737.setValue(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1735);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1736 = instancObjectFactory.createReplacementCost(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1737);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1736);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1738 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1738 == null){
                                    INR1738 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1738.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1738.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1738);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1740 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1740.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1741 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1740);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1741 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1741)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1739 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1740 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1739.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1739);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1739.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1743 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1743.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1739);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1743.setValue(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1741);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1742 = instancObjectFactory.createPotentialFutureExposure(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1743);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1742);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1745 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1745.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1746 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1745);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1746 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1746)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1744 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1745 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1744.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1744);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1744.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1748 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1748.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1744);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1748.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1746);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1747 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1748);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1747);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1749 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1749 == null){
                                    INR1749 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1749.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1749.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1749);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1751 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1751.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1752 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1751);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1752 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1752)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1750 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1751 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1750.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1750);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1750.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1754 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1754.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1750);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1754.setValue(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1752);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1753 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1754);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1753);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1755 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1755 == null){
                                    INR1755 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1755.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1755.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1755);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1757 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1757.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1758 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1757);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1758 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1758)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1756 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1757 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1756.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1756);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1756.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1760 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1760.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1756);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1760.setValue(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1758);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1759 = instancObjectFactory.createReplacementCost(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1760);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1759);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1761 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1761 == null){
                                    INR1761 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1761.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1761.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1761);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1763 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1763.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1764 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1763);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1764 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1764)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1762 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1763 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1762.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1762);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1762.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1766 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1766.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1762);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1766.setValue(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1764);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1765 = instancObjectFactory.createPotentialFutureExposure(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1766);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1765);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1768 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1768.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1769 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1768);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1769 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1769)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1767 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1768 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1767.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1767);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1767.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1771 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1771.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1767);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1771.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1769);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1770 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1771);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1770);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1772 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1772 == null){
                                    INR1772 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1772.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1772.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1772);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1774 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1774.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1775 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1774);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1775 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1775)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1773 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1774 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1773.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1773);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1773.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1777 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1777.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1773);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1777.setValue(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1775);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1776 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1777);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1776);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1778 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1778 == null){
                                    INR1778 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1778.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1778.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1778);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1780 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1780.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1781 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1780);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1781 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1781)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1779 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1780 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1779.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1779);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1779.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1783 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1783.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1779);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1783.setValue(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1781);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1782 = instancObjectFactory.createReplacementCost(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1783);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1782);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1784 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1784 == null){
                                    INR1784 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1784.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1784.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1784);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1786 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1786.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1787 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1786);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1787 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1787)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1785 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1786 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1785.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1785);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1785.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1789 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1789.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1785);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1789.setValue(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1787);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1788 = instancObjectFactory.createPotentialFutureExposure(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1789);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1788);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1791 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1791.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1792 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1791);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1792 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1792)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1790 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1791 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1790.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1790);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1790.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1794 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1794.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1790);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1794.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1792);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1793 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1794);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1793);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1795 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1795 == null){
                                    INR1795 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1795.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1795.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1795);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1797 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1797.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1798 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1797);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1798 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1798)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1796 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1797 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1796.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1796);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1796.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1800 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1800.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1796);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1800.setValue(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1798);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1799 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1800);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1799);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1801 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1801 == null){
                                    INR1801 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1801.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1801.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1801);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1803 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1803.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1804 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1803);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1804 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1804)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1802 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1803 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1802.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1802);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1802.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1806 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1806.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1802);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1806.setValue(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1804);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1805 = instancObjectFactory.createReplacementCost(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1806);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1805);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1807 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1807 == null){
                                    INR1807 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1807.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1807.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1807);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1809 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1809.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1810 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1809);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1810 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1810)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1808 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1809 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1808.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1808);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1808.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1812 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1812.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1808);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1812.setValue(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1810);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1811 = instancObjectFactory.createPotentialFutureExposure(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1812);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1811);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1814 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1814.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1815 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1814);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1815 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1815)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1813 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1814 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1813.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1813);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1813.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1817 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1817.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1813);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1817.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1815);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1816 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1817);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1816);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1818 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1818 == null){
                                    INR1818 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1818.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1818.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1818);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1820 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1820.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1821 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1820);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1821 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1821)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1819 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1820 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1819.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1819);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1819.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1823 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1823.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1819);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1823.setValue(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1821);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1822 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1823);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1822);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1824 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1824 == null){
                                    INR1824 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1824.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1824.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1824);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1826 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1826.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1827 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1826);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1827 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1827)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1825 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1826 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1825.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1825);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1825.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1829 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1829.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1825);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1829.setValue(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1827);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1828 = instancObjectFactory.createReplacementCost(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1829);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1828);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1830 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1830 == null){
                                    INR1830 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1830.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1830.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1830);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1832 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1832.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1833 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1832);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1833 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1833)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1831 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap1832 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1831.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1831);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1831.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1835 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1835.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext1831);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1835.setValue(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1833);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1834 = instancObjectFactory.createPotentialFutureExposure(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1835);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1834);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1837 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1837.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1838 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1837);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1838 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1838)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1836 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1837 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1836.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1836);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1836.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1840 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1840.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1836);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1840.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1838);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1839 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1840);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1839);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1841 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1841 == null){
                                    INR1841 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1841.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1841.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1841);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1843 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1843.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1844 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1843);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1844 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1844)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1842 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1843 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1842.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1842);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1842.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1846 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1846.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1842);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1846.setValue(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1844);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1845 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1846);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1845);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1848 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1848.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1849 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1848);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1849 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1849)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1847 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1848 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1847.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1847);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1847.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1851 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1851.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1847);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1851.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1849);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1850 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1851);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1850);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1853 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1853.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1854 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1853);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1854 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1854)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1852 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1853 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1852.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1852);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1852.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1856 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1856.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1852);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1856.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1854);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1855 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1856);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1855);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1858 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1858.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1859 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1858);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1859 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1859)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1857 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1858 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1857.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1857);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1857.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1861 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1861.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1857);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1861.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1859);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1860 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1861);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1860);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1862 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1862 == null){
                                    INR1862 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1862.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1862.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1862);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1864 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1864.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1865 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1864);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1865 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1865)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1863 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1864 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1863.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1863);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1863.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1867 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1867.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1863);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1867.setValue(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1865);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1866 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1867);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1866);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1869 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1869.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1870 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1869);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1870 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1870)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1868 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1869 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1868.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1868);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1868.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1872 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1872.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1868);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1872.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1870);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1871 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1872);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1871);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1874 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1874.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1875 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1874);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1875 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1875)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1873 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1874 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1873.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1873);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1873.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1877 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1877.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1873);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1877.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1875);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1876 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1877);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1876);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1879 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1879.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1880 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1879);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1880 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1880)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1878 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1879 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1878.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1878);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1878.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1882 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1882.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1878);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1882.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1880);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1881 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1882);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1881);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1883 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1883 == null){
                                    INR1883 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1883.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1883.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1883);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1885 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1885.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1886 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1885);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1886 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1886)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1884 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1885 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1884.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1884);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1884.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1888 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1888.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1884);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1888.setValue(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1886);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1887 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1888);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1887);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1890 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1890.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1891 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1890);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1891 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1891)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1889 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1890 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1889.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1889);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1889.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1893 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1893.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1889);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1893.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1891);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1892 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1893);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1892);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1895 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1895.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1896 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1895);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1896 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1896)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1894 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1895 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1894.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1894);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1894.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1898 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1898.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1894);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1898.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1896);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1897 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1898);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1897);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1900 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1900.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1901 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1900);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1901 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1901)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1899 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1900 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1899.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1899);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1899.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1903 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1903.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1899);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1903.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1901);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1902 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1903);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1902);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1904 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1904 == null){
                                    INR1904 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1904.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1904.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1904);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1906 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1906.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1907 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1906);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1907 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1907)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1905 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1906 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1905.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1905);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1905.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1909 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1909.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1905);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1909.setValue(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1907);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1908 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1909);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1908);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1911 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1911.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1912 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1911);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1912 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1912)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1910 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1911 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1910.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1910);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1910.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1914 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1914.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1910);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1914.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1912);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1913 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1914);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1913);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1916 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1916.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1917 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1916);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1917 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1917)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1915 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1916 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1915.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1915);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1915.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1919 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1919.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1915);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1919.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1917);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1918 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1919);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1918);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1921 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1921.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1922 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1921);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1922 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1922)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1920 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1921 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1920.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1920);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1920.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1924 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1924.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1920);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1924.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1922);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1923 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1924);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1923);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1925 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1925 == null){
                                    INR1925 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1925.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1925.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1925);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1927 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1927.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1928 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1927);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1928 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1928)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1926 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1927 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1926.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1926);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1926.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1930 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1930.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1926);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1930.setValue(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1928);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1929 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1930);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1929);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1932 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1932.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1933 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1932);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1933 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1933)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1931 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1932 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1931.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1931);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1931.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1935 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1935.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1931);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1935.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1933);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1934 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1935);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1934);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1937 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1937.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1938 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1937);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1938 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1938)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1936 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1937 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1936.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1936);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1936.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1940 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1940.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1936);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1940.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1938);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1939 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1940);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1939);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1942 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1942.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1943 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1942);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1943 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1943)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1941 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1942 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1941.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1941);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1941.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1945 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1945.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1941);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1945.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1943);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1944 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1945);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1944);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1946 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1946 == null){
                                    INR1946 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1946.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1946.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1946);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1948 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1948.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1949 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1948);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1949 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1949)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1947 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1948 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1947.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1947);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1947.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1951 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1951.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1947);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1951.setValue(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1949);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1950 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1951);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1950);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1953 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1953.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1954 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1953);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1954 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1954)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1952 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1953 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1952.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1952);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1952.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1956 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1956.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1952);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1956.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1954);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1955 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1956);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1955);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1958 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1958.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1959 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1958);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1959 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1959)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1957 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1958 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1957.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1957);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1957.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1961 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1961.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1957);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1961.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1959);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1960 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1961);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1960);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1963 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1963.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1964 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1963);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1964 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1964)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1962 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1963 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1962.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1962);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1962.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1966 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1966.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1962);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1966.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1964);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1965 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1966);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1965);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1967 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1967 == null){
                                    INR1967 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1967.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1967.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1967);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1969 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1969.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1970 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1969);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1970 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1970)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1968 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap1969 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1968.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1968);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1968.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1972 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1972.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext1968);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1972.setValue(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1970);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1971 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1972);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1971);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1974 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1974.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1975 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1974);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1975 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1975)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1973 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1974 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1973.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1973);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1973.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1977 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1977.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1973);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1977.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1975);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1976 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1977);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1976);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1979 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1979.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1980 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1979);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1980 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1980)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1978 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1979 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1978.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1978);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1978.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1982 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1982.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1978);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1982.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1980);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1981 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1982);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1981);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1984 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1984.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1985 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1984);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1985 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1985)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1983 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1984 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1983.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1983);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1983.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1987 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1987.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1983);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1987.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1985);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1986 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1987);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1986);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1989 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1989.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1990 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1989);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1990 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1990)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1988 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap1989 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1988.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1988);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1988.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1992 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1992.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1988);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1992.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1990);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1991 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1992);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1991);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR1993 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR1993 == null){
                                    INR1993 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR1993.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR1993.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR1993);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1995 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1995.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1996 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1995);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1996 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1996)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1994 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap1995 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1994.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1994);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1994.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1998 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1998.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext1994);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1998.setValue(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue1996);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1997 = instancObjectFactory.createReplacementCost(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType1998);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement1997);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2000 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2000.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue2001 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2000);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue2001 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue2001)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1999 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2000 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1999.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1999);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1999.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType2003 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType2003.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext1999);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType2003.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue2001);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement2002 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType2003);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement2002);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2005 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2005.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue2006 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2005);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue2006 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue2006)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2004 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2005 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2004.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2004);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2004.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType2008 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType2008.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2004);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType2008.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue2006);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement2007 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType2008);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement2007);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2010 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2010.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue2011 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2010);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue2011 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue2011)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2009 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2010 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2009.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2009);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2009.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType2013 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType2013.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2009);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType2013.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue2011);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement2012 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType2013);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement2012);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2014 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2014 == null){
                                    INR2014 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2014.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2014.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2014);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2016 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2016.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue2017 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2016);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue2017 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue2017)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2015 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2016 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2015.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2015);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2015.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType2019 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType2019.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2015);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType2019.setValue(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue2017);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement2018 = instancObjectFactory.createReplacementCost(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType2019);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement2018);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2021 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2021.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue2022 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2021);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue2022 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue2022)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2020 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2021 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2020.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2020);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2020.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType2024 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType2024.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2020);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType2024.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue2022);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement2023 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType2024);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement2023);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2026 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2026.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue2027 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2026);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue2027 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue2027)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2025 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2026 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2025.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2025);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2025.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType2029 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType2029.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2025);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType2029.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue2027);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement2028 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType2029);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement2028);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2031 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2031.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue2032 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2031);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue2032 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue2032)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2030 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2031 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2030.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2030);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2030.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType2034 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType2034.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2030);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType2034.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue2032);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement2033 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType2034);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement2033);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2035 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2035 == null){
                                    INR2035 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2035.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2035.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2035);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2037 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2037.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue2038 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2037);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue2038 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue2038)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2036 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2037 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2036.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2036);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2036.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType2040 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType2040.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2036);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType2040.setValue(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue2038);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement2039 = instancObjectFactory.createReplacementCost(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType2040);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement2039);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2042 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2042.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue2043 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2042);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue2043 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue2043)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2041 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2042 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2041.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2041);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2041.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType2045 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType2045.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2041);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType2045.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue2043);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement2044 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType2045);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement2044);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2047 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2047.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue2048 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2047);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue2048 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue2048)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2046 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2047 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2046.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2046);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2046.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType2050 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType2050.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2046);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType2050.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue2048);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement2049 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType2050);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement2049);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2052 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2052.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue2053 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2052);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue2053 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue2053)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2051 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2052 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2051.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2051);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2051.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType2055 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType2055.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2051);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType2055.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue2053);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement2054 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType2055);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement2054);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2056 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2056 == null){
                                    INR2056 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2056.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2056.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2056);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2058 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2058.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue2059 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2058);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue2059 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue2059)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2057 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2058 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2057.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2057);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2057.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType2061 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType2061.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2057);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType2061.setValue(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue2059);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement2060 = instancObjectFactory.createReplacementCost(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType2061);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement2060);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2063 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2063.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue2064 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2063);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue2064 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue2064)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2062 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2063 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2062.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2062);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2062.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType2066 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType2066.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2062);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType2066.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue2064);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement2065 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType2066);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement2065);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2068 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2068.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue2069 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2068);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue2069 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue2069)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2067 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2068 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2067.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2067);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2067.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType2071 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType2071.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2067);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType2071.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue2069);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement2070 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType2071);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement2070);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2073 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2073.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue2074 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2073);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue2074 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue2074)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2072 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2073 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2072.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2072);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2072.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType2076 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType2076.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2072);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType2076.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue2074);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement2075 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType2076);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement2075);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2078 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2078.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue2079 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2078);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue2079 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue2079)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2077 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2078 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2077.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2077);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2077.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType2081 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType2081.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2077);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType2081.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue2079);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement2080 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType2081);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement2080);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2082 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2082 == null){
                                    INR2082 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2082.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2082.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2082);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2084 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2084.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue2085 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2084);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue2085 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue2085)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2083 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2084 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2083.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2083);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2083.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType2087 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType2087.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2083);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType2087.setValue(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue2085);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement2086 = instancObjectFactory.createPotentialFutureExposure(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType2087);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement2086);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2089 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2089.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue2090 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2089);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue2090 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue2090)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2088 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2089 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2088.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2088);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2088.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType2092 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType2092.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2088);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType2092.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue2090);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement2091 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType2092);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement2091);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2094 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2094.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue2095 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2094);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue2095 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue2095)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2093 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2094 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2093.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2093);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2093.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType2097 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType2097.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2093);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType2097.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue2095);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement2096 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType2097);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement2096);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2099 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2099.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue2100 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2099);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue2100 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue2100)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2098 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2099 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2098.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2098);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2098.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType2102 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType2102.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2098);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType2102.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue2100);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement2101 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType2102);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement2101);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2104 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2104.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue2105 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2104);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue2105 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue2105)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2103 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2104 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2103.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2103);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2103.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType2107 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType2107.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2103);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType2107.setValue(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue2105);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement2106 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType2107);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement2106);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2108 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2108 == null){
                                    INR2108 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2108.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2108.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2108);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - ExposureAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisMap2110 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisMap2110.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue2111 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisMap2110);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue2111 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue2111)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisContext2109 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisMap2110 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisContext2109.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisContext2109);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisContext2109.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType2113 = new StringItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType2113.setContextRef(explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisContext2109);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType2113.setValue(explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue2111);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement2112 = instancObjectFactory.createExposureAmount(explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType2113);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement2112);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                        // end xbrl report element
                    
                    // end loop for explicitmember
                    }

                
                    
                
                // if typemembers exist
                
                
                
                // create variable for subclass DBSLeverageRatioSolo_Layout4 if any typeMembers then List or Single
                DBSLeverageRatioSolo_Layout4 dBSLeverageRatioSolo_Layout4 = mainReportData.getDBSLeverageRatioSolo_Layout4();
            
                
                    {
            
                    DBSLeverageRatioSolo_Layout4 field = dBSLeverageRatioSolo_Layout4;
                    // if explict member is empty
                    
                        // create xbrl report element
                        
                            // start create element for report of DBSLeverageRatioSolo_Layout4
                            // create unit if not empty
                            
                                
                                Unit INR2114 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2114 == null){
                                    INR2114 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2114.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2114.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2114);
                                }
                            
                            // create context for none explict member
                            // TODO: remove once done
                            // - ExposureAmount
                            
                                Map zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap2117 = new HashMap<String, String>();
                                
                                        // put embeddedexplicitmember into map
                                        
                                        zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap2117.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");
                                    
                                    // retrieve value for element
                                    String zeroDBSLeverageRatioSolo_Layout4ExposureAmountValue2116 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap2117);

                                    
                                            Context DBSLeverageRatioSolo_Layout4ExposureAmountContext2115 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap2117 );
                                        
                                if(!contextIdentifiers.contains(DBSLeverageRatioSolo_Layout4ExposureAmountContext2115.getId())) {
                                    contextElements.add(DBSLeverageRatioSolo_Layout4ExposureAmountContext2115);
                                    contextIdentifiers.add(DBSLeverageRatioSolo_Layout4ExposureAmountContext2115.getId());
                                }
                                // create element JAXB Element
                    
                                MonetaryItemType exposureAmountValue = new MonetaryItemType();
                                exposureAmountValue.setContextRef(DBSLeverageRatioSolo_Layout4ExposureAmountContext2115);
                                
                                exposureAmountValue.setUnitRef(INR2114);
                                exposureAmountValue.setDecimals(CommonFns.getDecimals(zeroDBSLeverageRatioSolo_Layout4ExposureAmountValue2116, "100000"));
                                exposureAmountValue.setValue(new BigDecimal(zeroDBSLeverageRatioSolo_Layout4ExposureAmountValue2116);
                                
                                
                                JAXBElement<MonetaryItemType> exposureAmountElement = instancObjectFactory.createExposureAmount(exposureAmountValue);
                                bodyElements.add(exposureAmountElement);
                            
                        
                        
                        // end xbrl report element 
                    
                    // end if block for explicitMember is empty
            
                    // loop explicitMember if not empty -- insert taken out code
                    
                    // end loop for explicitmember
                    }

                
                    
                
                // if typemembers exist
                
                
                
                // create variable for subclass DBSLeverageRatioSolo_Layout5 if any typeMembers then List or Single
                DBSLeverageRatioSolo_Layout5 dBSLeverageRatioSolo_Layout5 = mainReportData.getDBSLeverageRatioSolo_Layout5();
            
                
                    {
            
                    DBSLeverageRatioSolo_Layout5 field = dBSLeverageRatioSolo_Layout5;
                    // if explict member is empty
                    
                    // end if block for explicitMember is empty
            
                    // loop explicitMember if not empty -- insert taken out code
                    
                        
                            // create unit if not empty
                            
                                
                                Unit INR2118 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2118 == null){
                                    INR2118 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2118.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2118.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2118);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout5
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Tier1Capital
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisMap2120 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisMap2120.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue2121 = DBS06ReportUtil.retrieveValueForElement(field.getTier1Capital(), explictMember1DBSLeverageRatioSolo_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisMap2120);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue2121 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue2121)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisContext2119 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisMap2120 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisContext2119.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisContext2119);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisContext2119.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType2123 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType2123.setContextRef(explictMember1DBSLeverageRatioSolo_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisContext2119);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType2123.setUnitRef(INR2118);
                                        explictMember1DBSLeverageRatioSolo_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType2123.setDecimals(CommonFns.getDecimals(explictMember1DBSLeverageRatioSolo_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue2121, "100000"));
                                        explictMember1DBSLeverageRatioSolo_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType2123.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue2121));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement2122 = instancObjectFactory.createTier1Capital(explictMember1DBSLeverageRatioSolo_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType2123);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement2122);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2124 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2124 == null){
                                    INR2124 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2124.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2124.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2124);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout5
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - ExposureAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisMap2126 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisMap2126.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                        // put embeddedexplicitmember into map
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisMap2126.put("LeverageRatioExposureAxis", "TotalExposureMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue2127 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), explictMember1DBSLeverageRatioSolo_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisMap2126);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue2127 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue2127)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisContext2125 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisMap2126 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisContext2125.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisContext2125);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisContext2125.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType2129 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType2129.setContextRef(explictMember1DBSLeverageRatioSolo_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisContext2125);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType2129.setUnitRef(INR2124);
                                        explictMember1DBSLeverageRatioSolo_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType2129.setDecimals(CommonFns.getDecimals(explictMember1DBSLeverageRatioSolo_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue2127, "100000"));
                                        explictMember1DBSLeverageRatioSolo_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType2129.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue2127));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement2128 = instancObjectFactory.createExposureAmount(explictMember1DBSLeverageRatioSolo_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType2129);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement2128);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit pure2130 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(pure2130 == null){
                                    pure2130 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    pure2130.setId("PURE");
                                    QName unitMeasureValue = new QName("xbrli:pure");
                                    pure2130.getMeasure().add(unitMeasureValue);
                                    unitElements.add(pure2130);
                                }
                            
                            // start create element for report of DBSLeverageRatioSolo_Layout5
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - BaselIILeverageRatio
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisMap2132 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioSolo_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisMap2132.put("ConsolidatedAndSeparateFinancialStatementsAxis", "StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue2133 = DBS06ReportUtil.retrieveValueForElement(field.getBaselIILeverageRatio(), explictMember1DBSLeverageRatioSolo_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisMap2132);
                            
                                if(explictMember1DBSLeverageRatioSolo_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue2133 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue2133)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisContext2131 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisMap2132 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioSolo_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisContext2131.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioSolo_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisContext2131);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioSolo_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisContext2131.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    PercentItemType explictMember1DBSLeverageRatioSolo_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType2135 = new PercentItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType2135.setContextRef(explictMember1DBSLeverageRatioSolo_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisContext2131);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType2135.setUnitRef(pure2130);
                                        explictMember1DBSLeverageRatioSolo_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType2135.setDecimals(CommonFns.getPrecisions(explictMember1DBSLeverageRatioSolo_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue2133));
                                        explictMember1DBSLeverageRatioSolo_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType2135.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue2133));
                                    
                                    
                                    JAXBElement<PercentItemType> explictMember1DBSLeverageRatioSolo_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement2134 = instancObjectFactory.createBaselIILeverageRatio(explictMember1DBSLeverageRatioSolo_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType2135);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement2134);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                        // end xbrl report element
                    
                    // end loop for explicitmember
                    }

                
                    
                
                // if typemembers exist
                
                
                
                // create variable for subclass DBSLeverageRatioConsolidated_Layout1 if any typeMembers then List or Single
                DBSLeverageRatioConsolidated_Layout1 dBSLeverageRatioConsolidated_Layout1 = mainReportData.getDBSLeverageRatioConsolidated_Layout1();
            
                
                    {
            
                    DBSLeverageRatioConsolidated_Layout1 field = dBSLeverageRatioConsolidated_Layout1;
                    // if explict member is empty
                    
                    // end if block for explicitMember is empty
            
                    // loop explicitMember if not empty -- insert taken out code
                    
                        
                            // create unit if not empty
                            
                                
                                Unit INR2136 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2136 == null){
                                    INR2136 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2136.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2136.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2136);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis,LeverageRatioExposureAxis - ExposureAmount
                            
                        
                            

                            
                                    Map explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticSovereignsMemberMap2138 = new HashMap<String, String>();
                                    
                                    explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticSovereignsMemberMap2138.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                    explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticSovereignsMemberMap2138.put("LeverageRatioExposureAxis", "DomesticSovereignsMember");   
                                
                                    String explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticSovereignsMemberValue2139 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticSovereignsMemberMap2138);
                                    if(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticSovereignsMemberValue2139 != null && !"".equals(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticSovereignsMemberValue2139)) {
                                    
                                        // create context object
                                        
                                            Context explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticSovereignsMemberContext2137 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticSovereignsMemberMap2138 );
                                        
                                            if(!contextIdentifiers.contains(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticSovereignsMemberContext2137.getId())) {
                                                contextElements.add(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticSovereignsMemberContext2137);
                                                contextIdentifiers.add(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticSovereignsMemberContext2137.getId());
                                            }                
                                            // create element JAXB Element
                    
                                            MonetaryItemType explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticSovereignsMemberDataType2141 = new MonetaryItemType();
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticSovereignsMemberDataType2141.setContextRef(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticSovereignsMemberContext2137);
                                        
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticSovereignsMemberDataType2141.setUnitRef(INR2136);
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticSovereignsMemberDataType2141.setDecimals(CommonFns.getDecimals(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticSovereignsMemberValue2139, "100000"));
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticSovereignsMemberDataType2141.setValue(new BigDecimal(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticSovereignsMemberValue2139));
                                        
                                        
                                            JAXBElement<MonetaryItemType> explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticSovereignsMemberElement2140 = instancObjectFactory.createExposureAmount(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticSovereignsMemberDataType2141);
                                            bodyElements.add(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticSovereignsMemberElement2140);
                                    }
                                
                            
                        
                        
                        // end xbrl report element
                    
                        
                            // create unit if not empty
                            
                                
                                Unit INR2142 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2142 == null){
                                    INR2142 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2142.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2142.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2142);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis,LeverageRatioExposureAxis - ExposureAmount
                            
                        
                            

                            
                                    Map explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignSovereignsMemberMap2144 = new HashMap<String, String>();
                                    
                                    explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignSovereignsMemberMap2144.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                    explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignSovereignsMemberMap2144.put("LeverageRatioExposureAxis", "ForeignSovereignsMember");   
                                
                                    String explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignSovereignsMemberValue2145 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignSovereignsMemberMap2144);
                                    if(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignSovereignsMemberValue2145 != null && !"".equals(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignSovereignsMemberValue2145)) {
                                    
                                        // create context object
                                        
                                            Context explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignSovereignsMemberContext2143 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignSovereignsMemberMap2144 );
                                        
                                            if(!contextIdentifiers.contains(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignSovereignsMemberContext2143.getId())) {
                                                contextElements.add(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignSovereignsMemberContext2143);
                                                contextIdentifiers.add(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignSovereignsMemberContext2143.getId());
                                            }                
                                            // create element JAXB Element
                    
                                            MonetaryItemType explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignSovereignsMemberDataType2147 = new MonetaryItemType();
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignSovereignsMemberDataType2147.setContextRef(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignSovereignsMemberContext2143);
                                        
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignSovereignsMemberDataType2147.setUnitRef(INR2142);
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignSovereignsMemberDataType2147.setDecimals(CommonFns.getDecimals(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignSovereignsMemberValue2145, "100000"));
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignSovereignsMemberDataType2147.setValue(new BigDecimal(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignSovereignsMemberValue2145));
                                        
                                        
                                            JAXBElement<MonetaryItemType> explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignSovereignsMemberElement2146 = instancObjectFactory.createExposureAmount(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignSovereignsMemberDataType2147);
                                            bodyElements.add(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignSovereignsMemberElement2146);
                                    }
                                
                            
                        
                        
                        // end xbrl report element
                    
                        
                            // create unit if not empty
                            
                                
                                Unit INR2148 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2148 == null){
                                    INR2148 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2148.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2148.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2148);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis,LeverageRatioExposureAxis - ExposureAmount
                            
                        
                            

                            
                                    Map explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberMap2150 = new HashMap<String, String>();
                                    
                                    explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberMap2150.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                    explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberMap2150.put("LeverageRatioExposureAxis", "BanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMember");   
                                
                                    String explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberValue2151 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberMap2150);
                                    if(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberValue2151 != null && !"".equals(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberValue2151)) {
                                    
                                        // create context object
                                        
                                            Context explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberContext2149 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberMap2150 );
                                        
                                            if(!contextIdentifiers.contains(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberContext2149.getId())) {
                                                contextElements.add(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberContext2149);
                                                contextIdentifiers.add(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberContext2149.getId());
                                            }                
                                            // create element JAXB Element
                    
                                            MonetaryItemType explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberDataType2153 = new MonetaryItemType();
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberDataType2153.setContextRef(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberContext2149);
                                        
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberDataType2153.setUnitRef(INR2148);
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberDataType2153.setDecimals(CommonFns.getDecimals(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberValue2151, "100000"));
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberDataType2153.setValue(new BigDecimal(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberValue2151));
                                        
                                        
                                            JAXBElement<MonetaryItemType> explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberElement2152 = instancObjectFactory.createExposureAmount(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberDataType2153);
                                            bodyElements.add(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberElement2152);
                                    }
                                
                            
                        
                        
                        // end xbrl report element
                    
                        
                            // create unit if not empty
                            
                                
                                Unit INR2154 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2154 == null){
                                    INR2154 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2154.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2154.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2154);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis,LeverageRatioExposureAxis - ExposureAmount
                            
                        
                            

                            
                                    Map explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignBanksMemberMap2156 = new HashMap<String, String>();
                                    
                                    explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignBanksMemberMap2156.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                    explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignBanksMemberMap2156.put("LeverageRatioExposureAxis", "ForeignBanksMember");   
                                
                                    String explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignBanksMemberValue2157 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignBanksMemberMap2156);
                                    if(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignBanksMemberValue2157 != null && !"".equals(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignBanksMemberValue2157)) {
                                    
                                        // create context object
                                        
                                            Context explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignBanksMemberContext2155 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignBanksMemberMap2156 );
                                        
                                            if(!contextIdentifiers.contains(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignBanksMemberContext2155.getId())) {
                                                contextElements.add(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignBanksMemberContext2155);
                                                contextIdentifiers.add(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignBanksMemberContext2155.getId());
                                            }                
                                            // create element JAXB Element
                    
                                            MonetaryItemType explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignBanksMemberDataType2159 = new MonetaryItemType();
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignBanksMemberDataType2159.setContextRef(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignBanksMemberContext2155);
                                        
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignBanksMemberDataType2159.setUnitRef(INR2154);
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignBanksMemberDataType2159.setDecimals(CommonFns.getDecimals(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignBanksMemberValue2157, "100000"));
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignBanksMemberDataType2159.setValue(new BigDecimal(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignBanksMemberValue2157));
                                        
                                        
                                            JAXBElement<MonetaryItemType> explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignBanksMemberElement2158 = instancObjectFactory.createExposureAmount(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignBanksMemberDataType2159);
                                            bodyElements.add(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignBanksMemberElement2158);
                                    }
                                
                            
                        
                        
                        // end xbrl report element
                    
                        
                            // create unit if not empty
                            
                                
                                Unit INR2160 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2160 == null){
                                    INR2160 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2160.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2160.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2160);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis,LeverageRatioExposureAxis - ExposureAmount
                            
                        
                            

                            
                                    Map explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticPublicSectorEntitiesMemberMap2162 = new HashMap<String, String>();
                                    
                                    explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticPublicSectorEntitiesMemberMap2162.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                    explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticPublicSectorEntitiesMemberMap2162.put("LeverageRatioExposureAxis", "DomesticPublicSectorEntitiesMember");   
                                
                                    String explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticPublicSectorEntitiesMemberValue2163 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticPublicSectorEntitiesMemberMap2162);
                                    if(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticPublicSectorEntitiesMemberValue2163 != null && !"".equals(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticPublicSectorEntitiesMemberValue2163)) {
                                    
                                        // create context object
                                        
                                            Context explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticPublicSectorEntitiesMemberContext2161 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticPublicSectorEntitiesMemberMap2162 );
                                        
                                            if(!contextIdentifiers.contains(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticPublicSectorEntitiesMemberContext2161.getId())) {
                                                contextElements.add(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticPublicSectorEntitiesMemberContext2161);
                                                contextIdentifiers.add(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticPublicSectorEntitiesMemberContext2161.getId());
                                            }                
                                            // create element JAXB Element
                    
                                            MonetaryItemType explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticPublicSectorEntitiesMemberDataType2165 = new MonetaryItemType();
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticPublicSectorEntitiesMemberDataType2165.setContextRef(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticPublicSectorEntitiesMemberContext2161);
                                        
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticPublicSectorEntitiesMemberDataType2165.setUnitRef(INR2160);
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticPublicSectorEntitiesMemberDataType2165.setDecimals(CommonFns.getDecimals(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticPublicSectorEntitiesMemberValue2163, "100000"));
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticPublicSectorEntitiesMemberDataType2165.setValue(new BigDecimal(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticPublicSectorEntitiesMemberValue2163));
                                        
                                        
                                            JAXBElement<MonetaryItemType> explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticPublicSectorEntitiesMemberElement2164 = instancObjectFactory.createExposureAmount(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticPublicSectorEntitiesMemberDataType2165);
                                            bodyElements.add(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticPublicSectorEntitiesMemberElement2164);
                                    }
                                
                            
                        
                        
                        // end xbrl report element
                    
                        
                            // create unit if not empty
                            
                                
                                Unit INR2166 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2166 == null){
                                    INR2166 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2166.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2166.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2166);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis,LeverageRatioExposureAxis - ExposureAmount
                            
                        
                            

                            
                                    Map explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignPublicSectorEntitiesMemberMap2168 = new HashMap<String, String>();
                                    
                                    explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignPublicSectorEntitiesMemberMap2168.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                    explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignPublicSectorEntitiesMemberMap2168.put("LeverageRatioExposureAxis", "ForeignPublicSectorEntitiesMember");   
                                
                                    String explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignPublicSectorEntitiesMemberValue2169 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignPublicSectorEntitiesMemberMap2168);
                                    if(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignPublicSectorEntitiesMemberValue2169 != null && !"".equals(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignPublicSectorEntitiesMemberValue2169)) {
                                    
                                        // create context object
                                        
                                            Context explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignPublicSectorEntitiesMemberContext2167 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignPublicSectorEntitiesMemberMap2168 );
                                        
                                            if(!contextIdentifiers.contains(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignPublicSectorEntitiesMemberContext2167.getId())) {
                                                contextElements.add(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignPublicSectorEntitiesMemberContext2167);
                                                contextIdentifiers.add(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignPublicSectorEntitiesMemberContext2167.getId());
                                            }                
                                            // create element JAXB Element
                    
                                            MonetaryItemType explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignPublicSectorEntitiesMemberDataType2171 = new MonetaryItemType();
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignPublicSectorEntitiesMemberDataType2171.setContextRef(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignPublicSectorEntitiesMemberContext2167);
                                        
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignPublicSectorEntitiesMemberDataType2171.setUnitRef(INR2166);
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignPublicSectorEntitiesMemberDataType2171.setDecimals(CommonFns.getDecimals(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignPublicSectorEntitiesMemberValue2169, "100000"));
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignPublicSectorEntitiesMemberDataType2171.setValue(new BigDecimal(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignPublicSectorEntitiesMemberValue2169));
                                        
                                        
                                            JAXBElement<MonetaryItemType> explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignPublicSectorEntitiesMemberElement2170 = instancObjectFactory.createExposureAmount(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignPublicSectorEntitiesMemberDataType2171);
                                            bodyElements.add(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignPublicSectorEntitiesMemberElement2170);
                                    }
                                
                            
                        
                        
                        // end xbrl report element
                    
                        
                            // create unit if not empty
                            
                                
                                Unit INR2172 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2172 == null){
                                    INR2172 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2172.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2172.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2172);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis,LeverageRatioExposureAxis - ExposureAmount
                            
                        
                            

                            
                                    Map explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberPrimaryDealersMemberMap2174 = new HashMap<String, String>();
                                    
                                    explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberPrimaryDealersMemberMap2174.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                    explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberPrimaryDealersMemberMap2174.put("LeverageRatioExposureAxis", "PrimaryDealersMember");   
                                
                                    String explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberPrimaryDealersMemberValue2175 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberPrimaryDealersMemberMap2174);
                                    if(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberPrimaryDealersMemberValue2175 != null && !"".equals(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberPrimaryDealersMemberValue2175)) {
                                    
                                        // create context object
                                        
                                            Context explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberPrimaryDealersMemberContext2173 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberPrimaryDealersMemberMap2174 );
                                        
                                            if(!contextIdentifiers.contains(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberPrimaryDealersMemberContext2173.getId())) {
                                                contextElements.add(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberPrimaryDealersMemberContext2173);
                                                contextIdentifiers.add(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberPrimaryDealersMemberContext2173.getId());
                                            }                
                                            // create element JAXB Element
                    
                                            MonetaryItemType explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberPrimaryDealersMemberDataType2177 = new MonetaryItemType();
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberPrimaryDealersMemberDataType2177.setContextRef(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberPrimaryDealersMemberContext2173);
                                        
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberPrimaryDealersMemberDataType2177.setUnitRef(INR2172);
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberPrimaryDealersMemberDataType2177.setDecimals(CommonFns.getDecimals(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberPrimaryDealersMemberValue2175, "100000"));
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberPrimaryDealersMemberDataType2177.setValue(new BigDecimal(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberPrimaryDealersMemberValue2175));
                                        
                                        
                                            JAXBElement<MonetaryItemType> explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberPrimaryDealersMemberElement2176 = instancObjectFactory.createExposureAmount(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberPrimaryDealersMemberDataType2177);
                                            bodyElements.add(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberPrimaryDealersMemberElement2176);
                                    }
                                
                            
                        
                        
                        // end xbrl report element
                    
                        
                            // create unit if not empty
                            
                                
                                Unit INR2178 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2178 == null){
                                    INR2178 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2178.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2178.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2178);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis,LeverageRatioExposureAxis - ExposureAmount
                            
                        
                            

                            
                                    Map explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberCorporateMemberMap2180 = new HashMap<String, String>();
                                    
                                    explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberCorporateMemberMap2180.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                    explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberCorporateMemberMap2180.put("LeverageRatioExposureAxis", "CorporateMember");   
                                
                                    String explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberCorporateMemberValue2181 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberCorporateMemberMap2180);
                                    if(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberCorporateMemberValue2181 != null && !"".equals(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberCorporateMemberValue2181)) {
                                    
                                        // create context object
                                        
                                            Context explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberCorporateMemberContext2179 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberCorporateMemberMap2180 );
                                        
                                            if(!contextIdentifiers.contains(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberCorporateMemberContext2179.getId())) {
                                                contextElements.add(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberCorporateMemberContext2179);
                                                contextIdentifiers.add(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberCorporateMemberContext2179.getId());
                                            }                
                                            // create element JAXB Element
                    
                                            MonetaryItemType explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberCorporateMemberDataType2183 = new MonetaryItemType();
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberCorporateMemberDataType2183.setContextRef(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberCorporateMemberContext2179);
                                        
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberCorporateMemberDataType2183.setUnitRef(INR2178);
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberCorporateMemberDataType2183.setDecimals(CommonFns.getDecimals(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberCorporateMemberValue2181, "100000"));
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberCorporateMemberDataType2183.setValue(new BigDecimal(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberCorporateMemberValue2181));
                                        
                                        
                                            JAXBElement<MonetaryItemType> explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberCorporateMemberElement2182 = instancObjectFactory.createExposureAmount(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberCorporateMemberDataType2183);
                                            bodyElements.add(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberCorporateMemberElement2182);
                                    }
                                
                            
                        
                        
                        // end xbrl report element
                    
                        
                            // create unit if not empty
                            
                                
                                Unit INR2184 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2184 == null){
                                    INR2184 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2184.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2184.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2184);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis,LeverageRatioExposureAxis - ExposureAmount
                            
                        
                            

                            
                                    Map explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCCPsMemberMap2186 = new HashMap<String, String>();
                                    
                                    explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCCPsMemberMap2186.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                    explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCCPsMemberMap2186.put("LeverageRatioExposureAxis", "ExposureToCCPsMember");   
                                
                                    String explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCCPsMemberValue2187 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCCPsMemberMap2186);
                                    if(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCCPsMemberValue2187 != null && !"".equals(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCCPsMemberValue2187)) {
                                    
                                        // create context object
                                        
                                            Context explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCCPsMemberContext2185 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCCPsMemberMap2186 );
                                        
                                            if(!contextIdentifiers.contains(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCCPsMemberContext2185.getId())) {
                                                contextElements.add(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCCPsMemberContext2185);
                                                contextIdentifiers.add(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCCPsMemberContext2185.getId());
                                            }                
                                            // create element JAXB Element
                    
                                            MonetaryItemType explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCCPsMemberDataType2189 = new MonetaryItemType();
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCCPsMemberDataType2189.setContextRef(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCCPsMemberContext2185);
                                        
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCCPsMemberDataType2189.setUnitRef(INR2184);
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCCPsMemberDataType2189.setDecimals(CommonFns.getDecimals(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCCPsMemberValue2187, "100000"));
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCCPsMemberDataType2189.setValue(new BigDecimal(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCCPsMemberValue2187));
                                        
                                        
                                            JAXBElement<MonetaryItemType> explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCCPsMemberElement2188 = instancObjectFactory.createExposureAmount(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCCPsMemberDataType2189);
                                            bodyElements.add(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCCPsMemberElement2188);
                                    }
                                
                            
                        
                        
                        // end xbrl report element
                    
                        
                            // create unit if not empty
                            
                                
                                Unit INR2190 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2190 == null){
                                    INR2190 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2190.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2190.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2190);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis,LeverageRatioExposureAxis - ExposureAmount
                            
                        
                            

                            
                                    Map explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCapitalOfCCPsMemberMap2192 = new HashMap<String, String>();
                                    
                                    explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCapitalOfCCPsMemberMap2192.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                    explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCapitalOfCCPsMemberMap2192.put("LeverageRatioExposureAxis", "ExposureToCapitalOfCCPsMember");   
                                
                                    String explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCapitalOfCCPsMemberValue2193 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCapitalOfCCPsMemberMap2192);
                                    if(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCapitalOfCCPsMemberValue2193 != null && !"".equals(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCapitalOfCCPsMemberValue2193)) {
                                    
                                        // create context object
                                        
                                            Context explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCapitalOfCCPsMemberContext2191 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCapitalOfCCPsMemberMap2192 );
                                        
                                            if(!contextIdentifiers.contains(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCapitalOfCCPsMemberContext2191.getId())) {
                                                contextElements.add(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCapitalOfCCPsMemberContext2191);
                                                contextIdentifiers.add(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCapitalOfCCPsMemberContext2191.getId());
                                            }                
                                            // create element JAXB Element
                    
                                            MonetaryItemType explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCapitalOfCCPsMemberDataType2195 = new MonetaryItemType();
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCapitalOfCCPsMemberDataType2195.setContextRef(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCapitalOfCCPsMemberContext2191);
                                        
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCapitalOfCCPsMemberDataType2195.setUnitRef(INR2190);
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCapitalOfCCPsMemberDataType2195.setDecimals(CommonFns.getDecimals(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCapitalOfCCPsMemberValue2193, "100000"));
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCapitalOfCCPsMemberDataType2195.setValue(new BigDecimal(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCapitalOfCCPsMemberValue2193));
                                        
                                        
                                            JAXBElement<MonetaryItemType> explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCapitalOfCCPsMemberElement2194 = instancObjectFactory.createExposureAmount(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCapitalOfCCPsMemberDataType2195);
                                            bodyElements.add(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCapitalOfCCPsMemberElement2194);
                                    }
                                
                            
                        
                        
                        // end xbrl report element
                    
                        
                            // create unit if not empty
                            
                                
                                Unit INR2196 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2196 == null){
                                    INR2196 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2196.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2196.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2196);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis,LeverageRatioExposureAxis - ExposureAmount
                            
                        
                            

                            
                                    Map explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToDefaultFundContributionOfCCPsMemberMap2198 = new HashMap<String, String>();
                                    
                                    explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToDefaultFundContributionOfCCPsMemberMap2198.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                    explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToDefaultFundContributionOfCCPsMemberMap2198.put("LeverageRatioExposureAxis", "ExposureToDefaultFundContributionOfCCPsMember");   
                                
                                    String explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToDefaultFundContributionOfCCPsMemberValue2199 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToDefaultFundContributionOfCCPsMemberMap2198);
                                    if(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToDefaultFundContributionOfCCPsMemberValue2199 != null && !"".equals(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToDefaultFundContributionOfCCPsMemberValue2199)) {
                                    
                                        // create context object
                                        
                                            Context explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToDefaultFundContributionOfCCPsMemberContext2197 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToDefaultFundContributionOfCCPsMemberMap2198 );
                                        
                                            if(!contextIdentifiers.contains(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToDefaultFundContributionOfCCPsMemberContext2197.getId())) {
                                                contextElements.add(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToDefaultFundContributionOfCCPsMemberContext2197);
                                                contextIdentifiers.add(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToDefaultFundContributionOfCCPsMemberContext2197.getId());
                                            }                
                                            // create element JAXB Element
                    
                                            MonetaryItemType explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToDefaultFundContributionOfCCPsMemberDataType2201 = new MonetaryItemType();
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToDefaultFundContributionOfCCPsMemberDataType2201.setContextRef(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToDefaultFundContributionOfCCPsMemberContext2197);
                                        
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToDefaultFundContributionOfCCPsMemberDataType2201.setUnitRef(INR2196);
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToDefaultFundContributionOfCCPsMemberDataType2201.setDecimals(CommonFns.getDecimals(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToDefaultFundContributionOfCCPsMemberValue2199, "100000"));
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToDefaultFundContributionOfCCPsMemberDataType2201.setValue(new BigDecimal(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToDefaultFundContributionOfCCPsMemberValue2199));
                                        
                                        
                                            JAXBElement<MonetaryItemType> explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToDefaultFundContributionOfCCPsMemberElement2200 = instancObjectFactory.createExposureAmount(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToDefaultFundContributionOfCCPsMemberDataType2201);
                                            bodyElements.add(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToDefaultFundContributionOfCCPsMemberElement2200);
                                    }
                                
                            
                        
                        
                        // end xbrl report element
                    
                        
                            // create unit if not empty
                            
                                
                                Unit INR2202 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2202 == null){
                                    INR2202 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2202.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2202.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2202);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis,LeverageRatioExposureAxis - ExposureAmount
                            
                        
                            

                            
                                    Map explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOtherExposureToCCPsMemberMap2204 = new HashMap<String, String>();
                                    
                                    explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOtherExposureToCCPsMemberMap2204.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                    explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOtherExposureToCCPsMemberMap2204.put("LeverageRatioExposureAxis", "OtherExposureToCCPsMember");   
                                
                                    String explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOtherExposureToCCPsMemberValue2205 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOtherExposureToCCPsMemberMap2204);
                                    if(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOtherExposureToCCPsMemberValue2205 != null && !"".equals(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOtherExposureToCCPsMemberValue2205)) {
                                    
                                        // create context object
                                        
                                            Context explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOtherExposureToCCPsMemberContext2203 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOtherExposureToCCPsMemberMap2204 );
                                        
                                            if(!contextIdentifiers.contains(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOtherExposureToCCPsMemberContext2203.getId())) {
                                                contextElements.add(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOtherExposureToCCPsMemberContext2203);
                                                contextIdentifiers.add(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOtherExposureToCCPsMemberContext2203.getId());
                                            }                
                                            // create element JAXB Element
                    
                                            MonetaryItemType explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOtherExposureToCCPsMemberDataType2207 = new MonetaryItemType();
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOtherExposureToCCPsMemberDataType2207.setContextRef(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOtherExposureToCCPsMemberContext2203);
                                        
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOtherExposureToCCPsMemberDataType2207.setUnitRef(INR2202);
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOtherExposureToCCPsMemberDataType2207.setDecimals(CommonFns.getDecimals(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOtherExposureToCCPsMemberValue2205, "100000"));
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOtherExposureToCCPsMemberDataType2207.setValue(new BigDecimal(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOtherExposureToCCPsMemberValue2205));
                                        
                                        
                                            JAXBElement<MonetaryItemType> explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOtherExposureToCCPsMemberElement2206 = instancObjectFactory.createExposureAmount(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOtherExposureToCCPsMemberDataType2207);
                                            bodyElements.add(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOtherExposureToCCPsMemberElement2206);
                                    }
                                
                            
                        
                        
                        // end xbrl report element
                    
                        
                            // create unit if not empty
                            
                                
                                Unit INR2208 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2208 == null){
                                    INR2208 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2208.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2208.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2208);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis,LeverageRatioExposureAxis - ExposureAmount
                            
                        
                            

                            
                                    Map explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberAllOtherExposuresMemberMap2210 = new HashMap<String, String>();
                                    
                                    explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberAllOtherExposuresMemberMap2210.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                    explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberAllOtherExposuresMemberMap2210.put("LeverageRatioExposureAxis", "AllOtherExposuresMember");   
                                
                                    String explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberAllOtherExposuresMemberValue2211 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberAllOtherExposuresMemberMap2210);
                                    if(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberAllOtherExposuresMemberValue2211 != null && !"".equals(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberAllOtherExposuresMemberValue2211)) {
                                    
                                        // create context object
                                        
                                            Context explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberAllOtherExposuresMemberContext2209 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberAllOtherExposuresMemberMap2210 );
                                        
                                            if(!contextIdentifiers.contains(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberAllOtherExposuresMemberContext2209.getId())) {
                                                contextElements.add(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberAllOtherExposuresMemberContext2209);
                                                contextIdentifiers.add(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberAllOtherExposuresMemberContext2209.getId());
                                            }                
                                            // create element JAXB Element
                    
                                            MonetaryItemType explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberAllOtherExposuresMemberDataType2213 = new MonetaryItemType();
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberAllOtherExposuresMemberDataType2213.setContextRef(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberAllOtherExposuresMemberContext2209);
                                        
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberAllOtherExposuresMemberDataType2213.setUnitRef(INR2208);
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberAllOtherExposuresMemberDataType2213.setDecimals(CommonFns.getDecimals(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberAllOtherExposuresMemberValue2211, "100000"));
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberAllOtherExposuresMemberDataType2213.setValue(new BigDecimal(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberAllOtherExposuresMemberValue2211));
                                        
                                        
                                            JAXBElement<MonetaryItemType> explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberAllOtherExposuresMemberElement2212 = instancObjectFactory.createExposureAmount(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberAllOtherExposuresMemberDataType2213);
                                            bodyElements.add(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberAllOtherExposuresMemberElement2212);
                                    }
                                
                            
                        
                        
                        // end xbrl report element
                    
                        
                            // create unit if not empty
                            
                                
                                Unit INR2214 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2214 == null){
                                    INR2214 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2214.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2214.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2214);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis,LeverageRatioExposureAxis - ExposureAmount
                            
                        
                            

                            
                                    Map explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberMap2216 = new HashMap<String, String>();
                                    
                                    explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberMap2216.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                    explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberMap2216.put("LeverageRatioExposureAxis", "BalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMember");   
                                
                                    String explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberValue2217 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberMap2216);
                                    if(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberValue2217 != null && !"".equals(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberValue2217)) {
                                    
                                        // create context object
                                        
                                            Context explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberContext2215 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberMap2216 );
                                        
                                            if(!contextIdentifiers.contains(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberContext2215.getId())) {
                                                contextElements.add(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberContext2215);
                                                contextIdentifiers.add(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberContext2215.getId());
                                            }                
                                            // create element JAXB Element
                    
                                            MonetaryItemType explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberDataType2219 = new MonetaryItemType();
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberDataType2219.setContextRef(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberContext2215);
                                        
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberDataType2219.setUnitRef(INR2214);
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberDataType2219.setDecimals(CommonFns.getDecimals(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberValue2217, "100000"));
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberDataType2219.setValue(new BigDecimal(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberValue2217));
                                        
                                        
                                            JAXBElement<MonetaryItemType> explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberElement2218 = instancObjectFactory.createExposureAmount(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberDataType2219);
                                            bodyElements.add(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberElement2218);
                                    }
                                
                            
                        
                        
                        // end xbrl report element
                    
                        
                            // create unit if not empty
                            
                                
                                Unit INR2220 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2220 == null){
                                    INR2220 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2220.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2220.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2220);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis,LeverageRatioExposureAxis - ExposureAmount
                            
                        
                            

                            
                                    Map explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberFiduciaryAssetsMemberMap2222 = new HashMap<String, String>();
                                    
                                    explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberFiduciaryAssetsMemberMap2222.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                    explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberFiduciaryAssetsMemberMap2222.put("LeverageRatioExposureAxis", "FiduciaryAssetsMember");   
                                
                                    String explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberFiduciaryAssetsMemberValue2223 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberFiduciaryAssetsMemberMap2222);
                                    if(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberFiduciaryAssetsMemberValue2223 != null && !"".equals(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberFiduciaryAssetsMemberValue2223)) {
                                    
                                        // create context object
                                        
                                            Context explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberFiduciaryAssetsMemberContext2221 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberFiduciaryAssetsMemberMap2222 );
                                        
                                            if(!contextIdentifiers.contains(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberFiduciaryAssetsMemberContext2221.getId())) {
                                                contextElements.add(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberFiduciaryAssetsMemberContext2221);
                                                contextIdentifiers.add(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberFiduciaryAssetsMemberContext2221.getId());
                                            }                
                                            // create element JAXB Element
                    
                                            MonetaryItemType explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberFiduciaryAssetsMemberDataType2225 = new MonetaryItemType();
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberFiduciaryAssetsMemberDataType2225.setContextRef(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberFiduciaryAssetsMemberContext2221);
                                        
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberFiduciaryAssetsMemberDataType2225.setUnitRef(INR2220);
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberFiduciaryAssetsMemberDataType2225.setDecimals(CommonFns.getDecimals(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberFiduciaryAssetsMemberValue2223, "100000"));
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberFiduciaryAssetsMemberDataType2225.setValue(new BigDecimal(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberFiduciaryAssetsMemberValue2223));
                                        
                                        
                                            JAXBElement<MonetaryItemType> explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberFiduciaryAssetsMemberElement2224 = instancObjectFactory.createExposureAmount(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberFiduciaryAssetsMemberDataType2225);
                                            bodyElements.add(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberFiduciaryAssetsMemberElement2224);
                                    }
                                
                            
                        
                        
                        // end xbrl report element
                    
                        
                            // create unit if not empty
                            
                                
                                Unit INR2226 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2226 == null){
                                    INR2226 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2226.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2226.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2226);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout1
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis,LeverageRatioExposureAxis - ExposureAmount
                            
                        
                            

                            
                                    Map explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberMap2228 = new HashMap<String, String>();
                                    
                                    explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberMap2228.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                    explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberMap2228.put("LeverageRatioExposureAxis", "OnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMember");   
                                
                                    String explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberValue2229 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberMap2228);
                                    if(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberValue2229 != null && !"".equals(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberValue2229)) {
                                    
                                        // create context object
                                        
                                            Context explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberContext2227 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberMap2228 );
                                        
                                            if(!contextIdentifiers.contains(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberContext2227.getId())) {
                                                contextElements.add(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberContext2227);
                                                contextIdentifiers.add(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberContext2227.getId());
                                            }                
                                            // create element JAXB Element
                    
                                            MonetaryItemType explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberDataType2231 = new MonetaryItemType();
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberDataType2231.setContextRef(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberContext2227);
                                        
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberDataType2231.setUnitRef(INR2226);
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberDataType2231.setDecimals(CommonFns.getDecimals(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberValue2229, "100000"));
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberDataType2231.setValue(new BigDecimal(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberValue2229));
                                        
                                        
                                            JAXBElement<MonetaryItemType> explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberElement2230 = instancObjectFactory.createExposureAmount(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberDataType2231);
                                            bodyElements.add(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberElement2230);
                                    }
                                
                            
                        
                        
                        // end xbrl report element
                    
                    // end loop for explicitmember
                    }

                
                    
                
                // if typemembers exist
                
                
                
                // create variable for subclass DBSLeverageRatioConsolidated_Layout2 if any typeMembers then List or Single
                DBSLeverageRatioConsolidated_Layout2 dBSLeverageRatioConsolidated_Layout2 = mainReportData.getDBSLeverageRatioConsolidated_Layout2();
            
                
                    {
            
                    DBSLeverageRatioConsolidated_Layout2 field = dBSLeverageRatioConsolidated_Layout2;
                    // if explict member is empty
                    
                    // end if block for explicitMember is empty
            
                    // loop explicitMember if not empty -- insert taken out code
                    
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout2AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2233 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout2AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2233.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout2AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2234 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout2AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2233);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout2AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2234 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout2AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2234)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout2AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2232 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout2AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2233 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout2AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2232.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout2AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2232);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout2AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2232.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout2AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2236 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout2AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2236.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout2AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2232);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout2AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2236.setValue(explictMember1DBSLeverageRatioConsolidated_Layout2AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2234);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout2AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2235 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout2AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2236);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout2AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2235);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit pure2237 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(pure2237 == null){
                                    pure2237 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    pure2237.setId("PURE");
                                    QName unitMeasureValue = new QName("xbrli:pure");
                                    pure2237.getMeasure().add(unitMeasureValue);
                                    unitElements.add(pure2237);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - CreditConversionFactor
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap2239 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap2239.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2240 = DBS06ReportUtil.retrieveValueForElement(field.getCreditConversionFactor(), explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap2239);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2240 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2240)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisContext2238 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap2239 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisContext2238.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisContext2238);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisContext2238.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2242 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2242.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisContext2238);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2242.setValue(explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2240);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2241 = instancObjectFactory.createCreditConversionFactor(explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2242);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2241);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit pure2243 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(pure2243 == null){
                                    pure2243 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    pure2243.setId("PURE");
                                    QName unitMeasureValue = new QName("xbrli:pure");
                                    pure2243.getMeasure().add(unitMeasureValue);
                                    unitElements.add(pure2243);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - CreditConversionFactor
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap2245 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap2245.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2246 = DBS06ReportUtil.retrieveValueForElement(field.getCreditConversionFactor(), explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap2245);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2246 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2246)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisContext2244 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap2245 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisContext2244.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisContext2244);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisContext2244.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2248 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2248.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisContext2244);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2248.setValue(explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2246);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2247 = instancObjectFactory.createCreditConversionFactor(explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2248);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2247);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit pure2249 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(pure2249 == null){
                                    pure2249 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    pure2249.setId("PURE");
                                    QName unitMeasureValue = new QName("xbrli:pure");
                                    pure2249.getMeasure().add(unitMeasureValue);
                                    unitElements.add(pure2249);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - CreditConversionFactor
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap2251 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap2251.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2252 = DBS06ReportUtil.retrieveValueForElement(field.getCreditConversionFactor(), explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap2251);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2252 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2252)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisContext2250 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap2251 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisContext2250.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisContext2250);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisContext2250.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2254 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2254.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisContext2250);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2254.setValue(explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2252);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2253 = instancObjectFactory.createCreditConversionFactor(explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2254);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2253);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit pure2255 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(pure2255 == null){
                                    pure2255 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    pure2255.setId("PURE");
                                    QName unitMeasureValue = new QName("xbrli:pure");
                                    pure2255.getMeasure().add(unitMeasureValue);
                                    unitElements.add(pure2255);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - CreditConversionFactor
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap2257 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap2257.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2258 = DBS06ReportUtil.retrieveValueForElement(field.getCreditConversionFactor(), explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap2257);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2258 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2258)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisContext2256 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap2257 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisContext2256.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisContext2256);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisContext2256.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2260 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2260.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisContext2256);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2260.setValue(explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2258);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2259 = instancObjectFactory.createCreditConversionFactor(explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2260);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2259);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit pure2261 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(pure2261 == null){
                                    pure2261 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    pure2261.setId("PURE");
                                    QName unitMeasureValue = new QName("xbrli:pure");
                                    pure2261.getMeasure().add(unitMeasureValue);
                                    unitElements.add(pure2261);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - CreditConversionFactor
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap2263 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap2263.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2264 = DBS06ReportUtil.retrieveValueForElement(field.getCreditConversionFactor(), explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap2263);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2264 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2264)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisContext2262 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap2263 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisContext2262.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisContext2262);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisContext2262.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2266 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2266.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisContext2262);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2266.setValue(explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2264);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2265 = instancObjectFactory.createCreditConversionFactor(explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2266);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2265);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit pure2267 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(pure2267 == null){
                                    pure2267 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    pure2267.setId("PURE");
                                    QName unitMeasureValue = new QName("xbrli:pure");
                                    pure2267.getMeasure().add(unitMeasureValue);
                                    unitElements.add(pure2267);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - CreditConversionFactor
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap2269 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap2269.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2270 = DBS06ReportUtil.retrieveValueForElement(field.getCreditConversionFactor(), explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap2269);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2270 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2270)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisContext2268 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisMap2269 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisContext2268.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisContext2268);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisContext2268.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2272 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2272.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisContext2268);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2272.setValue(explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2270);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2271 = instancObjectFactory.createCreditConversionFactor(explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2272);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout2CreditConversionFactorConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2271);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout2
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout2AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2274 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout2AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2274.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout2AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2275 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout2AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2274);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout2AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2275 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout2AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2275)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout2AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2273 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout2AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2274 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout2AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2273.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout2AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2273);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout2AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2273.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout2AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2277 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout2AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2277.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout2AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2273);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout2AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2277.setValue(explictMember1DBSLeverageRatioConsolidated_Layout2AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2275);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout2AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2276 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout2AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2277);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout2AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2276);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                        // end xbrl report element
                    
                    // end loop for explicitmember
                    }

                
                    
                
                // if typemembers exist
                
                
                
                // create variable for subclass DBSLeverageRatioConsolidated_Layout3 if any typeMembers then List or Single
                DBSLeverageRatioConsolidated_Layout3 dBSLeverageRatioConsolidated_Layout3 = mainReportData.getDBSLeverageRatioConsolidated_Layout3();
            
                
                    {
            
                    DBSLeverageRatioConsolidated_Layout3 field = dBSLeverageRatioConsolidated_Layout3;
                    // if explict member is empty
                    
                    // end if block for explicitMember is empty
            
                    // loop explicitMember if not empty -- insert taken out code
                    
                        
                            // create unit if not empty
                            
                                
                                Unit INR2278 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2278 == null){
                                    INR2278 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2278.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2278.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2278);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2280 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2280.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2281 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2280);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2281 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2281)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2279 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2280 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2279.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2279);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2279.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2283 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2283.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2279);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2283.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2281);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2282 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2283);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2282);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2284 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2284 == null){
                                    INR2284 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2284.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2284.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2284);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2286 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2286.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2287 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2286);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2287 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2287)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2285 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2286 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2285.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2285);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2285.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2289 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2289.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2285);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2289.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2287);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2288 = instancObjectFactory.createReplacementCost(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2289);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2288);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2290 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2290 == null){
                                    INR2290 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2290.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2290.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2290);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2292 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2292.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2293 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2292);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2293 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2293)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2291 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2292 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2291.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2291);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2291.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2295 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2295.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2291);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2295.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2293);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2294 = instancObjectFactory.createPotentialFutureExposure(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2295);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2294);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2297 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2297.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2298 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2297);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2298 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2298)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2296 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2297 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2296.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2296);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2296.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2300 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2300.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2296);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2300.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2298);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2299 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2300);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2299);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2301 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2301 == null){
                                    INR2301 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2301.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2301.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2301);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2303 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2303.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2304 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2303);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2304 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2304)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2302 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2303 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2302.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2302);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2302.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2306 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2306.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2302);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2306.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2304);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2305 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2306);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2305);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2307 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2307 == null){
                                    INR2307 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2307.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2307.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2307);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2309 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2309.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2310 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2309);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2310 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2310)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2308 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2309 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2308.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2308);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2308.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2312 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2312.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2308);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2312.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2310);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2311 = instancObjectFactory.createReplacementCost(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2312);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2311);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2313 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2313 == null){
                                    INR2313 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2313.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2313.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2313);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2315 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2315.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2316 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2315);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2316 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2316)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2314 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2315 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2314.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2314);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2314.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2318 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2318.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2314);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2318.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2316);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2317 = instancObjectFactory.createPotentialFutureExposure(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2318);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2317);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2320 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2320.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2321 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2320);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2321 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2321)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2319 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2320 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2319.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2319);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2319.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2323 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2323.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2319);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2323.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2321);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2322 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2323);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2322);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2324 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2324 == null){
                                    INR2324 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2324.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2324.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2324);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2326 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2326.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2327 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2326);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2327 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2327)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2325 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2326 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2325.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2325);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2325.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2329 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2329.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2325);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2329.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2327);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2328 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2329);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2328);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2330 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2330 == null){
                                    INR2330 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2330.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2330.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2330);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2332 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2332.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2333 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2332);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2333 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2333)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2331 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2332 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2331.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2331);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2331.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2335 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2335.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2331);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2335.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2333);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2334 = instancObjectFactory.createReplacementCost(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2335);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2334);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2336 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2336 == null){
                                    INR2336 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2336.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2336.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2336);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2338 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2338.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2339 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2338);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2339 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2339)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2337 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2338 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2337.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2337);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2337.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2341 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2341.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2337);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2341.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2339);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2340 = instancObjectFactory.createPotentialFutureExposure(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2341);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2340);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2343 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2343.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2344 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2343);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2344 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2344)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2342 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2343 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2342.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2342);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2342.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2346 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2346.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2342);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2346.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2344);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2345 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2346);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2345);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2347 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2347 == null){
                                    INR2347 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2347.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2347.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2347);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2349 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2349.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2350 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2349);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2350 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2350)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2348 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2349 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2348.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2348);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2348.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2352 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2352.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2348);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2352.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2350);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2351 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2352);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2351);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2353 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2353 == null){
                                    INR2353 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2353.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2353.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2353);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2355 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2355.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2356 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2355);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2356 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2356)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2354 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2355 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2354.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2354);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2354.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2358 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2358.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2354);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2358.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2356);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2357 = instancObjectFactory.createReplacementCost(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2358);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2357);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2359 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2359 == null){
                                    INR2359 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2359.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2359.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2359);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2361 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2361.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2362 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2361);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2362 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2362)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2360 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2361 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2360.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2360);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2360.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2364 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2364.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2360);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2364.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2362);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2363 = instancObjectFactory.createPotentialFutureExposure(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2364);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2363);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2366 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2366.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2367 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2366);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2367 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2367)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2365 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2366 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2365.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2365);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2365.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2369 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2369.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2365);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2369.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2367);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2368 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2369);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2368);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2370 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2370 == null){
                                    INR2370 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2370.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2370.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2370);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2372 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2372.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2373 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2372);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2373 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2373)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2371 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2372 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2371.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2371);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2371.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2375 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2375.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2371);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2375.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2373);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2374 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2375);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2374);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2376 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2376 == null){
                                    INR2376 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2376.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2376.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2376);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2378 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2378.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2379 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2378);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2379 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2379)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2377 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2378 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2377.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2377);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2377.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2381 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2381.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2377);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2381.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2379);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2380 = instancObjectFactory.createReplacementCost(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2381);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2380);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2382 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2382 == null){
                                    INR2382 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2382.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2382.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2382);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2384 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2384.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2385 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2384);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2385 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2385)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2383 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2384 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2383.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2383);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2383.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2387 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2387.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2383);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2387.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2385);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2386 = instancObjectFactory.createPotentialFutureExposure(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2387);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2386);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2389 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2389.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2390 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2389);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2390 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2390)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2388 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2389 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2388.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2388);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2388.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2392 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2392.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2388);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2392.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2390);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2391 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2392);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2391);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2393 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2393 == null){
                                    INR2393 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2393.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2393.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2393);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2395 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2395.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2396 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2395);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2396 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2396)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2394 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2395 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2394.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2394);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2394.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2398 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2398.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2394);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2398.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2396);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2397 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2398);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2397);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2399 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2399 == null){
                                    INR2399 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2399.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2399.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2399);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2401 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2401.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2402 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2401);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2402 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2402)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2400 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2401 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2400.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2400);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2400.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2404 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2404.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2400);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2404.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2402);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2403 = instancObjectFactory.createReplacementCost(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2404);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2403);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2405 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2405 == null){
                                    INR2405 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2405.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2405.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2405);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2407 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2407.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2408 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2407);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2408 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2408)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2406 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2407 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2406.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2406);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2406.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2410 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2410.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2406);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2410.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2408);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2409 = instancObjectFactory.createPotentialFutureExposure(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2410);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2409);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2412 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2412.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2413 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2412);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2413 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2413)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2411 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2412 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2411.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2411);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2411.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2415 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2415.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2411);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2415.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2413);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2414 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2415);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2414);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2416 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2416 == null){
                                    INR2416 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2416.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2416.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2416);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2418 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2418.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2419 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2418);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2419 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2419)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2417 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2418 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2417.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2417);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2417.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2421 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2421.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2417);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2421.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2419);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2420 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2421);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2420);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2422 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2422 == null){
                                    INR2422 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2422.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2422.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2422);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2424 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2424.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2425 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2424);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2425 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2425)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2423 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2424 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2423.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2423);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2423.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2427 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2427.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2423);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2427.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2425);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2426 = instancObjectFactory.createReplacementCost(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2427);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2426);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2428 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2428 == null){
                                    INR2428 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2428.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2428.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2428);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2430 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2430.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2431 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2430);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2431 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2431)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2429 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2430 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2429.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2429);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2429.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2433 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2433.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2429);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2433.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2431);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2432 = instancObjectFactory.createPotentialFutureExposure(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2433);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2432);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2435 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2435.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2436 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2435);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2436 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2436)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2434 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2435 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2434.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2434);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2434.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2438 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2438.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2434);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2438.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2436);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2437 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2438);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2437);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2439 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2439 == null){
                                    INR2439 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2439.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2439.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2439);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2441 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2441.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2442 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2441);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2442 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2442)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2440 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2441 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2440.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2440);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2440.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2444 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2444.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2440);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2444.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2442);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2443 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2444);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2443);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2445 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2445 == null){
                                    INR2445 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2445.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2445.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2445);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2447 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2447.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2448 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2447);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2448 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2448)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2446 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2447 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2446.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2446);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2446.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2450 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2450.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2446);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2450.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2448);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2449 = instancObjectFactory.createReplacementCost(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2450);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2449);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2451 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2451 == null){
                                    INR2451 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2451.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2451.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2451);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2453 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2453.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2454 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2453);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2454 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2454)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2452 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2453 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2452.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2452);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2452.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2456 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2456.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2452);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2456.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2454);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2455 = instancObjectFactory.createPotentialFutureExposure(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2456);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2455);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2458 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2458.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2459 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2458);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2459 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2459)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2457 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2458 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2457.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2457);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2457.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2461 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2461.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2457);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2461.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2459);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2460 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2461);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2460);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2462 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2462 == null){
                                    INR2462 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2462.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2462.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2462);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2464 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2464.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2465 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2464);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2465 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2465)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2463 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2464 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2463.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2463);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2463.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2467 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2467.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2463);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2467.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2465);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2466 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2467);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2466);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2468 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2468 == null){
                                    INR2468 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2468.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2468.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2468);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2470 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2470.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2471 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2470);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2471 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2471)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2469 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2470 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2469.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2469);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2469.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2473 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2473.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2469);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2473.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2471);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2472 = instancObjectFactory.createReplacementCost(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2473);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2472);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2474 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2474 == null){
                                    INR2474 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2474.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2474.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2474);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2476 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2476.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2477 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2476);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2477 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2477)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2475 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2476 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2475.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2475);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2475.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2479 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2479.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2475);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2479.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2477);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2478 = instancObjectFactory.createPotentialFutureExposure(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2479);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2478);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2481 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2481.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2482 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2481);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2482 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2482)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2480 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2481 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2480.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2480);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2480.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2484 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2484.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2480);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2484.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2482);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2483 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2484);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2483);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2485 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2485 == null){
                                    INR2485 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2485.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2485.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2485);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2487 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2487.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2488 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2487);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2488 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2488)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2486 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2487 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2486.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2486);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2486.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2490 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2490.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2486);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2490.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2488);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2489 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2490);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2489);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2492 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2492.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2493 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2492);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2493 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2493)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2491 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2492 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2491.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2491);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2491.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2495 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2495.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2491);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2495.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2493);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2494 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2495);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2494);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2497 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2497.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2498 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2497);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2498 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2498)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2496 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2497 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2496.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2496);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2496.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2500 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2500.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2496);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2500.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2498);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2499 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2500);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2499);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2502 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2502.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2503 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2502);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2503 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2503)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2501 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2502 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2501.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2501);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2501.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2505 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2505.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2501);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2505.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2503);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2504 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2505);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2504);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2506 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2506 == null){
                                    INR2506 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2506.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2506.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2506);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2508 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2508.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2509 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2508);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2509 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2509)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2507 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2508 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2507.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2507);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2507.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2511 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2511.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2507);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2511.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2509);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2510 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2511);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2510);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2513 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2513.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2514 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2513);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2514 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2514)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2512 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2513 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2512.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2512);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2512.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2516 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2516.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2512);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2516.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2514);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2515 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2516);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2515);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2518 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2518.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2519 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2518);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2519 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2519)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2517 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2518 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2517.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2517);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2517.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2521 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2521.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2517);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2521.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2519);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2520 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2521);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2520);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2523 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2523.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2524 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2523);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2524 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2524)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2522 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2523 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2522.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2522);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2522.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2526 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2526.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2522);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2526.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2524);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2525 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2526);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2525);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2527 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2527 == null){
                                    INR2527 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2527.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2527.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2527);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2529 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2529.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2530 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2529);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2530 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2530)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2528 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2529 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2528.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2528);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2528.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2532 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2532.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2528);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2532.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2530);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2531 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2532);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2531);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2534 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2534.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2535 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2534);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2535 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2535)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2533 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2534 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2533.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2533);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2533.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2537 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2537.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2533);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2537.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2535);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2536 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2537);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2536);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2539 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2539.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2540 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2539);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2540 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2540)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2538 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2539 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2538.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2538);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2538.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2542 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2542.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2538);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2542.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2540);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2541 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2542);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2541);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2544 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2544.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2545 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2544);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2545 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2545)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2543 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2544 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2543.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2543);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2543.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2547 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2547.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2543);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2547.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2545);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2546 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2547);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2546);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2548 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2548 == null){
                                    INR2548 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2548.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2548.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2548);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2550 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2550.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2551 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2550);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2551 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2551)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2549 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2550 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2549.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2549);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2549.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2553 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2553.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2549);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2553.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2551);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2552 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2553);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2552);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2555 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2555.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2556 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2555);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2556 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2556)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2554 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2555 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2554.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2554);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2554.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2558 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2558.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2554);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2558.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2556);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2557 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2558);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2557);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2560 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2560.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2561 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2560);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2561 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2561)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2559 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2560 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2559.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2559);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2559.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2563 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2563.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2559);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2563.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2561);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2562 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2563);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2562);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2565 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2565.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2566 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2565);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2566 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2566)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2564 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2565 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2564.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2564);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2564.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2568 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2568.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2564);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2568.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2566);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2567 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2568);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2567);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2569 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2569 == null){
                                    INR2569 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2569.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2569.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2569);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2571 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2571.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2572 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2571);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2572 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2572)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2570 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2571 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2570.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2570);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2570.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2574 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2574.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2570);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2574.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2572);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2573 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2574);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2573);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2576 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2576.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2577 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2576);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2577 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2577)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2575 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2576 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2575.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2575);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2575.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2579 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2579.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2575);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2579.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2577);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2578 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2579);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2578);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2581 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2581.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2582 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2581);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2582 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2582)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2580 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2581 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2580.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2580);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2580.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2584 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2584.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2580);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2584.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2582);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2583 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2584);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2583);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2586 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2586.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2587 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2586);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2587 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2587)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2585 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2586 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2585.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2585);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2585.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2589 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2589.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2585);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2589.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2587);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2588 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2589);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2588);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2590 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2590 == null){
                                    INR2590 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2590.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2590.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2590);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2592 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2592.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2593 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2592);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2593 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2593)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2591 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2592 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2591.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2591);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2591.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2595 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2595.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2591);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2595.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2593);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2594 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2595);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2594);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2597 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2597.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2598 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2597);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2598 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2598)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2596 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2597 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2596.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2596);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2596.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2600 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2600.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2596);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2600.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2598);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2599 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2600);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2599);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2602 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2602.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2603 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2602);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2603 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2603)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2601 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2602 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2601.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2601);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2601.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2605 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2605.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2601);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2605.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2603);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2604 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2605);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2604);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2607 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2607.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2608 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2607);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2608 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2608)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2606 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2607 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2606.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2606);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2606.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2610 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2610.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2606);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2610.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2608);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2609 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2610);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2609);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2611 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2611 == null){
                                    INR2611 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2611.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2611.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2611);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2613 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2613.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2614 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2613);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2614 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2614)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2612 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2613 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2612.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2612);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2612.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2616 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2616.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2612);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2616.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2614);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2615 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2616);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2615);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2618 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2618.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2619 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2618);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2619 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2619)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2617 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2618 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2617.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2617);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2617.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2621 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2621.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2617);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2621.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2619);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2620 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2621);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2620);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2623 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2623.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2624 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2623);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2624 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2624)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2622 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2623 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2622.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2622);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2622.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2626 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2626.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2622);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2626.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2624);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2625 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2626);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2625);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2628 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2628.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2629 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2628);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2629 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2629)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2627 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2628 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2627.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2627);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2627.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2631 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2631.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2627);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2631.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2629);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2630 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2631);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2630);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2633 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2633.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2634 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2633);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2634 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2634)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2632 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2633 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2632.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2632);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2632.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2636 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2636.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2632);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2636.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2634);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2635 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2636);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2635);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2637 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2637 == null){
                                    INR2637 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2637.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2637.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2637);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2639 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2639.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2640 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2639);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2640 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2640)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2638 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2639 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2638.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2638);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2638.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2642 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2642.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2638);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2642.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2640);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2641 = instancObjectFactory.createReplacementCost(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2642);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2641);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2644 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2644.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2645 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2644);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2645 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2645)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2643 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2644 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2643.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2643);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2643.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2647 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2647.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2643);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2647.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2645);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2646 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2647);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2646);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2649 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2649.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2650 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2649);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2650 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2650)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2648 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2649 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2648.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2648);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2648.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2652 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2652.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2648);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2652.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2650);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2651 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2652);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2651);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2654 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2654.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2655 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2654);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2655 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2655)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2653 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2654 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2653.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2653);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2653.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2657 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2657.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2653);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2657.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2655);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2656 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2657);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2656);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2658 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2658 == null){
                                    INR2658 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2658.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2658.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2658);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2660 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2660.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2661 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2660);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2661 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2661)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2659 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2660 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2659.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2659);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2659.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2663 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2663.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2659);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2663.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2661);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2662 = instancObjectFactory.createReplacementCost(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2663);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2662);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2665 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2665.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2666 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2665);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2666 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2666)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2664 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2665 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2664.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2664);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2664.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2668 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2668.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2664);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2668.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2666);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2667 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2668);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2667);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2670 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2670.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2671 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2670);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2671 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2671)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2669 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2670 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2669.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2669);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2669.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2673 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2673.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2669);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2673.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2671);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2672 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2673);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2672);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2675 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2675.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2676 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2675);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2676 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2676)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2674 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2675 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2674.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2674);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2674.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2678 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2678.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2674);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2678.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2676);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2677 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2678);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2677);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2679 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2679 == null){
                                    INR2679 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2679.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2679.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2679);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2681 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2681.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2682 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2681);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2682 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2682)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2680 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2681 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2680.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2680);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2680.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2684 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2684.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2680);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2684.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2682);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2683 = instancObjectFactory.createReplacementCost(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2684);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2683);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2686 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2686.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2687 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2686);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2687 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2687)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2685 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2686 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2685.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2685);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2685.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2689 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2689.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2685);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2689.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2687);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2688 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2689);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2688);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2691 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2691.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2692 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2691);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2692 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2692)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2690 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2691 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2690.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2690);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2690.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2694 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2694.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2690);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2694.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2692);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2693 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2694);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2693);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2696 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2696.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2697 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2696);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2697 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2697)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2695 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2696 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2695.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2695);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2695.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2699 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2699.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2695);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2699.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2697);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2698 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2699);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2698);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2700 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2700 == null){
                                    INR2700 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2700.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2700.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2700);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2702 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2702.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2703 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2702);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2703 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2703)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2701 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2702 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2701.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2701);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2701.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2705 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2705.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2701);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2705.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2703);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2704 = instancObjectFactory.createReplacementCost(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2705);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2704);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2707 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2707.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2708 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2707);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2708 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2708)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2706 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2707 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2706.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2706);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2706.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2710 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2710.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2706);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2710.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2708);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2709 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2710);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2709);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2712 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2712.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2713 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2712);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2713 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2713)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2711 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2712 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2711.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2711);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2711.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2715 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2715.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2711);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2715.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2713);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2714 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2715);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2714);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2717 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2717.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2718 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2717);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2718 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2718)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2716 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2717 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2716.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2716);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2716.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2720 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2720.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2716);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2720.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2718);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2719 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2720);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2719);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2722 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2722.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2723 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2722);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2723 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2723)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2721 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2722 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2721.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2721);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2721.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2725 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2725.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2721);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2725.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2723);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2724 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2725);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2724);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2726 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2726 == null){
                                    INR2726 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2726.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2726.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2726);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2728 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2728.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2729 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2728);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2729 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2729)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2727 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2728 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2727.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2727);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2727.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2731 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2731.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2727);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2731.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2729);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2730 = instancObjectFactory.createPotentialFutureExposure(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2731);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2730);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2733 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2733.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2734 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2733);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2734 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2734)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2732 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2733 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2732.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2732);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2732.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2736 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2736.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2732);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2736.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2734);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2735 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2736);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2735);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2738 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2738.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2739 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2738);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2739 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2739)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2737 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2738 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2737.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2737);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2737.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2741 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2741.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2737);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2741.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2739);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2740 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2741);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2740);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2743 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2743.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2744 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2743);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2744 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2744)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2742 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2743 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2742.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2742);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2742.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2746 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2746.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2742);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2746.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2744);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2745 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2746);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2745);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2748 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2748.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2749 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2748);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2749 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2749)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2747 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2748 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2747.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2747);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2747.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2751 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2751.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2747);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2751.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2749);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2750 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2751);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2750);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2752 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2752 == null){
                                    INR2752 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2752.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2752.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2752);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - ExposureAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisMap2754 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisMap2754.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2755 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisMap2754);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2755 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2755)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisContext2753 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisMap2754 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisContext2753.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisContext2753);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisContext2753.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2757 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2757.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisContext2753);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2757.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2755);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2756 = instancObjectFactory.createExposureAmount(explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2757);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2756);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                        // end xbrl report element
                    
                        
                            // create unit if not empty
                            
                                
                                Unit INR2758 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2758 == null){
                                    INR2758 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2758.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2758.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2758);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2760 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2760.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2761 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2760);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2761 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2761)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2759 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2760 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2759.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2759);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2759.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2763 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2763.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2759);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2763.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2761);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2762 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2763);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2762);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2764 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2764 == null){
                                    INR2764 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2764.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2764.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2764);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2766 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2766.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2767 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2766);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2767 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2767)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2765 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2766 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2765.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2765);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2765.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2769 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2769.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2765);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2769.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2767);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2768 = instancObjectFactory.createReplacementCost(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2769);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2768);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2770 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2770 == null){
                                    INR2770 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2770.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2770.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2770);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2772 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2772.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2773 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2772);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2773 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2773)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2771 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2772 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2771.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2771);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2771.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2775 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2775.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2771);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2775.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2773);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2774 = instancObjectFactory.createPotentialFutureExposure(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2775);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2774);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2777 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2777.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2778 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2777);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2778 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2778)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2776 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2777 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2776.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2776);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2776.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2780 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2780.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2776);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2780.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2778);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2779 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2780);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2779);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2781 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2781 == null){
                                    INR2781 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2781.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2781.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2781);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2783 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2783.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2784 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2783);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2784 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2784)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2782 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2783 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2782.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2782);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2782.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2786 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2786.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2782);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2786.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2784);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2785 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2786);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2785);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2787 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2787 == null){
                                    INR2787 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2787.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2787.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2787);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2789 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2789.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2790 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2789);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2790 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2790)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2788 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2789 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2788.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2788);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2788.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2792 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2792.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2788);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2792.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2790);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2791 = instancObjectFactory.createReplacementCost(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2792);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2791);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2793 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2793 == null){
                                    INR2793 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2793.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2793.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2793);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2795 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2795.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2796 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2795);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2796 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2796)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2794 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2795 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2794.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2794);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2794.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2798 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2798.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2794);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2798.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2796);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2797 = instancObjectFactory.createPotentialFutureExposure(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2798);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2797);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2800 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2800.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2801 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2800);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2801 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2801)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2799 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2800 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2799.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2799);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2799.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2803 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2803.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2799);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2803.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2801);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2802 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2803);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2802);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2804 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2804 == null){
                                    INR2804 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2804.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2804.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2804);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2806 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2806.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2807 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2806);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2807 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2807)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2805 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2806 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2805.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2805);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2805.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2809 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2809.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2805);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2809.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2807);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2808 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2809);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2808);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2810 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2810 == null){
                                    INR2810 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2810.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2810.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2810);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2812 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2812.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2813 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2812);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2813 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2813)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2811 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2812 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2811.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2811);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2811.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2815 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2815.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2811);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2815.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2813);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2814 = instancObjectFactory.createReplacementCost(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2815);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2814);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2816 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2816 == null){
                                    INR2816 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2816.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2816.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2816);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2818 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2818.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2819 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2818);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2819 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2819)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2817 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2818 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2817.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2817);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2817.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2821 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2821.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2817);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2821.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2819);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2820 = instancObjectFactory.createPotentialFutureExposure(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2821);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2820);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2823 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2823.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2824 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2823);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2824 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2824)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2822 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2823 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2822.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2822);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2822.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2826 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2826.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2822);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2826.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2824);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2825 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2826);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2825);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2827 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2827 == null){
                                    INR2827 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2827.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2827.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2827);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2829 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2829.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2830 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2829);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2830 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2830)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2828 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2829 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2828.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2828);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2828.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2832 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2832.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2828);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2832.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2830);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2831 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2832);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2831);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2833 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2833 == null){
                                    INR2833 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2833.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2833.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2833);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2835 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2835.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2836 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2835);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2836 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2836)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2834 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2835 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2834.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2834);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2834.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2838 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2838.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2834);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2838.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2836);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2837 = instancObjectFactory.createReplacementCost(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2838);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2837);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2839 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2839 == null){
                                    INR2839 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2839.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2839.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2839);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2841 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2841.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2842 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2841);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2842 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2842)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2840 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2841 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2840.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2840);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2840.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2844 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2844.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2840);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2844.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2842);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2843 = instancObjectFactory.createPotentialFutureExposure(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2844);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2843);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2846 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2846.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2847 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2846);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2847 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2847)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2845 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2846 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2845.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2845);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2845.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2849 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2849.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2845);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2849.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2847);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2848 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2849);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2848);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2850 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2850 == null){
                                    INR2850 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2850.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2850.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2850);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2852 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2852.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2853 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2852);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2853 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2853)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2851 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2852 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2851.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2851);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2851.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2855 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2855.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2851);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2855.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2853);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2854 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2855);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2854);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2856 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2856 == null){
                                    INR2856 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2856.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2856.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2856);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2858 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2858.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2859 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2858);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2859 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2859)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2857 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2858 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2857.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2857);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2857.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2861 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2861.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2857);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2861.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2859);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2860 = instancObjectFactory.createReplacementCost(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2861);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2860);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2862 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2862 == null){
                                    INR2862 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2862.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2862.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2862);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2864 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2864.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2865 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2864);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2865 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2865)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2863 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2864 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2863.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2863);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2863.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2867 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2867.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2863);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2867.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2865);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2866 = instancObjectFactory.createPotentialFutureExposure(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2867);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2866);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2869 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2869.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2870 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2869);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2870 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2870)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2868 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2869 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2868.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2868);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2868.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2872 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2872.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2868);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2872.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2870);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2871 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2872);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2871);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2873 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2873 == null){
                                    INR2873 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2873.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2873.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2873);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2875 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2875.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2876 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2875);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2876 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2876)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2874 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2875 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2874.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2874);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2874.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2878 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2878.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2874);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2878.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2876);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2877 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2878);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2877);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2879 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2879 == null){
                                    INR2879 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2879.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2879.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2879);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2881 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2881.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2882 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2881);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2882 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2882)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2880 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2881 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2880.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2880);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2880.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2884 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2884.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2880);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2884.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2882);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2883 = instancObjectFactory.createReplacementCost(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2884);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2883);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2885 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2885 == null){
                                    INR2885 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2885.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2885.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2885);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2887 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2887.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2888 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2887);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2888 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2888)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2886 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2887 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2886.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2886);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2886.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2890 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2890.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2886);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2890.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2888);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2889 = instancObjectFactory.createPotentialFutureExposure(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2890);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2889);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2892 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2892.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2893 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2892);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2893 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2893)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2891 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2892 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2891.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2891);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2891.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2895 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2895.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2891);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2895.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2893);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2894 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2895);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2894);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2896 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2896 == null){
                                    INR2896 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2896.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2896.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2896);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2898 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2898.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2899 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2898);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2899 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2899)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2897 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2898 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2897.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2897);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2897.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2901 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2901.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2897);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2901.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2899);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2900 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2901);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2900);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2902 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2902 == null){
                                    INR2902 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2902.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2902.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2902);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2904 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2904.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2905 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2904);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2905 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2905)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2903 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2904 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2903.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2903);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2903.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2907 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2907.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2903);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2907.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2905);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2906 = instancObjectFactory.createReplacementCost(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2907);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2906);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2908 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2908 == null){
                                    INR2908 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2908.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2908.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2908);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2910 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2910.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2911 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2910);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2911 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2911)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2909 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2910 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2909.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2909);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2909.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2913 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2913.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2909);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2913.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2911);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2912 = instancObjectFactory.createPotentialFutureExposure(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2913);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2912);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2915 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2915.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2916 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2915);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2916 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2916)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2914 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2915 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2914.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2914);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2914.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2918 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2918.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2914);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2918.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2916);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2917 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2918);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2917);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2919 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2919 == null){
                                    INR2919 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2919.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2919.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2919);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2921 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2921.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2922 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2921);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2922 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2922)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2920 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2921 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2920.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2920);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2920.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2924 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2924.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2920);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2924.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2922);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2923 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2924);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2923);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2925 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2925 == null){
                                    INR2925 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2925.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2925.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2925);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2927 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2927.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2928 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2927);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2928 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2928)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2926 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2927 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2926.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2926);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2926.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2930 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2930.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2926);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2930.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2928);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2929 = instancObjectFactory.createReplacementCost(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2930);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2929);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2931 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2931 == null){
                                    INR2931 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2931.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2931.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2931);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2933 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2933.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2934 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2933);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2934 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2934)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2932 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2933 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2932.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2932);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2932.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2936 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2936.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2932);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2936.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2934);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2935 = instancObjectFactory.createPotentialFutureExposure(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2936);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2935);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2938 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2938.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2939 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2938);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2939 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2939)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2937 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2938 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2937.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2937);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2937.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2941 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2941.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2937);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2941.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2939);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2940 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2941);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2940);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2942 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2942 == null){
                                    INR2942 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2942.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2942.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2942);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2944 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2944.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2945 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2944);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2945 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2945)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2943 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2944 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2943.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2943);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2943.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2947 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2947.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2943);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2947.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2945);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2946 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2947);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2946);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2948 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2948 == null){
                                    INR2948 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2948.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2948.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2948);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2950 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2950.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2951 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2950);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2951 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2951)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2949 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap2950 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2949.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2949);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2949.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2953 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2953.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext2949);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2953.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2951);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2952 = instancObjectFactory.createReplacementCost(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2953);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2952);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2954 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2954 == null){
                                    INR2954 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2954.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2954.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2954);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2956 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2956.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2957 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2956);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2957 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2957)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2955 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap2956 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2955.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2955);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2955.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2959 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2959.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext2955);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2959.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2957);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2958 = instancObjectFactory.createPotentialFutureExposure(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2959);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2958);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2961 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2961.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2962 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2961);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2962 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2962)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2960 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2961 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2960.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2960);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2960.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2964 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2964.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2960);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2964.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2962);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2963 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2964);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2963);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2965 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2965 == null){
                                    INR2965 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2965.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2965.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2965);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2967 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2967.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2968 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2967);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2968 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2968)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2966 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2967 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2966.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2966);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2966.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2970 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2970.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2966);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2970.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2968);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2969 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2970);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2969);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2972 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2972.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2973 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2972);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2973 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2973)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2971 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2972 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2971.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2971);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2971.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2975 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2975.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2971);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2975.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2973);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2974 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2975);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2974);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2977 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2977.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2978 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2977);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2978 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2978)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2976 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2977 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2976.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2976);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2976.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2980 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2980.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2976);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2980.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2978);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2979 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2980);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2979);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2982 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2982.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2983 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2982);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2983 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2983)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2981 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2982 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2981.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2981);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2981.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2985 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2985.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2981);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2985.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2983);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2984 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2985);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2984);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR2986 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR2986 == null){
                                    INR2986 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR2986.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR2986.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR2986);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2988 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2988.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2989 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2988);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2989 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2989)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2987 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap2988 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2987.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2987);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2987.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2991 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2991.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext2987);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2991.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2989);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2990 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2991);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2990);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2993 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2993.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2994 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2993);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2994 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2994)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2992 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2993 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2992.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2992);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2992.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2996 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2996.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2992);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2996.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2994);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2995 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType2996);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement2995);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2998 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2998.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2999 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2998);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2999 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2999)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2997 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap2998 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2997.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2997);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2997.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3001 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3001.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext2997);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3001.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue2999);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3000 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3001);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3000);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3003 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3003.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3004 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3003);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3004 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3004)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3002 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3003 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3002.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3002);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3002.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3006 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3006.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3002);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3006.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3004);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3005 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3006);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3005);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3007 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3007 == null){
                                    INR3007 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3007.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3007.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3007);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3009 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3009.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3010 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3009);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3010 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3010)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3008 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3009 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3008.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3008);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3008.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3012 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3012.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3008);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3012.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3010);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3011 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3012);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3011);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3014 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3014.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3015 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3014);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3015 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3015)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3013 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3014 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3013.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3013);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3013.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3017 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3017.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3013);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3017.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3015);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3016 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3017);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3016);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3019 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3019.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3020 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3019);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3020 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3020)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3018 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3019 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3018.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3018);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3018.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3022 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3022.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3018);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3022.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3020);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3021 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3022);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3021);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3024 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3024.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3025 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3024);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3025 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3025)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3023 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3024 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3023.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3023);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3023.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3027 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3027.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3023);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3027.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3025);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3026 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3027);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3026);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3028 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3028 == null){
                                    INR3028 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3028.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3028.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3028);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3030 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3030.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3031 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3030);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3031 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3031)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3029 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3030 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3029.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3029);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3029.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3033 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3033.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3029);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3033.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3031);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3032 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3033);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3032);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3035 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3035.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3036 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3035);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3036 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3036)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3034 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3035 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3034.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3034);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3034.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3038 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3038.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3034);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3038.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3036);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3037 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3038);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3037);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3040 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3040.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3041 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3040);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3041 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3041)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3039 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3040 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3039.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3039);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3039.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3043 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3043.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3039);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3043.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3041);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3042 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3043);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3042);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3045 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3045.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3046 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3045);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3046 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3046)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3044 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3045 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3044.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3044);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3044.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3048 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3048.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3044);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3048.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3046);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3047 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3048);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3047);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3049 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3049 == null){
                                    INR3049 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3049.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3049.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3049);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3051 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3051.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3052 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3051);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3052 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3052)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3050 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3051 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3050.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3050);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3050.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3054 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3054.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3050);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3054.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3052);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3053 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3054);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3053);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3056 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3056.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3057 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3056);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3057 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3057)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3055 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3056 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3055.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3055);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3055.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3059 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3059.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3055);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3059.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3057);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3058 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3059);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3058);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3061 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3061.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3062 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3061);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3062 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3062)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3060 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3061 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3060.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3060);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3060.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3064 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3064.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3060);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3064.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3062);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3063 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3064);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3063);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3066 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3066.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3067 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3066);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3067 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3067)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3065 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3066 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3065.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3065);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3065.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3069 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3069.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3065);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3069.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3067);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3068 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3069);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3068);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3070 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3070 == null){
                                    INR3070 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3070.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3070.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3070);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3072 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3072.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3073 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3072);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3073 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3073)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3071 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3072 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3071.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3071);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3071.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3075 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3075.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3071);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3075.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3073);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3074 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3075);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3074);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3077 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3077.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3078 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3077);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3078 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3078)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3076 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3077 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3076.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3076);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3076.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3080 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3080.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3076);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3080.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3078);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3079 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3080);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3079);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3082 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3082.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3083 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3082);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3083 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3083)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3081 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3082 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3081.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3081);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3081.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3085 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3085.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3081);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3085.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3083);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3084 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3085);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3084);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3087 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3087.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3088 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3087);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3088 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3088)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3086 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3087 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3086.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3086);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3086.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3090 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3090.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3086);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3090.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3088);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3089 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3090);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3089);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3091 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3091 == null){
                                    INR3091 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3091.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3091.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3091);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3093 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3093.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3094 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3093);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3094 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3094)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3092 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3093 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3092.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3092);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3092.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3096 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3096.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3092);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3096.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3094);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3095 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3096);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3095);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3098 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3098.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3099 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3098);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3099 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3099)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3097 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3098 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3097.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3097);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3097.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3101 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3101.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3097);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3101.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3099);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3100 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3101);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3100);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3103 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3103.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3104 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3103);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3104 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3104)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3102 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3103 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3102.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3102);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3102.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3106 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3106.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3102);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3106.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3104);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3105 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3106);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3105);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3108 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3108.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3109 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3108);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3109 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3109)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3107 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3108 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3107.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3107);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3107.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3111 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3111.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3107);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3111.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3109);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3110 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3111);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3110);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3113 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3113.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3114 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3113);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3114 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3114)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3112 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3113 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3112.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3112);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3112.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3116 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3116.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3112);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3116.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3114);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3115 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3116);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3115);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3117 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3117 == null){
                                    INR3117 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3117.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3117.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3117);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap3119 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap3119.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3120 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap3119);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3120 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3120)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3118 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap3119 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3118.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3118);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3118.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3122 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3122.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3118);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3122.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3120);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3121 = instancObjectFactory.createReplacementCost(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3122);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3121);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3124 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3124.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3125 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3124);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3125 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3125)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3123 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3124 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3123.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3123);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3123.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3127 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3127.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3123);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3127.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3125);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3126 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3127);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3126);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3129 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3129.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3130 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3129);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3130 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3130)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3128 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3129 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3128.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3128);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3128.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3132 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3132.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3128);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3132.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3130);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3131 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3132);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3131);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3134 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3134.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3135 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3134);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3135 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3135)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3133 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3134 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3133.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3133);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3133.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3137 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3137.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3133);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3137.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3135);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3136 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3137);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3136);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3138 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3138 == null){
                                    INR3138 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3138.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3138.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3138);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap3140 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap3140.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3141 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap3140);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3141 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3141)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3139 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap3140 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3139.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3139);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3139.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3143 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3143.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3139);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3143.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3141);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3142 = instancObjectFactory.createReplacementCost(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3143);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3142);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3145 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3145.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3146 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3145);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3146 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3146)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3144 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3145 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3144.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3144);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3144.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3148 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3148.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3144);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3148.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3146);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3147 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3148);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3147);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3150 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3150.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3151 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3150);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3151 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3151)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3149 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3150 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3149.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3149);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3149.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3153 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3153.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3149);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3153.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3151);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3152 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3153);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3152);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3155 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3155.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3156 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3155);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3156 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3156)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3154 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3155 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3154.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3154);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3154.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3158 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3158.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3154);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3158.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3156);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3157 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3158);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3157);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3159 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3159 == null){
                                    INR3159 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3159.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3159.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3159);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap3161 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap3161.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3162 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap3161);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3162 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3162)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3160 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap3161 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3160.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3160);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3160.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3164 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3164.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3160);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3164.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3162);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3163 = instancObjectFactory.createReplacementCost(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3164);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3163);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3166 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3166.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3167 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3166);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3167 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3167)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3165 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3166 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3165.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3165);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3165.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3169 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3169.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3165);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3169.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3167);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3168 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3169);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3168);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3171 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3171.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3172 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3171);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3172 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3172)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3170 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3171 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3170.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3170);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3170.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3174 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3174.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3170);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3174.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3172);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3173 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3174);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3173);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3176 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3176.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3177 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3176);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3177 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3177)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3175 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3176 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3175.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3175);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3175.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3179 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3179.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3175);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3179.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3177);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3178 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3179);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3178);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3180 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3180 == null){
                                    INR3180 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3180.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3180.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3180);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap3182 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap3182.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3183 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap3182);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3183 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3183)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3181 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap3182 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3181.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3181);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3181.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3185 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3185.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3181);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3185.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3183);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3184 = instancObjectFactory.createReplacementCost(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3185);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3184);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3187 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3187.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3188 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3187);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3188 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3188)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3186 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3187 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3186.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3186);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3186.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3190 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3190.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3186);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3190.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3188);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3189 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3190);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3189);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3192 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3192.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3193 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3192);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3193 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3193)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3191 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3192 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3191.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3191);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3191.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3195 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3195.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3191);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3195.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3193);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3194 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3195);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3194);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3197 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3197.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3198 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3197);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3198 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3198)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3196 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3197 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3196.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3196);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3196.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3200 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3200.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3196);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3200.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3198);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3199 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3200);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3199);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3202 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3202.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3203 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3202);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3203 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3203)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3201 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3202 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3201.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3201);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3201.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3205 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3205.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3201);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3205.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3203);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3204 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3205);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3204);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3206 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3206 == null){
                                    INR3206 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3206.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3206.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3206);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap3208 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap3208.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3209 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap3208);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3209 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3209)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext3207 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap3208 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext3207.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext3207);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext3207.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3211 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3211.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext3207);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3211.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3209);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3210 = instancObjectFactory.createPotentialFutureExposure(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3211);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3210);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3213 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3213.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3214 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3213);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3214 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3214)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3212 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3213 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3212.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3212);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3212.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3216 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3216.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3212);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3216.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3214);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3215 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3216);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3215);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3218 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3218.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3219 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3218);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3219 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3219)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3217 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3218 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3217.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3217);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3217.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3221 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3221.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3217);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3221.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3219);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3220 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3221);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3220);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3223 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3223.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3224 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3223);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3224 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3224)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3222 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3223 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3222.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3222);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3222.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3226 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3226.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3222);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3226.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3224);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3225 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3226);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3225);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3228 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3228.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3229 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3228);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3229 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3229)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3227 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3228 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3227.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3227);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3227.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3231 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3231.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3227);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3231.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3229);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3230 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3231);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3230);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3232 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3232 == null){
                                    INR3232 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3232.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3232.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3232);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - ExposureAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisMap3234 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisMap3234.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3235 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisMap3234);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3235 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3235)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisContext3233 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisMap3234 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisContext3233.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisContext3233);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisContext3233.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3237 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3237.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisContext3233);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3237.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3235);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3236 = instancObjectFactory.createExposureAmount(explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3237);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3236);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                        // end xbrl report element
                    
                        
                            // create unit if not empty
                            
                                
                                Unit INR3238 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3238 == null){
                                    INR3238 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3238.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3238.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3238);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3240 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3240.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3241 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3240);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3241 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3241)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3239 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3240 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3239.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3239);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3239.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3243 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3243.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3239);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3243.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3241);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3242 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3243);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3242);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3244 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3244 == null){
                                    INR3244 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3244.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3244.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3244);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap3246 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap3246.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3247 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap3246);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3247 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3247)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3245 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap3246 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3245.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3245);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3245.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3249 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3249.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3245);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3249.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3247);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3248 = instancObjectFactory.createReplacementCost(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3249);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3248);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3250 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3250 == null){
                                    INR3250 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3250.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3250.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3250);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap3252 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap3252.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3253 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap3252);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3253 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3253)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext3251 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap3252 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext3251.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext3251);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext3251.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3255 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3255.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext3251);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3255.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3253);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3254 = instancObjectFactory.createPotentialFutureExposure(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3255);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3254);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3257 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3257.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3258 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3257);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3258 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3258)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3256 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3257 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3256.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3256);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3256.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3260 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3260.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3256);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3260.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3258);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3259 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3260);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3259);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3261 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3261 == null){
                                    INR3261 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3261.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3261.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3261);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3263 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3263.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3264 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3263);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3264 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3264)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3262 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3263 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3262.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3262);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3262.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3266 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3266.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3262);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3266.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3264);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3265 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3266);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3265);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3267 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3267 == null){
                                    INR3267 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3267.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3267.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3267);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap3269 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap3269.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3270 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap3269);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3270 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3270)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3268 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap3269 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3268.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3268);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3268.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3272 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3272.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3268);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3272.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3270);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3271 = instancObjectFactory.createReplacementCost(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3272);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3271);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3273 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3273 == null){
                                    INR3273 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3273.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3273.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3273);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap3275 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap3275.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3276 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap3275);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3276 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3276)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext3274 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap3275 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext3274.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext3274);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext3274.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3278 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3278.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext3274);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3278.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3276);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3277 = instancObjectFactory.createPotentialFutureExposure(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3278);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3277);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3280 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3280.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3281 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3280);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3281 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3281)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3279 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3280 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3279.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3279);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3279.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3283 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3283.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3279);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3283.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3281);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3282 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3283);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3282);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3284 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3284 == null){
                                    INR3284 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3284.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3284.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3284);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3286 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3286.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3287 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3286);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3287 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3287)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3285 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3286 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3285.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3285);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3285.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3289 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3289.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3285);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3289.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3287);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3288 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3289);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3288);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3290 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3290 == null){
                                    INR3290 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3290.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3290.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3290);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap3292 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap3292.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3293 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap3292);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3293 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3293)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3291 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap3292 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3291.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3291);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3291.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3295 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3295.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3291);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3295.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3293);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3294 = instancObjectFactory.createReplacementCost(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3295);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3294);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3296 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3296 == null){
                                    INR3296 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3296.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3296.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3296);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap3298 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap3298.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3299 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap3298);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3299 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3299)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext3297 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap3298 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext3297.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext3297);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext3297.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3301 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3301.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext3297);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3301.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3299);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3300 = instancObjectFactory.createPotentialFutureExposure(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3301);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3300);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3303 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3303.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3304 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3303);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3304 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3304)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3302 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3303 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3302.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3302);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3302.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3306 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3306.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3302);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3306.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3304);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3305 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3306);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3305);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3307 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3307 == null){
                                    INR3307 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3307.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3307.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3307);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3309 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3309.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3310 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3309);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3310 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3310)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3308 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3309 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3308.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3308);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3308.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3312 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3312.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3308);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3312.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3310);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3311 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3312);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3311);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3313 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3313 == null){
                                    INR3313 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3313.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3313.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3313);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap3315 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap3315.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3316 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap3315);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3316 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3316)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3314 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap3315 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3314.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3314);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3314.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3318 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3318.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3314);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3318.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3316);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3317 = instancObjectFactory.createReplacementCost(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3318);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3317);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3319 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3319 == null){
                                    INR3319 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3319.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3319.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3319);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap3321 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap3321.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3322 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap3321);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3322 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3322)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext3320 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap3321 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext3320.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext3320);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext3320.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3324 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3324.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext3320);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3324.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3322);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3323 = instancObjectFactory.createPotentialFutureExposure(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3324);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3323);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3326 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3326.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3327 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3326);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3327 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3327)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3325 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3326 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3325.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3325);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3325.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3329 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3329.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3325);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3329.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3327);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3328 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3329);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3328);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3330 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3330 == null){
                                    INR3330 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3330.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3330.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3330);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3332 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3332.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3333 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3332);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3333 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3333)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3331 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3332 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3331.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3331);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3331.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3335 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3335.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3331);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3335.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3333);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3334 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3335);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3334);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3336 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3336 == null){
                                    INR3336 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3336.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3336.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3336);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap3338 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap3338.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3339 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap3338);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3339 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3339)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3337 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap3338 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3337.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3337);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3337.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3341 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3341.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3337);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3341.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3339);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3340 = instancObjectFactory.createReplacementCost(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3341);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3340);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3342 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3342 == null){
                                    INR3342 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3342.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3342.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3342);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap3344 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap3344.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3345 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap3344);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3345 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3345)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext3343 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap3344 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext3343.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext3343);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext3343.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3347 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3347.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext3343);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3347.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3345);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3346 = instancObjectFactory.createPotentialFutureExposure(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3347);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3346);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3349 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3349.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3350 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3349);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3350 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3350)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3348 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3349 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3348.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3348);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3348.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3352 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3352.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3348);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3352.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3350);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3351 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3352);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3351);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3353 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3353 == null){
                                    INR3353 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3353.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3353.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3353);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3355 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3355.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3356 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3355);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3356 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3356)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3354 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3355 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3354.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3354);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3354.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3358 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3358.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3354);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3358.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3356);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3357 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3358);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3357);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3359 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3359 == null){
                                    INR3359 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3359.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3359.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3359);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap3361 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap3361.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3362 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap3361);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3362 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3362)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3360 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap3361 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3360.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3360);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3360.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3364 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3364.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3360);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3364.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3362);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3363 = instancObjectFactory.createReplacementCost(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3364);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3363);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3365 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3365 == null){
                                    INR3365 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3365.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3365.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3365);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap3367 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap3367.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3368 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap3367);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3368 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3368)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext3366 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap3367 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext3366.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext3366);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext3366.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3370 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3370.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext3366);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3370.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3368);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3369 = instancObjectFactory.createPotentialFutureExposure(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3370);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3369);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3372 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3372.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3373 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3372);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3373 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3373)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3371 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3372 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3371.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3371);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3371.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3375 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3375.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3371);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3375.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3373);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3374 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3375);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3374);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3376 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3376 == null){
                                    INR3376 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3376.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3376.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3376);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3378 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3378.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3379 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3378);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3379 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3379)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3377 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3378 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3377.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3377);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3377.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3381 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3381.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3377);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3381.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3379);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3380 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3381);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3380);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3382 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3382 == null){
                                    INR3382 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3382.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3382.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3382);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap3384 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap3384.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3385 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap3384);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3385 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3385)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3383 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap3384 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3383.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3383);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3383.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3387 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3387.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3383);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3387.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3385);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3386 = instancObjectFactory.createReplacementCost(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3387);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3386);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3388 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3388 == null){
                                    INR3388 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3388.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3388.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3388);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap3390 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap3390.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3391 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap3390);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3391 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3391)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext3389 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap3390 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext3389.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext3389);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext3389.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3393 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3393.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext3389);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3393.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3391);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3392 = instancObjectFactory.createPotentialFutureExposure(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3393);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3392);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3395 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3395.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3396 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3395);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3396 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3396)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3394 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3395 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3394.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3394);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3394.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3398 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3398.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3394);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3398.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3396);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3397 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3398);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3397);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3399 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3399 == null){
                                    INR3399 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3399.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3399.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3399);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3401 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3401.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3402 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3401);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3402 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3402)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3400 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3401 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3400.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3400);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3400.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3404 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3404.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3400);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3404.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3402);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3403 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3404);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3403);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3405 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3405 == null){
                                    INR3405 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3405.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3405.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3405);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap3407 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap3407.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3408 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap3407);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3408 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3408)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3406 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap3407 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3406.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3406);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3406.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3410 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3410.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3406);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3410.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3408);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3409 = instancObjectFactory.createReplacementCost(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3410);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3409);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3411 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3411 == null){
                                    INR3411 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3411.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3411.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3411);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap3413 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap3413.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3414 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap3413);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3414 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3414)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext3412 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap3413 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext3412.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext3412);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext3412.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3416 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3416.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext3412);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3416.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3414);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3415 = instancObjectFactory.createPotentialFutureExposure(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3416);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3415);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3418 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3418.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3419 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3418);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3419 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3419)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3417 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3418 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3417.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3417);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3417.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3421 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3421.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3417);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3421.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3419);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3420 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3421);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3420);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3422 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3422 == null){
                                    INR3422 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3422.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3422.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3422);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3424 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3424.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3425 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3424);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3425 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3425)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3423 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3424 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3423.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3423);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3423.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3427 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3427.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3423);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3427.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3425);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3426 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3427);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3426);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3428 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3428 == null){
                                    INR3428 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3428.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3428.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3428);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap3430 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap3430.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3431 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap3430);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3431 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3431)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3429 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap3430 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3429.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3429);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3429.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3433 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3433.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3429);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3433.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3431);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3432 = instancObjectFactory.createReplacementCost(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3433);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3432);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3434 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3434 == null){
                                    INR3434 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3434.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3434.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3434);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap3436 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap3436.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3437 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap3436);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3437 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3437)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext3435 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap3436 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext3435.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext3435);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext3435.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3439 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3439.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext3435);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3439.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3437);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3438 = instancObjectFactory.createPotentialFutureExposure(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3439);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3438);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3441 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3441.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3442 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3441);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3442 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3442)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3440 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3441 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3440.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3440);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3440.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3444 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3444.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3440);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3444.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3442);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3443 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3444);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3443);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3445 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3445 == null){
                                    INR3445 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3445.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3445.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3445);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3447 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3447.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3448 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3447);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3448 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3448)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3446 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3447 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3446.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3446);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3446.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3450 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3450.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3446);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3450.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3448);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3449 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3450);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3449);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3452 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3452.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3453 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3452);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3453 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3453)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3451 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3452 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3451.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3451);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3451.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3455 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3455.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3451);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3455.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3453);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3454 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3455);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3454);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3457 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3457.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3458 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3457);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3458 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3458)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3456 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3457 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3456.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3456);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3456.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3460 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3460.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3456);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3460.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3458);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3459 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3460);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3459);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3462 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3462.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3463 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3462);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3463 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3463)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3461 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3462 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3461.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3461);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3461.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3465 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3465.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3461);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3465.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3463);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3464 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3465);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3464);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3466 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3466 == null){
                                    INR3466 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3466.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3466.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3466);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3468 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3468.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3469 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3468);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3469 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3469)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3467 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3468 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3467.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3467);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3467.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3471 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3471.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3467);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3471.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3469);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3470 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3471);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3470);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3473 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3473.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3474 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3473);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3474 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3474)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3472 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3473 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3472.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3472);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3472.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3476 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3476.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3472);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3476.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3474);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3475 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3476);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3475);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3478 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3478.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3479 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3478);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3479 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3479)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3477 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3478 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3477.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3477);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3477.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3481 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3481.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3477);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3481.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3479);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3480 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3481);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3480);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3483 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3483.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3484 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3483);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3484 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3484)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3482 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3483 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3482.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3482);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3482.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3486 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3486.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3482);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3486.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3484);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3485 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3486);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3485);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3487 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3487 == null){
                                    INR3487 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3487.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3487.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3487);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3489 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3489.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3490 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3489);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3490 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3490)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3488 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3489 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3488.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3488);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3488.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3492 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3492.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3488);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3492.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3490);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3491 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3492);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3491);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3494 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3494.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3495 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3494);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3495 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3495)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3493 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3494 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3493.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3493);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3493.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3497 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3497.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3493);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3497.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3495);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3496 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3497);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3496);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3499 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3499.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3500 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3499);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3500 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3500)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3498 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3499 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3498.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3498);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3498.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3502 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3502.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3498);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3502.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3500);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3501 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3502);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3501);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3504 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3504.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3505 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3504);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3505 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3505)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3503 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3504 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3503.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3503);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3503.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3507 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3507.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3503);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3507.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3505);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3506 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3507);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3506);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3508 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3508 == null){
                                    INR3508 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3508.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3508.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3508);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3510 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3510.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3511 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3510);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3511 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3511)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3509 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3510 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3509.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3509);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3509.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3513 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3513.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3509);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3513.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3511);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3512 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3513);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3512);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3515 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3515.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3516 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3515);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3516 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3516)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3514 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3515 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3514.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3514);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3514.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3518 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3518.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3514);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3518.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3516);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3517 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3518);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3517);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3520 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3520.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3521 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3520);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3521 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3521)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3519 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3520 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3519.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3519);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3519.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3523 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3523.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3519);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3523.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3521);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3522 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3523);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3522);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3525 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3525.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3526 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3525);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3526 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3526)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3524 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3525 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3524.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3524);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3524.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3528 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3528.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3524);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3528.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3526);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3527 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3528);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3527);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3529 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3529 == null){
                                    INR3529 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3529.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3529.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3529);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3531 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3531.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3532 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3531);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3532 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3532)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3530 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3531 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3530.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3530);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3530.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3534 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3534.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3530);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3534.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3532);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3533 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3534);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3533);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3536 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3536.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3537 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3536);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3537 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3537)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3535 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3536 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3535.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3535);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3535.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3539 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3539.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3535);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3539.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3537);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3538 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3539);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3538);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3541 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3541.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3542 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3541);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3542 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3542)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3540 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3541 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3540.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3540);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3540.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3544 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3544.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3540);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3544.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3542);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3543 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3544);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3543);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3546 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3546.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3547 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3546);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3547 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3547)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3545 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3546 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3545.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3545);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3545.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3549 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3549.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3545);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3549.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3547);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3548 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3549);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3548);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3550 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3550 == null){
                                    INR3550 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3550.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3550.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3550);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3552 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3552.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3553 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3552);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3553 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3553)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3551 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3552 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3551.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3551);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3551.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3555 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3555.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3551);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3555.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3553);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3554 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3555);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3554);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3557 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3557.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3558 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3557);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3558 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3558)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3556 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3557 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3556.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3556);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3556.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3560 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3560.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3556);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3560.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3558);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3559 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3560);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3559);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3562 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3562.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3563 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3562);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3563 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3563)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3561 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3562 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3561.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3561);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3561.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3565 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3565.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3561);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3565.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3563);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3564 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3565);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3564);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3567 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3567.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3568 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3567);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3568 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3568)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3566 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3567 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3566.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3566);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3566.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3570 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3570.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3566);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3570.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3568);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3569 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3570);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3569);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3571 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3571 == null){
                                    INR3571 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3571.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3571.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3571);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3573 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3573.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3574 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3573);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3574 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3574)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3572 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3573 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3572.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3572);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3572.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3576 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3576.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3572);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3576.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3574);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3575 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3576);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3575);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3578 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3578.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3579 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3578);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3579 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3579)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3577 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3578 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3577.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3577);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3577.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3581 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3581.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3577);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3581.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3579);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3580 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3581);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3580);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3583 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3583.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3584 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3583);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3584 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3584)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3582 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3583 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3582.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3582);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3582.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3586 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3586.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3582);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3586.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3584);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3585 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3586);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3585);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3588 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3588.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3589 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3588);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3589 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3589)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3587 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3588 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3587.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3587);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3587.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3591 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3591.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3587);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3591.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3589);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3590 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3591);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3590);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3593 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3593.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3594 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3593);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3594 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3594)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3592 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3593 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3592.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3592);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3592.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3596 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3596.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3592);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3596.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3594);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3595 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3596);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3595);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3597 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3597 == null){
                                    INR3597 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3597.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3597.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3597);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap3599 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap3599.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3600 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap3599);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3600 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3600)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3598 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap3599 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3598.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3598);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3598.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3602 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3602.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3598);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3602.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3600);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3601 = instancObjectFactory.createReplacementCost(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3602);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3601);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3604 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3604.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3605 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3604);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3605 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3605)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3603 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3604 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3603.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3603);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3603.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3607 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3607.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3603);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3607.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3605);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3606 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3607);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3606);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3609 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3609.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3610 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3609);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3610 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3610)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3608 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3609 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3608.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3608);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3608.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3612 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3612.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3608);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3612.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3610);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3611 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3612);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3611);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3614 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3614.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3615 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3614);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3615 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3615)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3613 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3614 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3613.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3613);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3613.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3617 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3617.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3613);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3617.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3615);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3616 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3617);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3616);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3618 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3618 == null){
                                    INR3618 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3618.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3618.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3618);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap3620 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap3620.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3621 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap3620);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3621 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3621)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3619 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap3620 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3619.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3619);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3619.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3623 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3623.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3619);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3623.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3621);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3622 = instancObjectFactory.createReplacementCost(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3623);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3622);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3625 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3625.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3626 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3625);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3626 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3626)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3624 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3625 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3624.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3624);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3624.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3628 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3628.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3624);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3628.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3626);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3627 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3628);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3627);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3630 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3630.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3631 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3630);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3631 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3631)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3629 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3630 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3629.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3629);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3629.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3633 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3633.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3629);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3633.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3631);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3632 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3633);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3632);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3635 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3635.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3636 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3635);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3636 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3636)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3634 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3635 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3634.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3634);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3634.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3638 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3638.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3634);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3638.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3636);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3637 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3638);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3637);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3639 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3639 == null){
                                    INR3639 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3639.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3639.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3639);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap3641 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap3641.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3642 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap3641);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3642 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3642)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3640 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap3641 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3640.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3640);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3640.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3644 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3644.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3640);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3644.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3642);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3643 = instancObjectFactory.createReplacementCost(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3644);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3643);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3646 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3646.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3647 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3646);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3647 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3647)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3645 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3646 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3645.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3645);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3645.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3649 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3649.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3645);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3649.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3647);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3648 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3649);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3648);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3651 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3651.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3652 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3651);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3652 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3652)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3650 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3651 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3650.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3650);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3650.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3654 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3654.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3650);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3654.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3652);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3653 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3654);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3653);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3656 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3656.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3657 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3656);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3657 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3657)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3655 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3656 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3655.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3655);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3655.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3659 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3659.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3655);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3659.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3657);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3658 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3659);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3658);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3660 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3660 == null){
                                    INR3660 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3660.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3660.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3660);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap3662 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap3662.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3663 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap3662);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3663 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3663)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3661 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap3662 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3661.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3661);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3661.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3665 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3665.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3661);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3665.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3663);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3664 = instancObjectFactory.createReplacementCost(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3665);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3664);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3667 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3667.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3668 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3667);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3668 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3668)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3666 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3667 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3666.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3666);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3666.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3670 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3670.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3666);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3670.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3668);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3669 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3670);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3669);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3672 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3672.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3673 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3672);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3673 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3673)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3671 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3672 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3671.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3671);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3671.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3675 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3675.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3671);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3675.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3673);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3674 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3675);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3674);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3677 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3677.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3678 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3677);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3678 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3678)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3676 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3677 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3676.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3676);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3676.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3680 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3680.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3676);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3680.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3678);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3679 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3680);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3679);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3682 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3682.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3683 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3682);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3683 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3683)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3681 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3682 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3681.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3681);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3681.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3685 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3685.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3681);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3685.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3683);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3684 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3685);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3684);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3686 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3686 == null){
                                    INR3686 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3686.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3686.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3686);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap3688 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap3688.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3689 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap3688);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3689 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3689)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext3687 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap3688 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext3687.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext3687);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext3687.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3691 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3691.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext3687);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3691.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3689);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3690 = instancObjectFactory.createPotentialFutureExposure(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3691);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3690);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3693 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3693.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3694 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3693);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3694 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3694)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3692 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3693 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3692.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3692);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3692.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3696 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3696.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3692);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3696.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3694);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3695 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3696);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3695);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3698 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3698.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3699 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3698);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3699 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3699)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3697 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3698 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3697.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3697);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3697.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3701 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3701.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3697);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3701.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3699);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3700 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3701);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3700);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3703 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3703.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3704 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3703);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3704 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3704)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3702 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3703 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3702.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3702);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3702.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3706 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3706.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3702);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3706.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3704);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3705 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3706);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3705);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3708 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3708.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3709 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3708);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3709 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3709)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3707 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3708 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3707.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3707);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3707.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3711 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3711.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3707);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3711.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3709);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3710 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3711);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3710);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3712 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3712 == null){
                                    INR3712 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3712.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3712.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3712);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - ExposureAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisMap3714 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisMap3714.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3715 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisMap3714);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3715 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3715)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisContext3713 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisMap3714 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisContext3713.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisContext3713);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisContext3713.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3717 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3717.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisContext3713);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3717.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3715);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3716 = instancObjectFactory.createExposureAmount(explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3717);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3716);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                        // end xbrl report element
                    
                        
                            // create unit if not empty
                            
                                
                                Unit INR3718 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3718 == null){
                                    INR3718 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3718.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3718.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3718);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3720 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3720.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3721 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3720);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3721 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3721)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3719 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3720 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3719.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3719);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3719.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3723 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3723.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3719);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3723.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3721);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3722 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3723);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3722);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3724 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3724 == null){
                                    INR3724 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3724.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3724.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3724);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap3726 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap3726.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3727 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap3726);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3727 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3727)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3725 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap3726 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3725.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3725);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3725.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3729 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3729.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3725);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3729.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3727);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3728 = instancObjectFactory.createReplacementCost(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3729);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3728);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3730 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3730 == null){
                                    INR3730 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3730.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3730.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3730);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap3732 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap3732.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3733 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap3732);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3733 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3733)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext3731 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap3732 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext3731.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext3731);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext3731.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3735 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3735.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext3731);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3735.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3733);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3734 = instancObjectFactory.createPotentialFutureExposure(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3735);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3734);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3737 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3737.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3738 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3737);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3738 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3738)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3736 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3737 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3736.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3736);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3736.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3740 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3740.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3736);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3740.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3738);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3739 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3740);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3739);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3741 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3741 == null){
                                    INR3741 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3741.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3741.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3741);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3743 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3743.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3744 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3743);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3744 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3744)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3742 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3743 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3742.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3742);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3742.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3746 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3746.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3742);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3746.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3744);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3745 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3746);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3745);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3747 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3747 == null){
                                    INR3747 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3747.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3747.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3747);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap3749 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap3749.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3750 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap3749);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3750 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3750)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3748 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap3749 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3748.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3748);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3748.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3752 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3752.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3748);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3752.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3750);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3751 = instancObjectFactory.createReplacementCost(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3752);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3751);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3753 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3753 == null){
                                    INR3753 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3753.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3753.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3753);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap3755 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap3755.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3756 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap3755);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3756 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3756)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext3754 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap3755 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext3754.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext3754);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext3754.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3758 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3758.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext3754);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3758.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3756);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3757 = instancObjectFactory.createPotentialFutureExposure(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3758);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3757);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3760 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3760.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3761 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3760);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3761 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3761)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3759 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3760 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3759.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3759);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3759.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3763 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3763.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3759);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3763.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3761);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3762 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3763);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3762);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3764 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3764 == null){
                                    INR3764 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3764.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3764.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3764);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3766 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3766.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3767 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3766);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3767 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3767)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3765 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3766 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3765.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3765);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3765.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3769 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3769.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3765);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3769.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3767);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3768 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3769);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3768);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3770 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3770 == null){
                                    INR3770 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3770.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3770.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3770);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap3772 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap3772.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3773 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap3772);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3773 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3773)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3771 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap3772 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3771.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3771);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3771.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3775 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3775.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3771);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3775.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3773);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3774 = instancObjectFactory.createReplacementCost(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3775);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3774);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3776 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3776 == null){
                                    INR3776 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3776.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3776.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3776);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap3778 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap3778.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3779 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap3778);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3779 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3779)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext3777 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap3778 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext3777.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext3777);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext3777.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3781 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3781.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext3777);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3781.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3779);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3780 = instancObjectFactory.createPotentialFutureExposure(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3781);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3780);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3783 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3783.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3784 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3783);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3784 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3784)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3782 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3783 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3782.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3782);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3782.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3786 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3786.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3782);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3786.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3784);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3785 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3786);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3785);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3787 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3787 == null){
                                    INR3787 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3787.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3787.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3787);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3789 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3789.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3790 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3789);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3790 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3790)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3788 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3789 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3788.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3788);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3788.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3792 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3792.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3788);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3792.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3790);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3791 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3792);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3791);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3793 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3793 == null){
                                    INR3793 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3793.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3793.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3793);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap3795 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap3795.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3796 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap3795);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3796 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3796)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3794 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap3795 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3794.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3794);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3794.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3798 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3798.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3794);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3798.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3796);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3797 = instancObjectFactory.createReplacementCost(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3798);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3797);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3799 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3799 == null){
                                    INR3799 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3799.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3799.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3799);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap3801 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap3801.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3802 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap3801);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3802 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3802)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext3800 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap3801 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext3800.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext3800);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext3800.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3804 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3804.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext3800);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3804.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3802);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3803 = instancObjectFactory.createPotentialFutureExposure(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3804);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3803);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3806 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3806.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3807 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3806);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3807 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3807)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3805 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3806 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3805.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3805);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3805.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3809 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3809.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3805);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3809.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3807);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3808 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3809);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3808);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3810 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3810 == null){
                                    INR3810 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3810.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3810.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3810);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3812 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3812.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3813 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3812);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3813 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3813)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3811 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3812 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3811.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3811);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3811.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3815 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3815.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3811);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3815.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3813);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3814 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3815);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3814);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3816 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3816 == null){
                                    INR3816 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3816.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3816.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3816);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap3818 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap3818.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3819 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap3818);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3819 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3819)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3817 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap3818 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3817.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3817);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3817.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3821 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3821.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3817);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3821.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3819);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3820 = instancObjectFactory.createReplacementCost(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3821);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3820);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3822 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3822 == null){
                                    INR3822 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3822.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3822.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3822);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap3824 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap3824.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3825 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap3824);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3825 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3825)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext3823 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap3824 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext3823.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext3823);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext3823.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3827 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3827.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext3823);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3827.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3825);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3826 = instancObjectFactory.createPotentialFutureExposure(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3827);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3826);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3829 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3829.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3830 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3829);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3830 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3830)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3828 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3829 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3828.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3828);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3828.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3832 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3832.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3828);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3832.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3830);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3831 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3832);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3831);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3833 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3833 == null){
                                    INR3833 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3833.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3833.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3833);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3835 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3835.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3836 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3835);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3836 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3836)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3834 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3835 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3834.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3834);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3834.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3838 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3838.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3834);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3838.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3836);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3837 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3838);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3837);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3839 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3839 == null){
                                    INR3839 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3839.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3839.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3839);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap3841 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap3841.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3842 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap3841);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3842 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3842)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3840 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap3841 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3840.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3840);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3840.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3844 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3844.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3840);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3844.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3842);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3843 = instancObjectFactory.createReplacementCost(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3844);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3843);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3845 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3845 == null){
                                    INR3845 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3845.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3845.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3845);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap3847 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap3847.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3848 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap3847);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3848 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3848)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext3846 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap3847 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext3846.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext3846);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext3846.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3850 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3850.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext3846);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3850.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3848);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3849 = instancObjectFactory.createPotentialFutureExposure(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3850);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3849);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3852 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3852.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3853 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3852);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3853 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3853)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3851 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3852 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3851.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3851);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3851.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3855 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3855.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3851);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3855.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3853);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3854 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3855);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3854);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3856 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3856 == null){
                                    INR3856 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3856.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3856.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3856);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3858 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3858.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3859 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3858);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3859 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3859)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3857 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3858 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3857.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3857);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3857.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3861 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3861.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3857);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3861.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3859);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3860 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3861);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3860);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3862 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3862 == null){
                                    INR3862 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3862.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3862.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3862);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap3864 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap3864.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3865 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap3864);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3865 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3865)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3863 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap3864 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3863.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3863);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3863.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3867 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3867.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3863);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3867.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3865);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3866 = instancObjectFactory.createReplacementCost(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3867);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3866);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3868 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3868 == null){
                                    INR3868 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3868.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3868.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3868);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap3870 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap3870.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3871 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap3870);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3871 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3871)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext3869 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap3870 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext3869.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext3869);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext3869.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3873 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3873.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext3869);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3873.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3871);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3872 = instancObjectFactory.createPotentialFutureExposure(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3873);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3872);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3875 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3875.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3876 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3875);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3876 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3876)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3874 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3875 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3874.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3874);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3874.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3878 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3878.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3874);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3878.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3876);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3877 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3878);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3877);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3879 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3879 == null){
                                    INR3879 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3879.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3879.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3879);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3881 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3881.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3882 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3881);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3882 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3882)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3880 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3881 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3880.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3880);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3880.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3884 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3884.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3880);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3884.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3882);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3883 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3884);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3883);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3885 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3885 == null){
                                    INR3885 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3885.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3885.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3885);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap3887 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap3887.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3888 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap3887);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3888 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3888)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3886 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap3887 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3886.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3886);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3886.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3890 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3890.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3886);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3890.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3888);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3889 = instancObjectFactory.createReplacementCost(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3890);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3889);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3891 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3891 == null){
                                    INR3891 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3891.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3891.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3891);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap3893 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap3893.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3894 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap3893);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3894 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3894)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext3892 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap3893 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext3892.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext3892);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext3892.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3896 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3896.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext3892);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3896.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3894);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3895 = instancObjectFactory.createPotentialFutureExposure(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3896);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3895);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3898 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3898.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3899 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3898);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3899 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3899)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3897 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3898 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3897.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3897);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3897.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3901 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3901.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3897);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3901.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3899);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3900 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3901);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3900);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3902 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3902 == null){
                                    INR3902 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3902.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3902.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3902);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3904 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3904.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3905 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3904);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3905 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3905)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3903 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3904 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3903.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3903);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3903.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3907 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3907.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3903);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3907.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3905);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3906 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3907);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3906);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3908 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3908 == null){
                                    INR3908 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3908.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3908.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3908);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap3910 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap3910.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3911 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap3910);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3911 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3911)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3909 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap3910 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3909.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3909);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3909.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3913 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3913.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext3909);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3913.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3911);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3912 = instancObjectFactory.createReplacementCost(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3913);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3912);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3914 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3914 == null){
                                    INR3914 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3914.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3914.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3914);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap3916 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap3916.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3917 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap3916);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3917 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3917)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext3915 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap3916 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext3915.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext3915);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext3915.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3919 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3919.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext3915);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3919.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3917);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3918 = instancObjectFactory.createPotentialFutureExposure(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3919);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3918);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3921 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3921.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3922 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3921);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3922 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3922)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3920 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3921 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3920.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3920);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3920.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3924 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3924.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3920);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3924.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3922);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3923 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3924);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3923);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3925 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3925 == null){
                                    INR3925 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3925.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3925.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3925);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3927 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3927.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3928 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3927);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3928 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3928)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3926 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3927 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3926.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3926);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3926.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3930 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3930.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3926);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3930.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3928);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3929 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3930);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3929);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3932 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3932.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3933 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3932);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3933 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3933)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3931 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3932 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3931.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3931);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3931.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3935 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3935.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3931);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3935.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3933);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3934 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3935);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3934);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3937 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3937.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3938 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3937);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3938 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3938)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3936 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3937 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3936.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3936);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3936.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3940 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3940.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3936);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3940.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3938);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3939 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3940);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3939);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3942 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3942.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3943 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3942);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3943 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3943)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3941 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3942 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3941.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3941);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3941.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3945 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3945.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3941);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3945.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3943);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3944 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3945);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3944);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3946 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3946 == null){
                                    INR3946 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3946.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3946.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3946);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3948 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3948.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3949 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3948);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3949 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3949)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3947 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3948 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3947.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3947);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3947.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3951 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3951.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3947);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3951.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3949);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3950 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3951);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3950);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3953 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3953.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3954 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3953);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3954 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3954)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3952 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3953 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3952.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3952);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3952.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3956 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3956.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3952);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3956.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3954);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3955 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3956);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3955);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3958 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3958.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3959 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3958);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3959 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3959)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3957 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3958 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3957.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3957);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3957.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3961 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3961.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3957);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3961.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3959);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3960 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3961);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3960);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3963 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3963.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3964 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3963);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3964 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3964)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3962 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3963 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3962.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3962);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3962.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3966 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3966.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3962);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3966.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3964);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3965 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3966);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3965);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3967 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3967 == null){
                                    INR3967 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3967.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3967.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3967);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3969 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3969.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3970 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3969);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3970 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3970)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3968 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3969 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3968.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3968);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3968.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3972 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3972.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3968);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3972.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3970);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3971 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3972);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3971);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3974 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3974.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3975 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3974);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3975 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3975)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3973 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3974 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3973.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3973);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3973.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3977 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3977.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3973);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3977.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3975);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3976 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3977);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3976);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3979 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3979.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3980 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3979);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3980 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3980)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3978 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3979 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3978.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3978);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3978.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3982 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3982.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3978);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3982.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3980);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3981 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3982);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3981);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3984 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3984.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3985 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3984);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3985 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3985)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3983 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3984 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3983.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3983);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3983.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3987 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3987.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3983);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3987.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3985);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3986 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3987);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3986);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR3988 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR3988 == null){
                                    INR3988 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR3988.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR3988.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR3988);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3990 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3990.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3991 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3990);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3991 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3991)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3989 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap3990 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3989.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3989);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3989.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3993 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3993.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext3989);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3993.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3991);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3992 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3993);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3992);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3995 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3995.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3996 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3995);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3996 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3996)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3994 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap3995 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3994.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3994);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3994.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3998 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3998.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3994);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3998.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue3996);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3997 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType3998);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement3997);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap4000 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap4000.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4001 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap4000);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4001 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4001)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3999 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap4000 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3999.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3999);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3999.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4003 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4003.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext3999);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4003.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4001);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement4002 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4003);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement4002);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap4005 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap4005.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4006 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap4005);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4006 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4006)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4004 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap4005 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4004.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4004);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4004.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4008 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4008.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4004);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4008.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4006);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement4007 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4008);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement4007);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR4009 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR4009 == null){
                                    INR4009 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR4009.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR4009.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR4009);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap4011 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap4011.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4012 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap4011);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4012 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4012)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext4010 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap4011 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext4010.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext4010);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext4010.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4014 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4014.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext4010);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4014.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4012);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement4013 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4014);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement4013);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap4016 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap4016.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4017 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap4016);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4017 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4017)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4015 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap4016 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4015.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4015);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4015.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4019 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4019.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4015);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4019.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4017);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement4018 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4019);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement4018);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap4021 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap4021.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4022 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap4021);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4022 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4022)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4020 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap4021 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4020.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4020);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4020.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4024 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4024.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4020);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4024.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4022);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement4023 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4024);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement4023);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap4026 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap4026.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4027 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap4026);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4027 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4027)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4025 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap4026 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4025.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4025);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4025.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4029 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4029.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4025);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4029.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4027);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement4028 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4029);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement4028);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR4030 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR4030 == null){
                                    INR4030 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR4030.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR4030.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR4030);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap4032 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap4032.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4033 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap4032);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4033 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4033)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext4031 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap4032 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext4031.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext4031);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext4031.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4035 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4035.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext4031);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4035.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4033);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement4034 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4035);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement4034);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap4037 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap4037.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4038 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap4037);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4038 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4038)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4036 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap4037 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4036.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4036);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4036.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4040 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4040.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4036);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4040.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4038);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement4039 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4040);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement4039);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap4042 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap4042.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4043 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap4042);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4043 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4043)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4041 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap4042 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4041.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4041);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4041.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4045 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4045.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4041);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4045.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4043);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement4044 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4045);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement4044);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap4047 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap4047.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4048 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap4047);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4048 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4048)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4046 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap4047 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4046.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4046);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4046.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4050 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4050.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4046);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4050.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4048);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement4049 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4050);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement4049);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR4051 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR4051 == null){
                                    INR4051 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR4051.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR4051.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR4051);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - NotionalPrincipalAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap4053 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap4053.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4054 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap4053);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4054 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4054)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext4052 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisMap4053 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext4052.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext4052);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext4052.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4056 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4056.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisContext4052);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4056.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4054);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement4055 = instancObjectFactory.createNotionalPrincipalAmount(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4056);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement4055);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap4058 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap4058.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4059 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap4058);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4059 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4059)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4057 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap4058 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4057.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4057);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4057.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4061 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4061.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4057);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4061.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4059);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement4060 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4061);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement4060);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap4063 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap4063.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4064 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap4063);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4064 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4064)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4062 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap4063 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4062.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4062);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4062.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4066 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4066.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4062);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4066.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4064);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement4065 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4066);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement4065);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap4068 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap4068.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4069 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap4068);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4069 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4069)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4067 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap4068 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4067.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4067);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4067.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4071 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4071.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4067);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4071.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4069);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement4070 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4071);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement4070);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap4073 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap4073.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4074 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap4073);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4074 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4074)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4072 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap4073 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4072.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4072);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4072.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4076 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4076.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4072);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4076.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4074);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement4075 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4076);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement4075);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR4077 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR4077 == null){
                                    INR4077 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR4077.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR4077.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR4077);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap4079 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap4079.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4080 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap4079);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4080 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4080)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext4078 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap4079 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext4078.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext4078);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext4078.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4082 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4082.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext4078);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4082.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4080);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement4081 = instancObjectFactory.createReplacementCost(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4082);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement4081);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap4084 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap4084.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4085 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap4084);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4085 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4085)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4083 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap4084 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4083.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4083);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4083.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4087 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4087.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4083);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4087.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4085);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement4086 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4087);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement4086);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap4089 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap4089.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4090 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap4089);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4090 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4090)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4088 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap4089 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4088.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4088);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4088.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4092 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4092.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4088);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4092.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4090);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement4091 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4092);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement4091);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap4094 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap4094.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4095 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap4094);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4095 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4095)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4093 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap4094 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4093.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4093);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4093.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4097 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4097.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4093);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4097.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4095);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement4096 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4097);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement4096);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR4098 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR4098 == null){
                                    INR4098 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR4098.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR4098.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR4098);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap4100 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap4100.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4101 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap4100);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4101 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4101)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext4099 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap4100 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext4099.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext4099);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext4099.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4103 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4103.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext4099);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4103.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4101);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement4102 = instancObjectFactory.createReplacementCost(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4103);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement4102);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap4105 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap4105.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4106 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap4105);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4106 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4106)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4104 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap4105 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4104.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4104);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4104.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4108 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4108.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4104);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4108.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4106);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement4107 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4108);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement4107);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap4110 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap4110.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4111 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap4110);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4111 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4111)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4109 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap4110 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4109.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4109);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4109.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4113 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4113.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4109);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4113.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4111);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement4112 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4113);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement4112);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap4115 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap4115.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4116 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap4115);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4116 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4116)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4114 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap4115 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4114.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4114);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4114.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4118 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4118.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4114);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4118.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4116);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement4117 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4118);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement4117);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR4119 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR4119 == null){
                                    INR4119 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR4119.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR4119.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR4119);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap4121 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap4121.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4122 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap4121);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4122 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4122)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext4120 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap4121 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext4120.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext4120);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext4120.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4124 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4124.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext4120);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4124.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4122);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement4123 = instancObjectFactory.createReplacementCost(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4124);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement4123);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap4126 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap4126.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4127 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap4126);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4127 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4127)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4125 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap4126 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4125.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4125);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4125.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4129 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4129.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4125);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4129.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4127);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement4128 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4129);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement4128);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap4131 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap4131.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4132 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap4131);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4132 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4132)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4130 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap4131 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4130.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4130);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4130.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4134 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4134.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4130);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4134.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4132);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement4133 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4134);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement4133);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap4136 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap4136.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4137 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap4136);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4137 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4137)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4135 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap4136 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4135.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4135);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4135.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4139 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4139.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4135);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4139.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4137);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement4138 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4139);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement4138);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR4140 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR4140 == null){
                                    INR4140 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR4140.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR4140.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR4140);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - ReplacementCost
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap4142 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap4142.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4143 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap4142);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4143 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4143)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext4141 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisMap4142 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext4141.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext4141);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext4141.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4145 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4145.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisContext4141);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4145.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4143);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement4144 = instancObjectFactory.createReplacementCost(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4145);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ReplacementCostConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement4144);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap4147 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap4147.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4148 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap4147);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4148 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4148)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4146 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap4147 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4146.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4146);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4146.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4150 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4150.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4146);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4150.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4148);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement4149 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4150);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement4149);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap4152 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap4152.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4153 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap4152);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4153 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4153)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4151 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap4152 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4151.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4151);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4151.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4155 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4155.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4151);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4155.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4153);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement4154 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4155);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement4154);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap4157 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap4157.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4158 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap4157);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4158 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4158)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4156 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap4157 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4156.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4156);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4156.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4160 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4160.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4156);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4160.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4158);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement4159 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4160);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement4159);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap4162 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap4162.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4163 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap4162);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4163 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4163)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4161 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap4162 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4161.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4161);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4161.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4165 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4165.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4161);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4165.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4163);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement4164 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4165);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement4164);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR4166 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR4166 == null){
                                    INR4166 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR4166.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR4166.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR4166);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - PotentialFutureExposure
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap4168 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap4168.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4169 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap4168);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4169 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4169)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext4167 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisMap4168 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext4167.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext4167);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext4167.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4171 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4171.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisContext4167);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4171.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4169);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement4170 = instancObjectFactory.createPotentialFutureExposure(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4171);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement4170);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap4173 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap4173.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4174 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap4173);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4174 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4174)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4172 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap4173 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4172.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4172);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4172.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4176 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4176.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4172);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4176.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4174);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement4175 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4176);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement4175);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap4178 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap4178.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4179 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap4178);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4179 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4179)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4177 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap4178 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4177.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4177);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4177.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4181 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4181.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4177);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4181.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4179);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement4180 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4181);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement4180);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap4183 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap4183.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4184 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap4183);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4184 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4184)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4182 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap4183 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4182.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4182);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4182.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4186 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4186.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4182);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4186.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4184);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement4185 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4186);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement4185);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Abstract
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap4188 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap4188.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4189 = DBS06ReportUtil.retrieveValueForElement(field.getAbstract(), explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap4188);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4189 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4189)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4187 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisMap4188 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4187.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4187);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4187.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4191 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4191.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisContext4187);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4191.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4189);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement4190 = instancObjectFactory.createAbstract(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4191);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3AbstractConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement4190);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR4192 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR4192 == null){
                                    INR4192 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR4192.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR4192.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR4192);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout3
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - ExposureAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisMap4194 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisMap4194.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4195 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisMap4194);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4195 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4195)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisContext4193 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisMap4194 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisContext4193.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisContext4193);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisContext4193.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    StringItemType explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4197 = new StringItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4197.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisContext4193);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4197.setValue(explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4195);
                                    
                                    
                                    JAXBElement<StringItemType> explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement4196 = instancObjectFactory.createExposureAmount(explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4197);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout3ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement4196);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                        // end xbrl report element
                    
                    // end loop for explicitmember
                    }

                
                    
                
                // if typemembers exist
                
                
                
                // create variable for subclass DBSLeverageRatioConsolidated_Layout4 if any typeMembers then List or Single
                DBSLeverageRatioConsolidated_Layout4 dBSLeverageRatioConsolidated_Layout4 = mainReportData.getDBSLeverageRatioConsolidated_Layout4();
            
                
                    {
            
                    DBSLeverageRatioConsolidated_Layout4 field = dBSLeverageRatioConsolidated_Layout4;
                    // if explict member is empty
                    
                        // create xbrl report element
                        
                            // start create element for report of DBSLeverageRatioConsolidated_Layout4
                            // create unit if not empty
                            
                                
                                Unit INR4198 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR4198 == null){
                                    INR4198 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR4198.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR4198.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR4198);
                                }
                            
                            // create context for none explict member
                            // TODO: remove once done
                            // - ExposureAmount
                            
                                Map zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap4201 = new HashMap<String, String>();
                                
                                        // put embeddedexplicitmember into map
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap4201.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");
                                    
                                    // retrieve value for element
                                    String zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountValue4200 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap4201);

                                    
                                            Context DBSLeverageRatioConsolidated_Layout4ExposureAmountContext4199 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap4201 );
                                        
                                if(!contextIdentifiers.contains(DBSLeverageRatioConsolidated_Layout4ExposureAmountContext4199.getId())) {
                                    contextElements.add(DBSLeverageRatioConsolidated_Layout4ExposureAmountContext4199);
                                    contextIdentifiers.add(DBSLeverageRatioConsolidated_Layout4ExposureAmountContext4199.getId());
                                }
                                // create element JAXB Element
                    
                                MonetaryItemType exposureAmountValue = new MonetaryItemType();
                                exposureAmountValue.setContextRef(DBSLeverageRatioConsolidated_Layout4ExposureAmountContext4199);
                                
                                exposureAmountValue.setUnitRef(INR4198);
                                exposureAmountValue.setDecimals(CommonFns.getDecimals(zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountValue4200, "100000"));
                                exposureAmountValue.setValue(new BigDecimal(zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountValue4200);
                                
                                
                                JAXBElement<MonetaryItemType> exposureAmountElement = instancObjectFactory.createExposureAmount(exposureAmountValue);
                                bodyElements.add(exposureAmountElement);
                            
                        
                        
                        // end xbrl report element 
                    
                    // end if block for explicitMember is empty
            
                    // loop explicitMember if not empty -- insert taken out code
                    
                    // end loop for explicitmember
                    }

                
                    
                
                // if typemembers exist
                
                
                
                // create variable for subclass DBSLeverageRatioConsolidated_Layout5 if any typeMembers then List or Single
                DBSLeverageRatioConsolidated_Layout5 dBSLeverageRatioConsolidated_Layout5 = mainReportData.getDBSLeverageRatioConsolidated_Layout5();
            
                
                    {
            
                    DBSLeverageRatioConsolidated_Layout5 field = dBSLeverageRatioConsolidated_Layout5;
                    // if explict member is empty
                    
                    // end if block for explicitMember is empty
            
                    // loop explicitMember if not empty -- insert taken out code
                    
                        
                            // create unit if not empty
                            
                                
                                Unit INR4202 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR4202 == null){
                                    INR4202 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR4202.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR4202.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR4202);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout5
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - Tier1Capital
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisMap4204 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisMap4204.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4205 = DBS06ReportUtil.retrieveValueForElement(field.getTier1Capital(), explictMember1DBSLeverageRatioConsolidated_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisMap4204);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4205 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4205)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisContext4203 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisMap4204 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisContext4203.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisContext4203);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisContext4203.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4207 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4207.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisContext4203);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4207.setUnitRef(INR4202);
                                        explictMember1DBSLeverageRatioConsolidated_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4207.setDecimals(CommonFns.getDecimals(explictMember1DBSLeverageRatioConsolidated_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4205, "100000"));
                                        explictMember1DBSLeverageRatioConsolidated_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4207.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4205));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement4206 = instancObjectFactory.createTier1Capital(explictMember1DBSLeverageRatioConsolidated_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4207);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement4206);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit INR4208 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(INR4208 == null){
                                    INR4208 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    INR4208.setId("INR");
                                    QName unitMeasureValue = new QName("iso4217:INR");
                                    INR4208.getMeasure().add(unitMeasureValue);
                                    unitElements.add(INR4208);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout5
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - ExposureAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisMap4210 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisMap4210.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                        // put embeddedexplicitmember into map
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisMap4210.put("LeverageRatioExposureAxis", "TotalExposureMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4211 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), explictMember1DBSLeverageRatioConsolidated_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisMap4210);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4211 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4211)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisContext4209 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisMap4210 );
                                        
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisContext4209.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisContext4209);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisContext4209.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4213 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4213.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisContext4209);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4213.setUnitRef(INR4208);
                                        explictMember1DBSLeverageRatioConsolidated_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4213.setDecimals(CommonFns.getDecimals(explictMember1DBSLeverageRatioConsolidated_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4211, "100000"));
                                        explictMember1DBSLeverageRatioConsolidated_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4213.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4211));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement4212 = instancObjectFactory.createExposureAmount(explictMember1DBSLeverageRatioConsolidated_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4213);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement4212);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            // create unit if not empty
                            
                                
                                Unit pure4214 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                                //unitObj = option.isPresent()? option.get() : null;
                                if(pure4214 == null){
                                    pure4214 = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                                    pure4214.setId("PURE");
                                    QName unitMeasureValue = new QName("xbrli:pure");
                                    pure4214.getMeasure().add(unitMeasureValue);
                                    unitElements.add(pure4214);
                                }
                            
                            // start create element for report of DBSLeverageRatioConsolidated_Layout5
                            // create context for none explict member
                            // TODO: remove once done
                            //ConsolidatedAndSeparateFinancialStatementsAxis - BaselIILeverageRatio
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisMap4216 = new HashMap<String, String>();
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisMap4216.put("ConsolidatedAndSeparateFinancialStatementsAxis", "ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4217 = DBS06ReportUtil.retrieveValueForElement(field.getBaselIILeverageRatio(), explictMember1DBSLeverageRatioConsolidated_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisMap4216);
                            
                                if(explictMember1DBSLeverageRatioConsolidated_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4217 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4217)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisContext4215 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisMap4216 );
                                    
                                    if(!contextIdentifiers.contains(explictMember1DBSLeverageRatioConsolidated_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisContext4215.getId())) {
                                        contextElements.add(explictMember1DBSLeverageRatioConsolidated_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisContext4215);
                                        contextIdentifiers.add(explictMember1DBSLeverageRatioConsolidated_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisContext4215.getId());
                                    }
                                
                                    // create element JAXB Element
                
                                    PercentItemType explictMember1DBSLeverageRatioConsolidated_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4219 = new PercentItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4219.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisContext4215);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4219.setUnitRef(pure4214);
                                        explictMember1DBSLeverageRatioConsolidated_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4219.setDecimals(CommonFns.getPrecisions(explictMember1DBSLeverageRatioConsolidated_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4217));
                                        explictMember1DBSLeverageRatioConsolidated_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4219.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue4217));
                                    
                                    
                                    JAXBElement<PercentItemType> explictMember1DBSLeverageRatioConsolidated_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement4218 = instancObjectFactory.createBaselIILeverageRatio(explictMember1DBSLeverageRatioConsolidated_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType4219);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement4218);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                        // end xbrl report element
                    
                    // end loop for explicitmember
                    }

                
                    
                
                // if typemembers exist
                
                
                
                // create variable for subclass DBSAuthorisedSignatory_Layout1 if any typeMembers then List or Single
                DBSAuthorisedSignatory_Layout1 dBSAuthorisedSignatory_Layout1 = mainReportData.getDBSAuthorisedSignatory_Layout1();
            
                
                    {
            
                    DBSAuthorisedSignatory_Layout1 field = dBSAuthorisedSignatory_Layout1;
                    // if explict member is empty
                    
                        // create xbrl report element
                        
                            // start create element for report of DBSAuthorisedSignatory_Layout1
                            // create unit if not empty
                            
                            // create context for none explict member
                            // TODO: remove once done
                            // - NameOfSignatory
                            
                                Map zeroDBSAuthorisedSignatory_Layout1NameOfSignatoryMap4222 = new HashMap<String, String>();
                                
                                    // retrieve value for element
                                    String zeroDBSAuthorisedSignatory_Layout1NameOfSignatoryValue4221 = DBS06ReportUtil.retrieveValueForElement(field.getNameOfSignatory(), zeroDBSAuthorisedSignatory_Layout1NameOfSignatoryMap4222);

                                    
                                        Context DBSAuthorisedSignatory_Layout1NameOfSignatoryContext4220 = DBS06ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                if(!contextIdentifiers.contains(DBSAuthorisedSignatory_Layout1NameOfSignatoryContext4220.getId())) {
                                    contextElements.add(DBSAuthorisedSignatory_Layout1NameOfSignatoryContext4220);
                                    contextIdentifiers.add(DBSAuthorisedSignatory_Layout1NameOfSignatoryContext4220.getId());
                                }
                                // create element JAXB Element
                    
                                StringItemType nameOfSignatoryValue = new StringItemType();
                                nameOfSignatoryValue.setContextRef(DBSAuthorisedSignatory_Layout1NameOfSignatoryContext4220);
                                
                                    nameOfSignatoryValue.setValue(zeroDBSAuthorisedSignatory_Layout1NameOfSignatoryValue4221);        
                                    
                                
                                JAXBElement<StringItemType> nameOfSignatoryElement = instancObjectFactory.createNameOfSignatory(nameOfSignatoryValue);
                                bodyElements.add(nameOfSignatoryElement);
                            
                        
                        
                            // start create element for report of DBSAuthorisedSignatory_Layout1
                            // create unit if not empty
                            
                            // create context for none explict member
                            // TODO: remove once done
                            // - DesignationOfSignatory
                            
                                Map zeroDBSAuthorisedSignatory_Layout1DesignationOfSignatoryMap4225 = new HashMap<String, String>();
                                
                                    // retrieve value for element
                                    String zeroDBSAuthorisedSignatory_Layout1DesignationOfSignatoryValue4224 = DBS06ReportUtil.retrieveValueForElement(field.getDesignationOfSignatory(), zeroDBSAuthorisedSignatory_Layout1DesignationOfSignatoryMap4225);

                                    
                                        Context DBSAuthorisedSignatory_Layout1DesignationOfSignatoryContext4223 = DBS06ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                if(!contextIdentifiers.contains(DBSAuthorisedSignatory_Layout1DesignationOfSignatoryContext4223.getId())) {
                                    contextElements.add(DBSAuthorisedSignatory_Layout1DesignationOfSignatoryContext4223);
                                    contextIdentifiers.add(DBSAuthorisedSignatory_Layout1DesignationOfSignatoryContext4223.getId());
                                }
                                // create element JAXB Element
                    
                                StringItemType designationOfSignatoryValue = new StringItemType();
                                designationOfSignatoryValue.setContextRef(DBSAuthorisedSignatory_Layout1DesignationOfSignatoryContext4223);
                                
                                    designationOfSignatoryValue.setValue(zeroDBSAuthorisedSignatory_Layout1DesignationOfSignatoryValue4224);        
                                    
                                
                                JAXBElement<StringItemType> designationOfSignatoryElement = instancObjectFactory.createDesignationOfSignatory(designationOfSignatoryValue);
                                bodyElements.add(designationOfSignatoryElement);
                            
                        
                        
                            // start create element for report of DBSAuthorisedSignatory_Layout1
                            // create unit if not empty
                            
                            // create context for none explict member
                            // TODO: remove once done
                            // - AuthorisedSignatoryOfficialLandlineNumber
                            
                                Map zeroDBSAuthorisedSignatory_Layout1AuthorisedSignatoryOfficialLandlineNumberMap4228 = new HashMap<String, String>();
                                
                                    // retrieve value for element
                                    String zeroDBSAuthorisedSignatory_Layout1AuthorisedSignatoryOfficialLandlineNumberValue4227 = DBS06ReportUtil.retrieveValueForElement(field.getAuthorisedSignatoryOfficialLandlineNumber(), zeroDBSAuthorisedSignatory_Layout1AuthorisedSignatoryOfficialLandlineNumberMap4228);

                                    
                                        Context DBSAuthorisedSignatory_Layout1AuthorisedSignatoryOfficialLandlineNumberContext4226 = DBS06ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                if(!contextIdentifiers.contains(DBSAuthorisedSignatory_Layout1AuthorisedSignatoryOfficialLandlineNumberContext4226.getId())) {
                                    contextElements.add(DBSAuthorisedSignatory_Layout1AuthorisedSignatoryOfficialLandlineNumberContext4226);
                                    contextIdentifiers.add(DBSAuthorisedSignatory_Layout1AuthorisedSignatoryOfficialLandlineNumberContext4226.getId());
                                }
                                // create element JAXB Element
                    
                                IntegerItemType authorisedSignatoryOfficialLandlineNumberValue = new IntegerItemType();
                                authorisedSignatoryOfficialLandlineNumberValue.setContextRef(DBSAuthorisedSignatory_Layout1AuthorisedSignatoryOfficialLandlineNumberContext4226);
                                
                                authorisedSignatoryOfficialLandlineNumberValue.setUnitRef();
                                authorisedSignatoryOfficialLandlineNumberValue.setDecimals("INF");
                                authorisedSignatoryOfficialLandlineNumberValue.setValue(new BigInteger(zeroDBSAuthorisedSignatory_Layout1AuthorisedSignatoryOfficialLandlineNumberValue4227));
                                
                                
                                JAXBElement<IntegerItemType> authorisedSignatoryOfficialLandlineNumberElement = instancObjectFactory.createAuthorisedSignatoryOfficialLandlineNumber(authorisedSignatoryOfficialLandlineNumberValue);
                                bodyElements.add(authorisedSignatoryOfficialLandlineNumberElement);
                            
                        
                        
                            // start create element for report of DBSAuthorisedSignatory_Layout1
                            // create unit if not empty
                            
                            // create context for none explict member
                            // TODO: remove once done
                            // - MobileNumberOfAuthorisedSignatory
                            
                                Map zeroDBSAuthorisedSignatory_Layout1MobileNumberOfAuthorisedSignatoryMap4231 = new HashMap<String, String>();
                                
                                    // retrieve value for element
                                    String zeroDBSAuthorisedSignatory_Layout1MobileNumberOfAuthorisedSignatoryValue4230 = DBS06ReportUtil.retrieveValueForElement(field.getMobileNumberOfAuthorisedSignatory(), zeroDBSAuthorisedSignatory_Layout1MobileNumberOfAuthorisedSignatoryMap4231);

                                    
                                        Context DBSAuthorisedSignatory_Layout1MobileNumberOfAuthorisedSignatoryContext4229 = DBS06ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                if(!contextIdentifiers.contains(DBSAuthorisedSignatory_Layout1MobileNumberOfAuthorisedSignatoryContext4229.getId())) {
                                    contextElements.add(DBSAuthorisedSignatory_Layout1MobileNumberOfAuthorisedSignatoryContext4229);
                                    contextIdentifiers.add(DBSAuthorisedSignatory_Layout1MobileNumberOfAuthorisedSignatoryContext4229.getId());
                                }
                                // create element JAXB Element
                    
                                MobileNumber10Digit mobileNumberOfAuthorisedSignatoryValue = new MobileNumber10Digit();
                                mobileNumberOfAuthorisedSignatoryValue.setContextRef(DBSAuthorisedSignatory_Layout1MobileNumberOfAuthorisedSignatoryContext4229);
                                
                                    mobileNumberOfAuthorisedSignatoryValue.setValue(zeroDBSAuthorisedSignatory_Layout1MobileNumberOfAuthorisedSignatoryValue4230);        
                                    
                                
                                JAXBElement<MobileNumber10Digit> mobileNumberOfAuthorisedSignatoryElement = instancObjectFactory.createMobileNumberOfAuthorisedSignatory(mobileNumberOfAuthorisedSignatoryValue);
                                bodyElements.add(mobileNumberOfAuthorisedSignatoryElement);
                            
                        
                        
                            // start create element for report of DBSAuthorisedSignatory_Layout1
                            // create unit if not empty
                            
                            // create context for none explict member
                            // TODO: remove once done
                            // - EMailIDOfAuthorisedReportingOfficial
                            
                                Map zeroDBSAuthorisedSignatory_Layout1EMailIDOfAuthorisedReportingOfficialMap4234 = new HashMap<String, String>();
                                
                                    // retrieve value for element
                                    String zeroDBSAuthorisedSignatory_Layout1EMailIDOfAuthorisedReportingOfficialValue4233 = DBS06ReportUtil.retrieveValueForElement(field.getEMailIDOfAuthorisedReportingOfficial(), zeroDBSAuthorisedSignatory_Layout1EMailIDOfAuthorisedReportingOfficialMap4234);

                                    
                                        Context DBSAuthorisedSignatory_Layout1EMailIDOfAuthorisedReportingOfficialContext4232 = DBS06ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                if(!contextIdentifiers.contains(DBSAuthorisedSignatory_Layout1EMailIDOfAuthorisedReportingOfficialContext4232.getId())) {
                                    contextElements.add(DBSAuthorisedSignatory_Layout1EMailIDOfAuthorisedReportingOfficialContext4232);
                                    contextIdentifiers.add(DBSAuthorisedSignatory_Layout1EMailIDOfAuthorisedReportingOfficialContext4232.getId());
                                }
                                // create element JAXB Element
                    
                                MailAddress eMailIDOfAuthorisedReportingOfficialValue = new MailAddress();
                                eMailIDOfAuthorisedReportingOfficialValue.setContextRef(DBSAuthorisedSignatory_Layout1EMailIDOfAuthorisedReportingOfficialContext4232);
                                
                                    eMailIDOfAuthorisedReportingOfficialValue.setValue(zeroDBSAuthorisedSignatory_Layout1EMailIDOfAuthorisedReportingOfficialValue4233);        
                                    
                                
                                JAXBElement<MailAddress> eMailIDOfAuthorisedReportingOfficialElement = instancObjectFactory.createEMailIDOfAuthorisedReportingOfficial(eMailIDOfAuthorisedReportingOfficialValue);
                                bodyElements.add(eMailIDOfAuthorisedReportingOfficialElement);
                            
                        
                        
                            // start create element for report of DBSAuthorisedSignatory_Layout1
                            // create unit if not empty
                            
                            // create context for none explict member
                            // TODO: remove once done
                            // - Remarks
                            
                                Map zeroDBSAuthorisedSignatory_Layout1RemarksMap4237 = new HashMap<String, String>();
                                
                                    // retrieve value for element
                                    String zeroDBSAuthorisedSignatory_Layout1RemarksValue4236 = DBS06ReportUtil.retrieveValueForElement(field.getRemarks(), zeroDBSAuthorisedSignatory_Layout1RemarksMap4237);

                                    
                                        Context DBSAuthorisedSignatory_Layout1RemarksContext4235 = DBS06ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                if(!contextIdentifiers.contains(DBSAuthorisedSignatory_Layout1RemarksContext4235.getId())) {
                                    contextElements.add(DBSAuthorisedSignatory_Layout1RemarksContext4235);
                                    contextIdentifiers.add(DBSAuthorisedSignatory_Layout1RemarksContext4235.getId());
                                }
                                // create element JAXB Element
                    
                                StringItemType remarksValue = new StringItemType();
                                remarksValue.setContextRef(DBSAuthorisedSignatory_Layout1RemarksContext4235);
                                
                                    remarksValue.setValue(zeroDBSAuthorisedSignatory_Layout1RemarksValue4236);        
                                    
                                
                                JAXBElement<StringItemType> remarksElement = instancObjectFactory.createRemarks(remarksValue);
                                bodyElements.add(remarksElement);
                            
                        
                        
                        // end xbrl report element 
                    
                    // end if block for explicitMember is empty
            
                    // loop explicitMember if not empty -- insert taken out code
                    
                    // end loop for explicitmember
                    }

                
                    
                
                // if typemembers exist
                
                
                
            // end contexts loop
            // add contexts to xbrl
            contextElements.forEach(ce->{
                xbrl.getItemOrTupleOrContext().add(ce);
            });
            unitElements.forEach(u->{
                xbrl.getItemOrTupleOrContext().add(u);
            });
            
            bodyElements.forEach(be->{
                xbrl.getItemOrTupleOrContext().add(be);
            });
            m.marshal(xbrl, writer);
            System.out.println("");
            System.out.println(writer.toString());
            System.out.println("");
            return writer;
        } catch(Exception e){
            e.printStackTrace();
        }
        return null;
    }
}

