package in.armedu.banking.report.rbixbrl.reports.dbs06;



import javax.xml.datatype.DatatypeConstants;
import javax.xml.datatype.DatatypeFactory;
import javax.xml.datatype.XMLGregorianCalendar;
import javax.xml.namespace.QName;
import javax.xml.bind.JAXBContext;
import javax.xml.bind.JAXBElement;
import javax.xml.bind.Marshaller;

import org.xbrl._2003.instance.Context;
import org.xbrl._2003.instance.ContextEntityType;
import org.xbrl._2003.instance.ContextEntityType.Identifier;
import org.xbrl._2006.xbrldi.ExplicitMember;
import org.xbrl._2006.xbrldi.TypedMember;
import org.xbrl._2003.instance.ContextPeriodType;
import org.xbrl._2003.instance.ObjectFactory;
import org.xbrl._2003.instance.Unit;
import org.xbrl._2003.instance.Xbrl;
import org.xbrl._2003.xlink.SimpleType;

// generic import classes
import java.lang.Boolean;
import java.io.StringWriter;
import java.util.ArrayList;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.List;
import java.util.Map;
import java.util.HashMap;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.GregorianCalendar;
import in.armedu.banking.report.rbixbrl.util.DefaultNamespacePrefixMapper;
import lombok.Setter;

// import model class
import in.armedu.banking.report.rbixbrl.model.dbs06.*;
import in.armedu.banking.report.rbixbrl.model.FieldDataValue;
// add xbrl data type and inerface
import in.armedu.banking.report.rbixbrl.reports.XBRLReportIntf;
import in.armedu.banking.report.rbixbrl.util.CommonFns;
import in.armedu.banking.report.rbixbrl.model.ReportData;

// add data type 

                        import org.xbrl._2003.instance.StringItemType;
                        
                        import org.xbrl._2003.instance.DateItemType;
                        
                        import org.rbi.in.xbrl.rbi_type.ReportingScale;
                        
                        import org.rbi.in.xbrl._2012_05_07.in_rbi_rep_types.ReportStatusItemType;
                        
                        import org.xbrl.dtr.type.non_numeric.TextBlockItemType;
                        
                        import org.xbrl._2003.instance.BooleanItemType;
                        
                        import org.xbrl._2003.instance.MonetaryItemType;
                        
                        import org.xbrl.dtr.type.numeric.PercentItemType;
                        

@Setter
public class DBS06Report implements XBRLReportIntf {
       
    
    // logic for main method
    @Override
    public StringWriter generateReport(ReportData reportData){
        JAXBContext jc;
        Marshaller m;
        // TODO should be generated dynamically
        DBS06ReportData mainReportData = (DBS06ReportData) reportData;

        try {
            jc = JAXBContext.newInstance(ObjectFactory.class,
            org.rbi.in.xbrl._2012_05_07.in_rbi_rep_types.ObjectFactory.class,
            org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory.class,
            org.rbi.in.xbrl.rbi_core.ObjectFactory.class,
            org.rbi.in.xbrl.rbi_par.ObjectFactory.class,
            org.rbi.in_rbi_rep_par.ObjectFactory.class,
            org.xbrl._2003.xlink.ObjectFactory.class,
            org.xbrl._2003.instance.ObjectFactory.class,
            org.xbrl._2006.xbrldi.ObjectFactory.class,
            org.xbrl._2003.linkbase.ObjectFactory.class,
            org.xbrl._2005.xbrldt.ObjectFactory.class,
            org.xbrl.dtr.type.non_numeric.ObjectFactory.class,
            org.xbrl.dtr.type.numeric.ObjectFactory.class);

            m = jc.createMarshaller();
            StringWriter writer = new StringWriter();
            Xbrl xbrl = new org.xbrl._2003.instance.ObjectFactory().createXbrl();
            
            m.setProperty(Marshaller.JAXB_ENCODING, "UTF-8");
            m.setProperty(Marshaller.JAXB_FORMATTED_OUTPUT, true);
            m.setProperty("com.sun.xml.bind.namespacePrefixMapper", new DefaultNamespacePrefixMapper());
            org.xbrl._2003.xlink.ObjectFactory xlinkObjectFactory = new org.xbrl._2003.xlink.ObjectFactory();
            SimpleType simpleType = xlinkObjectFactory.createSimpleType();
            simpleType.setType("simple");
            // TODO should be changed to specific xsd related to report dbs06
            simpleType.setHref("in-rbi-dbs06.xsd");
            xbrl.getSchemaRef().add(simpleType);
            xbrl.getOtherAttributes().put(new QName("xml:lang"), "en");
           
            
            // context identifiers and body elements
            List<String> contextIdentifiers = new ArrayList<String>();
            List<Context> contextElements = new ArrayList<Context>();
            List<Object> bodyElements = new ArrayList<Object>();
            List<String> unitIdentifiers = new ArrayList<String>();
            List<Unit> unitElements = new ArrayList<Unit>();
           
            //Unit unitObj = null;
            //DBS06ReportData dBS06ReportData = new DBS06ReportData();
            // print values           
    

            // TODO : create proper context with loop and element
            // initiatilize data class and allow to be set 
            //private DBS06ReportData dBS06ReportData = new DBS06ReportData();
            // retrieve bankcode, startdate, enddate and perioddate
            String bankCode = mainReportData.getBankCode();
            String startDate = mainReportData.getStartDate();
            String endDate = mainReportData.getEndDate();
            String periodDate = mainReportData.getPeriodDate();

             
            
                // create variable for subclass FilingInfo_Layout1 if any typeMembers then List or Single
                FilingInfo_Layout1 filingInfo_Layout1 = mainReportData.getFilingInfo_Layout1();
                // method calling
                
                    filingInfo_Layout1Method(filingInfo_Layout1, contextIdentifiers,  contextElements, bodyElements, unitIdentifiers, unitElements, bankCode, startDate, endDate, periodDate);
                
                
                // if typemembers exist
                
                
                
                // create variable for subclass FilingInfo_Layout2 if any typeMembers then List or Single
                FilingInfo_Layout2 filingInfo_Layout2 = mainReportData.getFilingInfo_Layout2();
                // method calling
                
                    filingInfo_Layout2Method(filingInfo_Layout2, contextIdentifiers,  contextElements, bodyElements, unitIdentifiers, unitElements, bankCode, startDate, endDate, periodDate);
                
                
                // if typemembers exist
                
                
                
                // create variable for subclass DBSLeverageRatioSolo_Layout1 if any typeMembers then List or Single
                DBSLeverageRatioSolo_Layout1 dBSLeverageRatioSolo_Layout1 = mainReportData.getDBSLeverageRatioSolo_Layout1();
                // method calling
                
                    dBSLeverageRatioSolo_Layout1Method(dBSLeverageRatioSolo_Layout1, contextIdentifiers,  contextElements, bodyElements, unitIdentifiers, unitElements, bankCode, startDate, endDate, periodDate);
                
                
                // if typemembers exist
                
                
                
                // create variable for subclass DBSLeverageRatioSolo_Layout2 if any typeMembers then List or Single
                DBSLeverageRatioSolo_Layout2 dBSLeverageRatioSolo_Layout2 = mainReportData.getDBSLeverageRatioSolo_Layout2();
                // method calling
                
                    dBSLeverageRatioSolo_Layout2Method(dBSLeverageRatioSolo_Layout2, contextIdentifiers,  contextElements, bodyElements, unitIdentifiers, unitElements, bankCode, startDate, endDate, periodDate);
                
                
                // if typemembers exist
                
                
                
                // create variable for subclass DBSLeverageRatioSolo_Layout3 if any typeMembers then List or Single
                DBSLeverageRatioSolo_Layout3 dBSLeverageRatioSolo_Layout3 = mainReportData.getDBSLeverageRatioSolo_Layout3();
                // method calling
                
                    dBSLeverageRatioSolo_Layout3Method(dBSLeverageRatioSolo_Layout3, contextIdentifiers,  contextElements, bodyElements, unitIdentifiers, unitElements, bankCode, startDate, endDate, periodDate);
                
                
                // if typemembers exist
                
                
                
                // create variable for subclass DBSLeverageRatioSolo_Layout4 if any typeMembers then List or Single
                DBSLeverageRatioSolo_Layout4 dBSLeverageRatioSolo_Layout4 = mainReportData.getDBSLeverageRatioSolo_Layout4();
                // method calling
                
                    dBSLeverageRatioSolo_Layout4Method(dBSLeverageRatioSolo_Layout4, contextIdentifiers,  contextElements, bodyElements, unitIdentifiers, unitElements, bankCode, startDate, endDate, periodDate);
                
                
                // if typemembers exist
                
                
                
                // create variable for subclass DBSLeverageRatioSolo_Layout5 if any typeMembers then List or Single
                DBSLeverageRatioSolo_Layout5 dBSLeverageRatioSolo_Layout5 = mainReportData.getDBSLeverageRatioSolo_Layout5();
                // method calling
                
                    dBSLeverageRatioSolo_Layout5Method(dBSLeverageRatioSolo_Layout5, contextIdentifiers,  contextElements, bodyElements, unitIdentifiers, unitElements, bankCode, startDate, endDate, periodDate);
                
                
                // if typemembers exist
                
                
                
                // create variable for subclass DBSLeverageRatioConsolidated_Layout1 if any typeMembers then List or Single
                DBSLeverageRatioConsolidated_Layout1 dBSLeverageRatioConsolidated_Layout1 = mainReportData.getDBSLeverageRatioConsolidated_Layout1();
                // method calling
                
                    dBSLeverageRatioConsolidated_Layout1Method(dBSLeverageRatioConsolidated_Layout1, contextIdentifiers,  contextElements, bodyElements, unitIdentifiers, unitElements, bankCode, startDate, endDate, periodDate);
                
                
                // if typemembers exist
                
                
                
                // create variable for subclass DBSLeverageRatioConsolidated_Layout2 if any typeMembers then List or Single
                DBSLeverageRatioConsolidated_Layout2 dBSLeverageRatioConsolidated_Layout2 = mainReportData.getDBSLeverageRatioConsolidated_Layout2();
                // method calling
                
                    dBSLeverageRatioConsolidated_Layout2Method(dBSLeverageRatioConsolidated_Layout2, contextIdentifiers,  contextElements, bodyElements, unitIdentifiers, unitElements, bankCode, startDate, endDate, periodDate);
                
                
                // if typemembers exist
                
                
                
                // create variable for subclass DBSLeverageRatioConsolidated_Layout3 if any typeMembers then List or Single
                DBSLeverageRatioConsolidated_Layout3 dBSLeverageRatioConsolidated_Layout3 = mainReportData.getDBSLeverageRatioConsolidated_Layout3();
                // method calling
                
                    dBSLeverageRatioConsolidated_Layout3Method(dBSLeverageRatioConsolidated_Layout3, contextIdentifiers,  contextElements, bodyElements, unitIdentifiers, unitElements, bankCode, startDate, endDate, periodDate);
                
                
                // if typemembers exist
                
                
                
                // create variable for subclass DBSLeverageRatioConsolidated_Layout4 if any typeMembers then List or Single
                DBSLeverageRatioConsolidated_Layout4 dBSLeverageRatioConsolidated_Layout4 = mainReportData.getDBSLeverageRatioConsolidated_Layout4();
                // method calling
                
                    dBSLeverageRatioConsolidated_Layout4Method(dBSLeverageRatioConsolidated_Layout4, contextIdentifiers,  contextElements, bodyElements, unitIdentifiers, unitElements, bankCode, startDate, endDate, periodDate);
                
                
                // if typemembers exist
                
                
                
                // create variable for subclass DBSLeverageRatioConsolidated_Layout5 if any typeMembers then List or Single
                DBSLeverageRatioConsolidated_Layout5 dBSLeverageRatioConsolidated_Layout5 = mainReportData.getDBSLeverageRatioConsolidated_Layout5();
                // method calling
                
                    dBSLeverageRatioConsolidated_Layout5Method(dBSLeverageRatioConsolidated_Layout5, contextIdentifiers,  contextElements, bodyElements, unitIdentifiers, unitElements, bankCode, startDate, endDate, periodDate);
                
                
                // if typemembers exist
                
                
                
                // create variable for subclass DBSAuthorisedSignatory_Layout1 if any typeMembers then List or Single
                DBSAuthorisedSignatory_Layout1 dBSAuthorisedSignatory_Layout1 = mainReportData.getDBSAuthorisedSignatory_Layout1();
                // method calling
                
                    dBSAuthorisedSignatory_Layout1Method(dBSAuthorisedSignatory_Layout1, contextIdentifiers,  contextElements, bodyElements, unitIdentifiers, unitElements, bankCode, startDate, endDate, periodDate);
                
                
                // if typemembers exist
                
                
                
            // end contexts loop
            // add contexts to xbrl
            contextElements.forEach(ce->{
                xbrl.getItemOrTupleOrContext().add(ce);
            });
            unitElements.forEach(u->{
                xbrl.getItemOrTupleOrContext().add(u);
            });
            
            bodyElements.forEach(be->{
                xbrl.getItemOrTupleOrContext().add(be);
            });
            m.marshal(xbrl, writer);
            System.out.println("");
            System.out.println(writer.toString());
            System.out.println("");
            return writer;
        } catch(Exception e){
            e.printStackTrace();
        }
        return null;
    }






    // logic to generate method
             
            
                // create variable for subclass FilingInfo_Layout1 if any typeMembers then List or Single
                //FilingInfo_Layout1 filingInfo_Layout1 = mainReportData.getFilingInfo_Layout1();
                
                    private String filingInfo_Layout1Method(FilingInfo_Layout1 filingInfo_Layout1, List<String> contextIdentifiers,  List<Context> contextElements, List<Object> bodyElements, List<String> unitIdentifiers, List<Unit> unitElements, String bankCode, String startDateDefault, String endDateDefault, String periodDateDefault)
                
                    {
                        String startDate = startDateDefault;
                        String endDate = endDateDefault;
                        String periodDate = periodDateDefault;
                    FilingInfo_Layout1 field = filingInfo_Layout1;
                    
                    
                        
                        
                            
                            Unit pure1 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure1 = createUnitIfNotExist(pure1, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - ReturnName
                            
                                Map zeroFilingInfo_Layout1ReturnNameMap5 = new HashMap<String, String>();
                                
                                
                                
                                    
                                    String zeroFilingInfo_Layout1ReturnNameValue3 = DBS06ReportUtil.retrieveValueForElement(field.getReturnName(), zeroFilingInfo_Layout1ReturnNameMap5);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroFilingInfo_Layout1ReturnNameFieldDataValue4 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReturnName(), zeroFilingInfo_Layout1ReturnNameMap5, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroFilingInfo_Layout1ReturnNameValue3 = zeroFilingInfo_Layout1ReturnNameFieldDataValue4 == null ? "" : zeroFilingInfo_Layout1ReturnNameFieldDataValue4.getValue();
                                    
                                    if(zeroFilingInfo_Layout1ReturnNameFieldDataValue4 != null ) {
                                        if(!zeroFilingInfo_Layout1ReturnNameFieldDataValue4.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroFilingInfo_Layout1ReturnNameFieldDataValue4.getStartDateValue();
                                        if(!zeroFilingInfo_Layout1ReturnNameFieldDataValue4.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroFilingInfo_Layout1ReturnNameFieldDataValue4.getEndDateValue();
                                        if(!zeroFilingInfo_Layout1ReturnNameFieldDataValue4.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroFilingInfo_Layout1ReturnNameFieldDataValue4.getInstantDateValue();
                                    }

                                    
                                        Context FilingInfo_Layout1ReturnNameContext2 = DBS06ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                
                                if(zeroFilingInfo_Layout1ReturnNameValue3 != null && !"".equals(zeroFilingInfo_Layout1ReturnNameValue3)) {
                                    
                                    addContext(FilingInfo_Layout1ReturnNameContext2, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    StringItemType returnNameValue6 = new StringItemType();
                                    returnNameValue6.setContextRef(FilingInfo_Layout1ReturnNameContext2);
                                    
                                    returnNameValue6.setValue(zeroFilingInfo_Layout1ReturnNameValue3);        
                                    
                                    
                                    JAXBElement<StringItemType> returnNameElement7 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReturnName(returnNameValue6);
                                    bodyElements.add(returnNameElement7);
                                
                            }
                        
                            
                            Unit pure8 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure8 = createUnitIfNotExist(pure8, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - ReturnCode
                            
                                Map zeroFilingInfo_Layout1ReturnCodeMap12 = new HashMap<String, String>();
                                
                                
                                
                                    
                                    String zeroFilingInfo_Layout1ReturnCodeValue10 = DBS06ReportUtil.retrieveValueForElement(field.getReturnCode(), zeroFilingInfo_Layout1ReturnCodeMap12);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroFilingInfo_Layout1ReturnCodeFieldDataValue11 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReturnCode(), zeroFilingInfo_Layout1ReturnCodeMap12, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroFilingInfo_Layout1ReturnCodeValue10 = zeroFilingInfo_Layout1ReturnCodeFieldDataValue11 == null ? "" : zeroFilingInfo_Layout1ReturnCodeFieldDataValue11.getValue();
                                    
                                    if(zeroFilingInfo_Layout1ReturnCodeFieldDataValue11 != null ) {
                                        if(!zeroFilingInfo_Layout1ReturnCodeFieldDataValue11.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroFilingInfo_Layout1ReturnCodeFieldDataValue11.getStartDateValue();
                                        if(!zeroFilingInfo_Layout1ReturnCodeFieldDataValue11.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroFilingInfo_Layout1ReturnCodeFieldDataValue11.getEndDateValue();
                                        if(!zeroFilingInfo_Layout1ReturnCodeFieldDataValue11.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroFilingInfo_Layout1ReturnCodeFieldDataValue11.getInstantDateValue();
                                    }

                                    
                                        Context FilingInfo_Layout1ReturnCodeContext9 = DBS06ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                
                                if(zeroFilingInfo_Layout1ReturnCodeValue10 != null && !"".equals(zeroFilingInfo_Layout1ReturnCodeValue10)) {
                                    
                                    addContext(FilingInfo_Layout1ReturnCodeContext9, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    StringItemType returnCodeValue13 = new StringItemType();
                                    returnCodeValue13.setContextRef(FilingInfo_Layout1ReturnCodeContext9);
                                    
                                    returnCodeValue13.setValue(zeroFilingInfo_Layout1ReturnCodeValue10);        
                                    
                                    
                                    JAXBElement<StringItemType> returnCodeElement14 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReturnCode(returnCodeValue13);
                                    bodyElements.add(returnCodeElement14);
                                
                            }
                        
                            
                            Unit pure15 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure15 = createUnitIfNotExist(pure15, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - BankCode
                            
                                Map zeroFilingInfo_Layout1BankCodeMap19 = new HashMap<String, String>();
                                
                                
                                
                                    
                                    String zeroFilingInfo_Layout1BankCodeValue17 = DBS06ReportUtil.retrieveValueForElement(field.getBankCode(), zeroFilingInfo_Layout1BankCodeMap19);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroFilingInfo_Layout1BankCodeFieldDataValue18 = DBS06ReportUtil.retrieveFieldDataForElement(field.getBankCode(), zeroFilingInfo_Layout1BankCodeMap19, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroFilingInfo_Layout1BankCodeValue17 = zeroFilingInfo_Layout1BankCodeFieldDataValue18 == null ? "" : zeroFilingInfo_Layout1BankCodeFieldDataValue18.getValue();
                                    
                                    if(zeroFilingInfo_Layout1BankCodeFieldDataValue18 != null ) {
                                        if(!zeroFilingInfo_Layout1BankCodeFieldDataValue18.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroFilingInfo_Layout1BankCodeFieldDataValue18.getStartDateValue();
                                        if(!zeroFilingInfo_Layout1BankCodeFieldDataValue18.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroFilingInfo_Layout1BankCodeFieldDataValue18.getEndDateValue();
                                        if(!zeroFilingInfo_Layout1BankCodeFieldDataValue18.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroFilingInfo_Layout1BankCodeFieldDataValue18.getInstantDateValue();
                                    }

                                    
                                    Context FilingInfo_Layout1BankCodeContext16 = DBS06ReportContextUtil.createAsOfContext( bankCode, periodDate  );
                                        
                                    
                                
                                if(zeroFilingInfo_Layout1BankCodeValue17 != null && !"".equals(zeroFilingInfo_Layout1BankCodeValue17)) {
                                    
                                    addContext(FilingInfo_Layout1BankCodeContext16, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    StringItemType bankCodeValue20 = new StringItemType();
                                    bankCodeValue20.setContextRef(FilingInfo_Layout1BankCodeContext16);
                                    
                                    bankCodeValue20.setValue(zeroFilingInfo_Layout1BankCodeValue17);        
                                    
                                    
                                    JAXBElement<StringItemType> bankCodeElement21 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createBankCode(bankCodeValue20);
                                    bodyElements.add(bankCodeElement21);
                                
                            }
                        
                            
                            Unit pure22 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure22 = createUnitIfNotExist(pure22, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - NameOfReportingInstitution
                            
                                Map zeroFilingInfo_Layout1NameOfReportingInstitutionMap26 = new HashMap<String, String>();
                                
                                
                                
                                    
                                    String zeroFilingInfo_Layout1NameOfReportingInstitutionValue24 = DBS06ReportUtil.retrieveValueForElement(field.getNameOfReportingInstitution(), zeroFilingInfo_Layout1NameOfReportingInstitutionMap26);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroFilingInfo_Layout1NameOfReportingInstitutionFieldDataValue25 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNameOfReportingInstitution(), zeroFilingInfo_Layout1NameOfReportingInstitutionMap26, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroFilingInfo_Layout1NameOfReportingInstitutionValue24 = zeroFilingInfo_Layout1NameOfReportingInstitutionFieldDataValue25 == null ? "" : zeroFilingInfo_Layout1NameOfReportingInstitutionFieldDataValue25.getValue();
                                    
                                    if(zeroFilingInfo_Layout1NameOfReportingInstitutionFieldDataValue25 != null ) {
                                        if(!zeroFilingInfo_Layout1NameOfReportingInstitutionFieldDataValue25.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroFilingInfo_Layout1NameOfReportingInstitutionFieldDataValue25.getStartDateValue();
                                        if(!zeroFilingInfo_Layout1NameOfReportingInstitutionFieldDataValue25.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroFilingInfo_Layout1NameOfReportingInstitutionFieldDataValue25.getEndDateValue();
                                        if(!zeroFilingInfo_Layout1NameOfReportingInstitutionFieldDataValue25.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroFilingInfo_Layout1NameOfReportingInstitutionFieldDataValue25.getInstantDateValue();
                                    }

                                    
                                        Context FilingInfo_Layout1NameOfReportingInstitutionContext23 = DBS06ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                
                                if(zeroFilingInfo_Layout1NameOfReportingInstitutionValue24 != null && !"".equals(zeroFilingInfo_Layout1NameOfReportingInstitutionValue24)) {
                                    
                                    addContext(FilingInfo_Layout1NameOfReportingInstitutionContext23, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    StringItemType nameOfReportingInstitutionValue27 = new StringItemType();
                                    nameOfReportingInstitutionValue27.setContextRef(FilingInfo_Layout1NameOfReportingInstitutionContext23);
                                    
                                    nameOfReportingInstitutionValue27.setValue(zeroFilingInfo_Layout1NameOfReportingInstitutionValue24);        
                                    
                                    
                                    JAXBElement<StringItemType> nameOfReportingInstitutionElement28 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNameOfReportingInstitution(nameOfReportingInstitutionValue27);
                                    bodyElements.add(nameOfReportingInstitutionElement28);
                                
                            }
                        
                            
                            Unit pure29 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure29 = createUnitIfNotExist(pure29, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - InstitutionType
                            
                                Map zeroFilingInfo_Layout1InstitutionTypeMap33 = new HashMap<String, String>();
                                
                                
                                
                                    
                                    String zeroFilingInfo_Layout1InstitutionTypeValue31 = DBS06ReportUtil.retrieveValueForElement(field.getInstitutionType(), zeroFilingInfo_Layout1InstitutionTypeMap33);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroFilingInfo_Layout1InstitutionTypeFieldDataValue32 = DBS06ReportUtil.retrieveFieldDataForElement(field.getInstitutionType(), zeroFilingInfo_Layout1InstitutionTypeMap33, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroFilingInfo_Layout1InstitutionTypeValue31 = zeroFilingInfo_Layout1InstitutionTypeFieldDataValue32 == null ? "" : zeroFilingInfo_Layout1InstitutionTypeFieldDataValue32.getValue();
                                    
                                    if(zeroFilingInfo_Layout1InstitutionTypeFieldDataValue32 != null ) {
                                        if(!zeroFilingInfo_Layout1InstitutionTypeFieldDataValue32.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroFilingInfo_Layout1InstitutionTypeFieldDataValue32.getStartDateValue();
                                        if(!zeroFilingInfo_Layout1InstitutionTypeFieldDataValue32.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroFilingInfo_Layout1InstitutionTypeFieldDataValue32.getEndDateValue();
                                        if(!zeroFilingInfo_Layout1InstitutionTypeFieldDataValue32.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroFilingInfo_Layout1InstitutionTypeFieldDataValue32.getInstantDateValue();
                                    }

                                    
                                        Context FilingInfo_Layout1InstitutionTypeContext30 = DBS06ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                
                                if(zeroFilingInfo_Layout1InstitutionTypeValue31 != null && !"".equals(zeroFilingInfo_Layout1InstitutionTypeValue31)) {
                                    
                                    addContext(FilingInfo_Layout1InstitutionTypeContext30, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    StringItemType institutionTypeValue34 = new StringItemType();
                                    institutionTypeValue34.setContextRef(FilingInfo_Layout1InstitutionTypeContext30);
                                    
                                    institutionTypeValue34.setValue(zeroFilingInfo_Layout1InstitutionTypeValue31);        
                                    
                                    
                                    JAXBElement<StringItemType> institutionTypeElement35 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createInstitutionType(institutionTypeValue34);
                                    bodyElements.add(institutionTypeElement35);
                                
                            }
                        
                            
                            Unit pure36 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure36 = createUnitIfNotExist(pure36, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - ReportingFrequency
                            
                                Map zeroFilingInfo_Layout1ReportingFrequencyMap40 = new HashMap<String, String>();
                                
                                
                                
                                    
                                    String zeroFilingInfo_Layout1ReportingFrequencyValue38 = DBS06ReportUtil.retrieveValueForElement(field.getReportingFrequency(), zeroFilingInfo_Layout1ReportingFrequencyMap40);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroFilingInfo_Layout1ReportingFrequencyFieldDataValue39 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReportingFrequency(), zeroFilingInfo_Layout1ReportingFrequencyMap40, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroFilingInfo_Layout1ReportingFrequencyValue38 = zeroFilingInfo_Layout1ReportingFrequencyFieldDataValue39 == null ? "" : zeroFilingInfo_Layout1ReportingFrequencyFieldDataValue39.getValue();
                                    
                                    if(zeroFilingInfo_Layout1ReportingFrequencyFieldDataValue39 != null ) {
                                        if(!zeroFilingInfo_Layout1ReportingFrequencyFieldDataValue39.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroFilingInfo_Layout1ReportingFrequencyFieldDataValue39.getStartDateValue();
                                        if(!zeroFilingInfo_Layout1ReportingFrequencyFieldDataValue39.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroFilingInfo_Layout1ReportingFrequencyFieldDataValue39.getEndDateValue();
                                        if(!zeroFilingInfo_Layout1ReportingFrequencyFieldDataValue39.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroFilingInfo_Layout1ReportingFrequencyFieldDataValue39.getInstantDateValue();
                                    }

                                    
                                        Context FilingInfo_Layout1ReportingFrequencyContext37 = DBS06ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                
                                if(zeroFilingInfo_Layout1ReportingFrequencyValue38 != null && !"".equals(zeroFilingInfo_Layout1ReportingFrequencyValue38)) {
                                    
                                    addContext(FilingInfo_Layout1ReportingFrequencyContext37, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    StringItemType reportingFrequencyValue41 = new StringItemType();
                                    reportingFrequencyValue41.setContextRef(FilingInfo_Layout1ReportingFrequencyContext37);
                                    
                                    reportingFrequencyValue41.setValue(zeroFilingInfo_Layout1ReportingFrequencyValue38);        
                                    
                                    
                                    JAXBElement<StringItemType> reportingFrequencyElement42 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReportingFrequency(reportingFrequencyValue41);
                                    bodyElements.add(reportingFrequencyElement42);
                                
                            }
                        
                            
                            Unit pure43 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure43 = createUnitIfNotExist(pure43, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - ReportingPeriodStartDate
                            
                                Map zeroFilingInfo_Layout1ReportingPeriodStartDateMap47 = new HashMap<String, String>();
                                
                                
                                
                                    
                                    String zeroFilingInfo_Layout1ReportingPeriodStartDateValue45 = DBS06ReportUtil.retrieveValueForElement(field.getReportingPeriodStartDate(), zeroFilingInfo_Layout1ReportingPeriodStartDateMap47);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroFilingInfo_Layout1ReportingPeriodStartDateFieldDataValue46 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReportingPeriodStartDate(), zeroFilingInfo_Layout1ReportingPeriodStartDateMap47, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroFilingInfo_Layout1ReportingPeriodStartDateValue45 = zeroFilingInfo_Layout1ReportingPeriodStartDateFieldDataValue46 == null ? "" : zeroFilingInfo_Layout1ReportingPeriodStartDateFieldDataValue46.getValue();
                                    
                                    if(zeroFilingInfo_Layout1ReportingPeriodStartDateFieldDataValue46 != null ) {
                                        if(!zeroFilingInfo_Layout1ReportingPeriodStartDateFieldDataValue46.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroFilingInfo_Layout1ReportingPeriodStartDateFieldDataValue46.getStartDateValue();
                                        if(!zeroFilingInfo_Layout1ReportingPeriodStartDateFieldDataValue46.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroFilingInfo_Layout1ReportingPeriodStartDateFieldDataValue46.getEndDateValue();
                                        if(!zeroFilingInfo_Layout1ReportingPeriodStartDateFieldDataValue46.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroFilingInfo_Layout1ReportingPeriodStartDateFieldDataValue46.getInstantDateValue();
                                    }

                                    
                                    Context FilingInfo_Layout1ReportingPeriodStartDateContext44 = DBS06ReportContextUtil.createAsOfContext( bankCode, periodDate  );
                                        
                                    
                                
                                if(zeroFilingInfo_Layout1ReportingPeriodStartDateValue45 != null && !"".equals(zeroFilingInfo_Layout1ReportingPeriodStartDateValue45)) {
                                    
                                    addContext(FilingInfo_Layout1ReportingPeriodStartDateContext44, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    DateItemType reportingPeriodStartDateValue48 = new DateItemType();
                                    reportingPeriodStartDateValue48.setContextRef(FilingInfo_Layout1ReportingPeriodStartDateContext44);
                                    
                                    reportingPeriodStartDateValue48.setValue(DBS06ReportContextUtil.toXMLGeo(zeroFilingInfo_Layout1ReportingPeriodStartDateValue45));
                                    
                                    
                                    JAXBElement<DateItemType> reportingPeriodStartDateElement49 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReportingPeriodStartDate(reportingPeriodStartDateValue48);
                                    bodyElements.add(reportingPeriodStartDateElement49);
                                
                            }
                        
                            
                            Unit pure50 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure50 = createUnitIfNotExist(pure50, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - ReportingPeriodEndDate
                            
                                Map zeroFilingInfo_Layout1ReportingPeriodEndDateMap54 = new HashMap<String, String>();
                                
                                
                                
                                    
                                    String zeroFilingInfo_Layout1ReportingPeriodEndDateValue52 = DBS06ReportUtil.retrieveValueForElement(field.getReportingPeriodEndDate(), zeroFilingInfo_Layout1ReportingPeriodEndDateMap54);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroFilingInfo_Layout1ReportingPeriodEndDateFieldDataValue53 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReportingPeriodEndDate(), zeroFilingInfo_Layout1ReportingPeriodEndDateMap54, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroFilingInfo_Layout1ReportingPeriodEndDateValue52 = zeroFilingInfo_Layout1ReportingPeriodEndDateFieldDataValue53 == null ? "" : zeroFilingInfo_Layout1ReportingPeriodEndDateFieldDataValue53.getValue();
                                    
                                    if(zeroFilingInfo_Layout1ReportingPeriodEndDateFieldDataValue53 != null ) {
                                        if(!zeroFilingInfo_Layout1ReportingPeriodEndDateFieldDataValue53.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroFilingInfo_Layout1ReportingPeriodEndDateFieldDataValue53.getStartDateValue();
                                        if(!zeroFilingInfo_Layout1ReportingPeriodEndDateFieldDataValue53.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroFilingInfo_Layout1ReportingPeriodEndDateFieldDataValue53.getEndDateValue();
                                        if(!zeroFilingInfo_Layout1ReportingPeriodEndDateFieldDataValue53.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroFilingInfo_Layout1ReportingPeriodEndDateFieldDataValue53.getInstantDateValue();
                                    }

                                    
                                    Context FilingInfo_Layout1ReportingPeriodEndDateContext51 = DBS06ReportContextUtil.createAsOfContext( bankCode, periodDate  );
                                        
                                    
                                
                                if(zeroFilingInfo_Layout1ReportingPeriodEndDateValue52 != null && !"".equals(zeroFilingInfo_Layout1ReportingPeriodEndDateValue52)) {
                                    
                                    addContext(FilingInfo_Layout1ReportingPeriodEndDateContext51, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    DateItemType reportingPeriodEndDateValue55 = new DateItemType();
                                    reportingPeriodEndDateValue55.setContextRef(FilingInfo_Layout1ReportingPeriodEndDateContext51);
                                    
                                    reportingPeriodEndDateValue55.setValue(DBS06ReportContextUtil.toXMLGeo(zeroFilingInfo_Layout1ReportingPeriodEndDateValue52));
                                    
                                    
                                    JAXBElement<DateItemType> reportingPeriodEndDateElement56 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReportingPeriodEndDate(reportingPeriodEndDateValue55);
                                    bodyElements.add(reportingPeriodEndDateElement56);
                                
                            }
                        
                            
                            Unit pure57 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure57 = createUnitIfNotExist(pure57, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - ReportingCurrency
                            
                                Map zeroFilingInfo_Layout1ReportingCurrencyMap61 = new HashMap<String, String>();
                                
                                
                                
                                    
                                    String zeroFilingInfo_Layout1ReportingCurrencyValue59 = DBS06ReportUtil.retrieveValueForElement(field.getReportingCurrency(), zeroFilingInfo_Layout1ReportingCurrencyMap61);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroFilingInfo_Layout1ReportingCurrencyFieldDataValue60 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReportingCurrency(), zeroFilingInfo_Layout1ReportingCurrencyMap61, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroFilingInfo_Layout1ReportingCurrencyValue59 = zeroFilingInfo_Layout1ReportingCurrencyFieldDataValue60 == null ? "" : zeroFilingInfo_Layout1ReportingCurrencyFieldDataValue60.getValue();
                                    
                                    if(zeroFilingInfo_Layout1ReportingCurrencyFieldDataValue60 != null ) {
                                        if(!zeroFilingInfo_Layout1ReportingCurrencyFieldDataValue60.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroFilingInfo_Layout1ReportingCurrencyFieldDataValue60.getStartDateValue();
                                        if(!zeroFilingInfo_Layout1ReportingCurrencyFieldDataValue60.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroFilingInfo_Layout1ReportingCurrencyFieldDataValue60.getEndDateValue();
                                        if(!zeroFilingInfo_Layout1ReportingCurrencyFieldDataValue60.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroFilingInfo_Layout1ReportingCurrencyFieldDataValue60.getInstantDateValue();
                                    }

                                    
                                        Context FilingInfo_Layout1ReportingCurrencyContext58 = DBS06ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                
                                if(zeroFilingInfo_Layout1ReportingCurrencyValue59 != null && !"".equals(zeroFilingInfo_Layout1ReportingCurrencyValue59)) {
                                    
                                    addContext(FilingInfo_Layout1ReportingCurrencyContext58, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    StringItemType reportingCurrencyValue62 = new StringItemType();
                                    reportingCurrencyValue62.setContextRef(FilingInfo_Layout1ReportingCurrencyContext58);
                                    
                                    reportingCurrencyValue62.setValue(zeroFilingInfo_Layout1ReportingCurrencyValue59);        
                                    
                                    
                                    JAXBElement<StringItemType> reportingCurrencyElement63 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createReportingCurrency(reportingCurrencyValue62);
                                    bodyElements.add(reportingCurrencyElement63);
                                
                            }
                        
                            
                            Unit pure64 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure64 = createUnitIfNotExist(pure64, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - ReportingScale
                            
                                Map zeroFilingInfo_Layout1ReportingScaleMap68 = new HashMap<String, String>();
                                
                                
                                
                                    
                                    String zeroFilingInfo_Layout1ReportingScaleValue66 = DBS06ReportUtil.retrieveValueForElement(field.getReportingScale(), zeroFilingInfo_Layout1ReportingScaleMap68);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroFilingInfo_Layout1ReportingScaleFieldDataValue67 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReportingScale(), zeroFilingInfo_Layout1ReportingScaleMap68, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroFilingInfo_Layout1ReportingScaleValue66 = zeroFilingInfo_Layout1ReportingScaleFieldDataValue67 == null ? "" : zeroFilingInfo_Layout1ReportingScaleFieldDataValue67.getValue();
                                    
                                    if(zeroFilingInfo_Layout1ReportingScaleFieldDataValue67 != null ) {
                                        if(!zeroFilingInfo_Layout1ReportingScaleFieldDataValue67.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroFilingInfo_Layout1ReportingScaleFieldDataValue67.getStartDateValue();
                                        if(!zeroFilingInfo_Layout1ReportingScaleFieldDataValue67.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroFilingInfo_Layout1ReportingScaleFieldDataValue67.getEndDateValue();
                                        if(!zeroFilingInfo_Layout1ReportingScaleFieldDataValue67.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroFilingInfo_Layout1ReportingScaleFieldDataValue67.getInstantDateValue();
                                    }

                                    
                                        Context FilingInfo_Layout1ReportingScaleContext65 = DBS06ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                
                                if(zeroFilingInfo_Layout1ReportingScaleValue66 != null && !"".equals(zeroFilingInfo_Layout1ReportingScaleValue66)) {
                                    
                                    addContext(FilingInfo_Layout1ReportingScaleContext65, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    ReportingScale reportingScaleValue69 = new ReportingScale();
                                    reportingScaleValue69.setContextRef(FilingInfo_Layout1ReportingScaleContext65);
                                    
                                    reportingScaleValue69.setValue(zeroFilingInfo_Layout1ReportingScaleValue66);        
                                    
                                    
                                    JAXBElement<ReportingScale> reportingScaleElement70 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createReportingScale(reportingScaleValue69);
                                    bodyElements.add(reportingScaleElement70);
                                
                            }
                        
                            
                            Unit pure71 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure71 = createUnitIfNotExist(pure71, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - TaxonomyVersion
                            
                                Map zeroFilingInfo_Layout1TaxonomyVersionMap75 = new HashMap<String, String>();
                                
                                
                                
                                    
                                    String zeroFilingInfo_Layout1TaxonomyVersionValue73 = DBS06ReportUtil.retrieveValueForElement(field.getTaxonomyVersion(), zeroFilingInfo_Layout1TaxonomyVersionMap75);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroFilingInfo_Layout1TaxonomyVersionFieldDataValue74 = DBS06ReportUtil.retrieveFieldDataForElement(field.getTaxonomyVersion(), zeroFilingInfo_Layout1TaxonomyVersionMap75, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroFilingInfo_Layout1TaxonomyVersionValue73 = zeroFilingInfo_Layout1TaxonomyVersionFieldDataValue74 == null ? "" : zeroFilingInfo_Layout1TaxonomyVersionFieldDataValue74.getValue();
                                    
                                    if(zeroFilingInfo_Layout1TaxonomyVersionFieldDataValue74 != null ) {
                                        if(!zeroFilingInfo_Layout1TaxonomyVersionFieldDataValue74.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroFilingInfo_Layout1TaxonomyVersionFieldDataValue74.getStartDateValue();
                                        if(!zeroFilingInfo_Layout1TaxonomyVersionFieldDataValue74.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroFilingInfo_Layout1TaxonomyVersionFieldDataValue74.getEndDateValue();
                                        if(!zeroFilingInfo_Layout1TaxonomyVersionFieldDataValue74.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroFilingInfo_Layout1TaxonomyVersionFieldDataValue74.getInstantDateValue();
                                    }

                                    
                                        Context FilingInfo_Layout1TaxonomyVersionContext72 = DBS06ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                
                                if(zeroFilingInfo_Layout1TaxonomyVersionValue73 != null && !"".equals(zeroFilingInfo_Layout1TaxonomyVersionValue73)) {
                                    
                                    addContext(FilingInfo_Layout1TaxonomyVersionContext72, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    StringItemType taxonomyVersionValue76 = new StringItemType();
                                    taxonomyVersionValue76.setContextRef(FilingInfo_Layout1TaxonomyVersionContext72);
                                    
                                    taxonomyVersionValue76.setValue(zeroFilingInfo_Layout1TaxonomyVersionValue73);        
                                    
                                    
                                    JAXBElement<StringItemType> taxonomyVersionElement77 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createTaxonomyVersion(taxonomyVersionValue76);
                                    bodyElements.add(taxonomyVersionElement77);
                                
                            }
                        
                            
                            Unit pure78 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure78 = createUnitIfNotExist(pure78, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - ToolName
                            
                                Map zeroFilingInfo_Layout1ToolNameMap82 = new HashMap<String, String>();
                                
                                
                                
                                    
                                    String zeroFilingInfo_Layout1ToolNameValue80 = DBS06ReportUtil.retrieveValueForElement(field.getToolName(), zeroFilingInfo_Layout1ToolNameMap82);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroFilingInfo_Layout1ToolNameFieldDataValue81 = DBS06ReportUtil.retrieveFieldDataForElement(field.getToolName(), zeroFilingInfo_Layout1ToolNameMap82, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroFilingInfo_Layout1ToolNameValue80 = zeroFilingInfo_Layout1ToolNameFieldDataValue81 == null ? "" : zeroFilingInfo_Layout1ToolNameFieldDataValue81.getValue();
                                    
                                    if(zeroFilingInfo_Layout1ToolNameFieldDataValue81 != null ) {
                                        if(!zeroFilingInfo_Layout1ToolNameFieldDataValue81.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroFilingInfo_Layout1ToolNameFieldDataValue81.getStartDateValue();
                                        if(!zeroFilingInfo_Layout1ToolNameFieldDataValue81.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroFilingInfo_Layout1ToolNameFieldDataValue81.getEndDateValue();
                                        if(!zeroFilingInfo_Layout1ToolNameFieldDataValue81.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroFilingInfo_Layout1ToolNameFieldDataValue81.getInstantDateValue();
                                    }

                                    
                                        Context FilingInfo_Layout1ToolNameContext79 = DBS06ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                
                                if(zeroFilingInfo_Layout1ToolNameValue80 != null && !"".equals(zeroFilingInfo_Layout1ToolNameValue80)) {
                                    
                                    addContext(FilingInfo_Layout1ToolNameContext79, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    StringItemType toolNameValue83 = new StringItemType();
                                    toolNameValue83.setContextRef(FilingInfo_Layout1ToolNameContext79);
                                    
                                    toolNameValue83.setValue(zeroFilingInfo_Layout1ToolNameValue80);        
                                    
                                    
                                    JAXBElement<StringItemType> toolNameElement84 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createToolName(toolNameValue83);
                                    bodyElements.add(toolNameElement84);
                                
                            }
                        
                            
                            Unit pure85 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure85 = createUnitIfNotExist(pure85, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - ToolVersion
                            
                                Map zeroFilingInfo_Layout1ToolVersionMap89 = new HashMap<String, String>();
                                
                                
                                
                                    
                                    String zeroFilingInfo_Layout1ToolVersionValue87 = DBS06ReportUtil.retrieveValueForElement(field.getToolVersion(), zeroFilingInfo_Layout1ToolVersionMap89);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroFilingInfo_Layout1ToolVersionFieldDataValue88 = DBS06ReportUtil.retrieveFieldDataForElement(field.getToolVersion(), zeroFilingInfo_Layout1ToolVersionMap89, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroFilingInfo_Layout1ToolVersionValue87 = zeroFilingInfo_Layout1ToolVersionFieldDataValue88 == null ? "" : zeroFilingInfo_Layout1ToolVersionFieldDataValue88.getValue();
                                    
                                    if(zeroFilingInfo_Layout1ToolVersionFieldDataValue88 != null ) {
                                        if(!zeroFilingInfo_Layout1ToolVersionFieldDataValue88.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroFilingInfo_Layout1ToolVersionFieldDataValue88.getStartDateValue();
                                        if(!zeroFilingInfo_Layout1ToolVersionFieldDataValue88.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroFilingInfo_Layout1ToolVersionFieldDataValue88.getEndDateValue();
                                        if(!zeroFilingInfo_Layout1ToolVersionFieldDataValue88.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroFilingInfo_Layout1ToolVersionFieldDataValue88.getInstantDateValue();
                                    }

                                    
                                        Context FilingInfo_Layout1ToolVersionContext86 = DBS06ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                
                                if(zeroFilingInfo_Layout1ToolVersionValue87 != null && !"".equals(zeroFilingInfo_Layout1ToolVersionValue87)) {
                                    
                                    addContext(FilingInfo_Layout1ToolVersionContext86, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    StringItemType toolVersionValue90 = new StringItemType();
                                    toolVersionValue90.setContextRef(FilingInfo_Layout1ToolVersionContext86);
                                    
                                    toolVersionValue90.setValue(zeroFilingInfo_Layout1ToolVersionValue87);        
                                    
                                    
                                    JAXBElement<StringItemType> toolVersionElement91 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createToolVersion(toolVersionValue90);
                                    bodyElements.add(toolVersionElement91);
                                
                            }
                        
                            
                            Unit pure92 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure92 = createUnitIfNotExist(pure92, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - ReportStatus
                            
                                Map zeroFilingInfo_Layout1ReportStatusMap96 = new HashMap<String, String>();
                                
                                
                                
                                    
                                    String zeroFilingInfo_Layout1ReportStatusValue94 = DBS06ReportUtil.retrieveValueForElement(field.getReportStatus(), zeroFilingInfo_Layout1ReportStatusMap96);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroFilingInfo_Layout1ReportStatusFieldDataValue95 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReportStatus(), zeroFilingInfo_Layout1ReportStatusMap96, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroFilingInfo_Layout1ReportStatusValue94 = zeroFilingInfo_Layout1ReportStatusFieldDataValue95 == null ? "" : zeroFilingInfo_Layout1ReportStatusFieldDataValue95.getValue();
                                    
                                    if(zeroFilingInfo_Layout1ReportStatusFieldDataValue95 != null ) {
                                        if(!zeroFilingInfo_Layout1ReportStatusFieldDataValue95.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroFilingInfo_Layout1ReportStatusFieldDataValue95.getStartDateValue();
                                        if(!zeroFilingInfo_Layout1ReportStatusFieldDataValue95.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroFilingInfo_Layout1ReportStatusFieldDataValue95.getEndDateValue();
                                        if(!zeroFilingInfo_Layout1ReportStatusFieldDataValue95.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroFilingInfo_Layout1ReportStatusFieldDataValue95.getInstantDateValue();
                                    }

                                    
                                        Context FilingInfo_Layout1ReportStatusContext93 = DBS06ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                
                                if(zeroFilingInfo_Layout1ReportStatusValue94 != null && !"".equals(zeroFilingInfo_Layout1ReportStatusValue94)) {
                                    
                                    addContext(FilingInfo_Layout1ReportStatusContext93, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    ReportStatusItemType reportStatusValue97 = new ReportStatusItemType();
                                    reportStatusValue97.setContextRef(FilingInfo_Layout1ReportStatusContext93);
                                    
                                    reportStatusValue97.setValue(zeroFilingInfo_Layout1ReportStatusValue94);        
                                    
                                    
                                    JAXBElement<ReportStatusItemType> reportStatusElement98 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReportStatus(reportStatusValue97);
                                    bodyElements.add(reportStatusElement98);
                                
                            }
                        
                            
                            Unit pure99 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure99 = createUnitIfNotExist(pure99, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - DateOfAudit
                            
                                Map zeroFilingInfo_Layout1DateOfAuditMap103 = new HashMap<String, String>();
                                
                                
                                
                                    
                                    String zeroFilingInfo_Layout1DateOfAuditValue101 = DBS06ReportUtil.retrieveValueForElement(field.getDateOfAudit(), zeroFilingInfo_Layout1DateOfAuditMap103);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroFilingInfo_Layout1DateOfAuditFieldDataValue102 = DBS06ReportUtil.retrieveFieldDataForElement(field.getDateOfAudit(), zeroFilingInfo_Layout1DateOfAuditMap103, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroFilingInfo_Layout1DateOfAuditValue101 = zeroFilingInfo_Layout1DateOfAuditFieldDataValue102 == null ? "" : zeroFilingInfo_Layout1DateOfAuditFieldDataValue102.getValue();
                                    
                                    if(zeroFilingInfo_Layout1DateOfAuditFieldDataValue102 != null ) {
                                        if(!zeroFilingInfo_Layout1DateOfAuditFieldDataValue102.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroFilingInfo_Layout1DateOfAuditFieldDataValue102.getStartDateValue();
                                        if(!zeroFilingInfo_Layout1DateOfAuditFieldDataValue102.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroFilingInfo_Layout1DateOfAuditFieldDataValue102.getEndDateValue();
                                        if(!zeroFilingInfo_Layout1DateOfAuditFieldDataValue102.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroFilingInfo_Layout1DateOfAuditFieldDataValue102.getInstantDateValue();
                                    }

                                    
                                    Context FilingInfo_Layout1DateOfAuditContext100 = DBS06ReportContextUtil.createAsOfContext( bankCode, periodDate  );
                                        
                                    
                                
                                if(zeroFilingInfo_Layout1DateOfAuditValue101 != null && !"".equals(zeroFilingInfo_Layout1DateOfAuditValue101)) {
                                    
                                    addContext(FilingInfo_Layout1DateOfAuditContext100, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    DateItemType dateOfAuditValue104 = new DateItemType();
                                    dateOfAuditValue104.setContextRef(FilingInfo_Layout1DateOfAuditContext100);
                                    
                                    dateOfAuditValue104.setValue(DBS06ReportContextUtil.toXMLGeo(zeroFilingInfo_Layout1DateOfAuditValue101));
                                    
                                    
                                    JAXBElement<DateItemType> dateOfAuditElement105 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createDateOfAudit(dateOfAuditValue104);
                                    bodyElements.add(dateOfAuditElement105);
                                
                            }
                        
                            
                            Unit pure106 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure106 = createUnitIfNotExist(pure106, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - GeneralRemarks
                            
                                Map zeroFilingInfo_Layout1GeneralRemarksMap110 = new HashMap<String, String>();
                                
                                
                                
                                    
                                    String zeroFilingInfo_Layout1GeneralRemarksValue108 = DBS06ReportUtil.retrieveValueForElement(field.getGeneralRemarks(), zeroFilingInfo_Layout1GeneralRemarksMap110);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroFilingInfo_Layout1GeneralRemarksFieldDataValue109 = DBS06ReportUtil.retrieveFieldDataForElement(field.getGeneralRemarks(), zeroFilingInfo_Layout1GeneralRemarksMap110, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroFilingInfo_Layout1GeneralRemarksValue108 = zeroFilingInfo_Layout1GeneralRemarksFieldDataValue109 == null ? "" : zeroFilingInfo_Layout1GeneralRemarksFieldDataValue109.getValue();
                                    
                                    if(zeroFilingInfo_Layout1GeneralRemarksFieldDataValue109 != null ) {
                                        if(!zeroFilingInfo_Layout1GeneralRemarksFieldDataValue109.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroFilingInfo_Layout1GeneralRemarksFieldDataValue109.getStartDateValue();
                                        if(!zeroFilingInfo_Layout1GeneralRemarksFieldDataValue109.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroFilingInfo_Layout1GeneralRemarksFieldDataValue109.getEndDateValue();
                                        if(!zeroFilingInfo_Layout1GeneralRemarksFieldDataValue109.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroFilingInfo_Layout1GeneralRemarksFieldDataValue109.getInstantDateValue();
                                    }

                                    
                                        Context FilingInfo_Layout1GeneralRemarksContext107 = DBS06ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                
                                if(zeroFilingInfo_Layout1GeneralRemarksValue108 != null && !"".equals(zeroFilingInfo_Layout1GeneralRemarksValue108)) {
                                    
                                    addContext(FilingInfo_Layout1GeneralRemarksContext107, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    TextBlockItemType generalRemarksValue111 = new TextBlockItemType();
                                    generalRemarksValue111.setContextRef(FilingInfo_Layout1GeneralRemarksContext107);
                                    
                                    generalRemarksValue111.setValue(zeroFilingInfo_Layout1GeneralRemarksValue108);        
                                    
                                    
                                    JAXBElement<TextBlockItemType> generalRemarksElement112 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createGeneralRemarks(generalRemarksValue111);
                                    bodyElements.add(generalRemarksElement112);
                                
                            }
                        
                        
                    
                    
            
                    
                    
                    
                    return "";
                    }

                
                    
                
                // if typemembers exist
                
                
                
                // create variable for subclass FilingInfo_Layout2 if any typeMembers then List or Single
                //FilingInfo_Layout2 filingInfo_Layout2 = mainReportData.getFilingInfo_Layout2();
                
                    private String filingInfo_Layout2Method(FilingInfo_Layout2 filingInfo_Layout2, List<String> contextIdentifiers,  List<Context> contextElements, List<Object> bodyElements, List<String> unitIdentifiers, List<Unit> unitElements, String bankCode, String startDateDefault, String endDateDefault, String periodDateDefault)
                
                    {
                        String startDate = startDateDefault;
                        String endDate = endDateDefault;
                        String periodDate = periodDateDefault;
                    FilingInfo_Layout2 field = filingInfo_Layout2;
                    
                    
                        
                        
                            
                            Unit pure113 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure113 = createUnitIfNotExist(pure113, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - WhetherBankHasSubsidiaries
                            
                                Map zeroFilingInfo_Layout2WhetherBankHasSubsidiariesMap117 = new HashMap<String, String>();
                                
                                
                                
                                    
                                    String zeroFilingInfo_Layout2WhetherBankHasSubsidiariesValue115 = DBS06ReportUtil.retrieveValueForElement(field.getWhetherBankHasSubsidiaries(), zeroFilingInfo_Layout2WhetherBankHasSubsidiariesMap117);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroFilingInfo_Layout2WhetherBankHasSubsidiariesFieldDataValue116 = DBS06ReportUtil.retrieveFieldDataForElement(field.getWhetherBankHasSubsidiaries(), zeroFilingInfo_Layout2WhetherBankHasSubsidiariesMap117, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroFilingInfo_Layout2WhetherBankHasSubsidiariesValue115 = zeroFilingInfo_Layout2WhetherBankHasSubsidiariesFieldDataValue116 == null ? "" : zeroFilingInfo_Layout2WhetherBankHasSubsidiariesFieldDataValue116.getValue();
                                    
                                    if(zeroFilingInfo_Layout2WhetherBankHasSubsidiariesFieldDataValue116 != null ) {
                                        if(!zeroFilingInfo_Layout2WhetherBankHasSubsidiariesFieldDataValue116.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroFilingInfo_Layout2WhetherBankHasSubsidiariesFieldDataValue116.getStartDateValue();
                                        if(!zeroFilingInfo_Layout2WhetherBankHasSubsidiariesFieldDataValue116.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroFilingInfo_Layout2WhetherBankHasSubsidiariesFieldDataValue116.getEndDateValue();
                                        if(!zeroFilingInfo_Layout2WhetherBankHasSubsidiariesFieldDataValue116.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroFilingInfo_Layout2WhetherBankHasSubsidiariesFieldDataValue116.getInstantDateValue();
                                    }

                                    
                                    Context FilingInfo_Layout2WhetherBankHasSubsidiariesContext114 = DBS06ReportContextUtil.createAsOfContext( bankCode, periodDate  );
                                        
                                    
                                
                                if(zeroFilingInfo_Layout2WhetherBankHasSubsidiariesValue115 != null && !"".equals(zeroFilingInfo_Layout2WhetherBankHasSubsidiariesValue115)) {
                                    
                                    addContext(FilingInfo_Layout2WhetherBankHasSubsidiariesContext114, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    BooleanItemType whetherBankHasSubsidiariesValue118 = new BooleanItemType();
                                    whetherBankHasSubsidiariesValue118.setContextRef(FilingInfo_Layout2WhetherBankHasSubsidiariesContext114);
                                    
                                        whetherBankHasSubsidiariesValue118.setValue(Boolean.getBoolean(zeroFilingInfo_Layout2WhetherBankHasSubsidiariesValue115));
                                    
                                    
                                    JAXBElement<BooleanItemType> whetherBankHasSubsidiariesElement119 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createWhetherBankHasSubsidiaries(whetherBankHasSubsidiariesValue118);
                                    bodyElements.add(whetherBankHasSubsidiariesElement119);
                                
                            }
                        
                        
                    
                    
            
                    
                    
                    
                    return "";
                    }

                
                    
                
                // if typemembers exist
                
                
                
                // create variable for subclass DBSLeverageRatioSolo_Layout1 if any typeMembers then List or Single
                //DBSLeverageRatioSolo_Layout1 dBSLeverageRatioSolo_Layout1 = mainReportData.getDBSLeverageRatioSolo_Layout1();
                
                    private String dBSLeverageRatioSolo_Layout1Method(DBSLeverageRatioSolo_Layout1 dBSLeverageRatioSolo_Layout1, List<String> contextIdentifiers,  List<Context> contextElements, List<Object> bodyElements, List<String> unitIdentifiers, List<Unit> unitElements, String bankCode, String startDateDefault, String endDateDefault, String periodDateDefault)
                
                    {
                        String startDate = startDateDefault;
                        String endDate = endDateDefault;
                        String periodDate = periodDateDefault;
                    DBSLeverageRatioSolo_Layout1 field = dBSLeverageRatioSolo_Layout1;
                    
                    
                    
            
                    
                    
                        
                            
                            
                                
                                Unit INR120 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR120 = createUnitIfNotExist(INR120, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:LeverageRatioExposureAxis - ExposureAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap122 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap122.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:DomesticSovereignsMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap122.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisDomesticSovereignsMemberValue123 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap122);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisDomesticSovereignsMemberFieldDataValue124 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap122, "", "", "xs:date($refPeriodEndDate)" );

                                explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisDomesticSovereignsMemberValue123 = explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisDomesticSovereignsMemberFieldDataValue124 == null ? "" : explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisDomesticSovereignsMemberFieldDataValue124.getValue();
                                    
                                if(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisDomesticSovereignsMemberFieldDataValue124 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisDomesticSovereignsMemberFieldDataValue124.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisDomesticSovereignsMemberFieldDataValue124.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisDomesticSovereignsMemberFieldDataValue124.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisDomesticSovereignsMemberFieldDataValue124.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisDomesticSovereignsMemberFieldDataValue124.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisDomesticSovereignsMemberFieldDataValue124.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisDomesticSovereignsMemberValue123 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisDomesticSovereignsMemberValue123)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext121 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap122 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext121, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisDomesticSovereignsMemberDataType126 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisDomesticSovereignsMemberDataType126.setContextRef(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext121);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisDomesticSovereignsMemberDataType126.setUnitRef(INR120);
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisDomesticSovereignsMemberDataType126.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisDomesticSovereignsMemberDataType126.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisDomesticSovereignsMemberValue123));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisDomesticSovereignsMemberElement125 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisDomesticSovereignsMemberDataType126);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisDomesticSovereignsMemberElement125);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                        
                    
                        
                            
                            
                                
                                Unit INR127 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR127 = createUnitIfNotExist(INR127, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:LeverageRatioExposureAxis - ExposureAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap129 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap129.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:ForeignSovereignsMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap129.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignSovereignsMemberValue130 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap129);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignSovereignsMemberFieldDataValue131 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap129, "", "", "xs:date($refPeriodEndDate)" );

                                explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignSovereignsMemberValue130 = explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignSovereignsMemberFieldDataValue131 == null ? "" : explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignSovereignsMemberFieldDataValue131.getValue();
                                    
                                if(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignSovereignsMemberFieldDataValue131 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignSovereignsMemberFieldDataValue131.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignSovereignsMemberFieldDataValue131.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignSovereignsMemberFieldDataValue131.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignSovereignsMemberFieldDataValue131.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignSovereignsMemberFieldDataValue131.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignSovereignsMemberFieldDataValue131.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignSovereignsMemberValue130 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignSovereignsMemberValue130)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext128 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap129 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext128, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignSovereignsMemberDataType133 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignSovereignsMemberDataType133.setContextRef(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext128);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignSovereignsMemberDataType133.setUnitRef(INR127);
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignSovereignsMemberDataType133.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignSovereignsMemberDataType133.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignSovereignsMemberValue130));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignSovereignsMemberElement132 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignSovereignsMemberDataType133);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignSovereignsMemberElement132);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                        
                    
                        
                            
                            
                                
                                Unit INR134 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR134 = createUnitIfNotExist(INR134, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:LeverageRatioExposureAxis - ExposureAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap136 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap136.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:BanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap136.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberValue137 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap136);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberFieldDataValue138 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap136, "", "", "xs:date($refPeriodEndDate)" );

                                explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberValue137 = explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberFieldDataValue138 == null ? "" : explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberFieldDataValue138.getValue();
                                    
                                if(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberFieldDataValue138 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberFieldDataValue138.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberFieldDataValue138.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberFieldDataValue138.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberFieldDataValue138.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberFieldDataValue138.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberFieldDataValue138.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberValue137 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberValue137)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext135 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap136 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext135, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberDataType140 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberDataType140.setContextRef(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext135);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberDataType140.setUnitRef(INR134);
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberDataType140.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberDataType140.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberValue137));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberElement139 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberDataType140);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberElement139);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                        
                    
                        
                            
                            
                                
                                Unit INR141 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR141 = createUnitIfNotExist(INR141, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:LeverageRatioExposureAxis - ExposureAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap143 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap143.put("rbi-core:LeverageRatioExposureAxis", "in-rbi-rep:ForeignBanksMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap143.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignBanksMemberValue144 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap143);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignBanksMemberFieldDataValue145 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap143, "", "", "xs:date($refPeriodEndDate)" );

                                explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignBanksMemberValue144 = explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignBanksMemberFieldDataValue145 == null ? "" : explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignBanksMemberFieldDataValue145.getValue();
                                    
                                if(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignBanksMemberFieldDataValue145 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignBanksMemberFieldDataValue145.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignBanksMemberFieldDataValue145.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignBanksMemberFieldDataValue145.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignBanksMemberFieldDataValue145.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignBanksMemberFieldDataValue145.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignBanksMemberFieldDataValue145.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignBanksMemberValue144 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignBanksMemberValue144)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext142 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap143 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext142, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignBanksMemberDataType147 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignBanksMemberDataType147.setContextRef(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext142);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignBanksMemberDataType147.setUnitRef(INR141);
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignBanksMemberDataType147.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignBanksMemberDataType147.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignBanksMemberValue144));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignBanksMemberElement146 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignBanksMemberDataType147);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignBanksMemberElement146);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                        
                    
                        
                            
                            
                                
                                Unit INR148 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR148 = createUnitIfNotExist(INR148, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:LeverageRatioExposureAxis - ExposureAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap150 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap150.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:DomesticPublicSectorEntitiesMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap150.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisDomesticPublicSectorEntitiesMemberValue151 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap150);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisDomesticPublicSectorEntitiesMemberFieldDataValue152 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap150, "", "", "xs:date($refPeriodEndDate)" );

                                explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisDomesticPublicSectorEntitiesMemberValue151 = explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisDomesticPublicSectorEntitiesMemberFieldDataValue152 == null ? "" : explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisDomesticPublicSectorEntitiesMemberFieldDataValue152.getValue();
                                    
                                if(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisDomesticPublicSectorEntitiesMemberFieldDataValue152 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisDomesticPublicSectorEntitiesMemberFieldDataValue152.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisDomesticPublicSectorEntitiesMemberFieldDataValue152.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisDomesticPublicSectorEntitiesMemberFieldDataValue152.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisDomesticPublicSectorEntitiesMemberFieldDataValue152.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisDomesticPublicSectorEntitiesMemberFieldDataValue152.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisDomesticPublicSectorEntitiesMemberFieldDataValue152.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisDomesticPublicSectorEntitiesMemberValue151 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisDomesticPublicSectorEntitiesMemberValue151)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext149 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap150 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext149, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisDomesticPublicSectorEntitiesMemberDataType154 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisDomesticPublicSectorEntitiesMemberDataType154.setContextRef(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext149);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisDomesticPublicSectorEntitiesMemberDataType154.setUnitRef(INR148);
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisDomesticPublicSectorEntitiesMemberDataType154.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisDomesticPublicSectorEntitiesMemberDataType154.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisDomesticPublicSectorEntitiesMemberValue151));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisDomesticPublicSectorEntitiesMemberElement153 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisDomesticPublicSectorEntitiesMemberDataType154);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisDomesticPublicSectorEntitiesMemberElement153);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                        
                    
                        
                            
                            
                                
                                Unit INR155 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR155 = createUnitIfNotExist(INR155, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:LeverageRatioExposureAxis - ExposureAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap157 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap157.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:ForeignPublicSectorEntitiesMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap157.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignPublicSectorEntitiesMemberValue158 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap157);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignPublicSectorEntitiesMemberFieldDataValue159 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap157, "", "", "xs:date($refPeriodEndDate)" );

                                explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignPublicSectorEntitiesMemberValue158 = explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignPublicSectorEntitiesMemberFieldDataValue159 == null ? "" : explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignPublicSectorEntitiesMemberFieldDataValue159.getValue();
                                    
                                if(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignPublicSectorEntitiesMemberFieldDataValue159 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignPublicSectorEntitiesMemberFieldDataValue159.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignPublicSectorEntitiesMemberFieldDataValue159.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignPublicSectorEntitiesMemberFieldDataValue159.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignPublicSectorEntitiesMemberFieldDataValue159.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignPublicSectorEntitiesMemberFieldDataValue159.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignPublicSectorEntitiesMemberFieldDataValue159.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignPublicSectorEntitiesMemberValue158 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignPublicSectorEntitiesMemberValue158)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext156 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap157 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext156, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignPublicSectorEntitiesMemberDataType161 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignPublicSectorEntitiesMemberDataType161.setContextRef(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext156);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignPublicSectorEntitiesMemberDataType161.setUnitRef(INR155);
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignPublicSectorEntitiesMemberDataType161.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignPublicSectorEntitiesMemberDataType161.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignPublicSectorEntitiesMemberValue158));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignPublicSectorEntitiesMemberElement160 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignPublicSectorEntitiesMemberDataType161);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisForeignPublicSectorEntitiesMemberElement160);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                        
                    
                        
                            
                            
                                
                                Unit INR162 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR162 = createUnitIfNotExist(INR162, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:LeverageRatioExposureAxis - ExposureAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap164 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap164.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:PrimaryDealersMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap164.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisPrimaryDealersMemberValue165 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap164);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisPrimaryDealersMemberFieldDataValue166 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap164, "", "", "xs:date($refPeriodEndDate)" );

                                explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisPrimaryDealersMemberValue165 = explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisPrimaryDealersMemberFieldDataValue166 == null ? "" : explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisPrimaryDealersMemberFieldDataValue166.getValue();
                                    
                                if(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisPrimaryDealersMemberFieldDataValue166 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisPrimaryDealersMemberFieldDataValue166.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisPrimaryDealersMemberFieldDataValue166.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisPrimaryDealersMemberFieldDataValue166.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisPrimaryDealersMemberFieldDataValue166.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisPrimaryDealersMemberFieldDataValue166.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisPrimaryDealersMemberFieldDataValue166.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisPrimaryDealersMemberValue165 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisPrimaryDealersMemberValue165)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext163 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap164 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext163, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisPrimaryDealersMemberDataType168 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisPrimaryDealersMemberDataType168.setContextRef(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext163);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisPrimaryDealersMemberDataType168.setUnitRef(INR162);
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisPrimaryDealersMemberDataType168.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisPrimaryDealersMemberDataType168.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisPrimaryDealersMemberValue165));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisPrimaryDealersMemberElement167 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisPrimaryDealersMemberDataType168);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisPrimaryDealersMemberElement167);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                        
                    
                        
                            
                            
                                
                                Unit INR169 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR169 = createUnitIfNotExist(INR169, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:LeverageRatioExposureAxis - ExposureAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap171 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap171.put("rbi-core:LeverageRatioExposureAxis", "in-rbi-rep:CorporateMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap171.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisCorporateMemberValue172 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap171);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisCorporateMemberFieldDataValue173 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap171, "", "", "xs:date($refPeriodEndDate)" );

                                explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisCorporateMemberValue172 = explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisCorporateMemberFieldDataValue173 == null ? "" : explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisCorporateMemberFieldDataValue173.getValue();
                                    
                                if(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisCorporateMemberFieldDataValue173 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisCorporateMemberFieldDataValue173.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisCorporateMemberFieldDataValue173.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisCorporateMemberFieldDataValue173.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisCorporateMemberFieldDataValue173.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisCorporateMemberFieldDataValue173.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisCorporateMemberFieldDataValue173.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisCorporateMemberValue172 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisCorporateMemberValue172)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext170 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap171 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext170, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisCorporateMemberDataType175 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisCorporateMemberDataType175.setContextRef(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext170);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisCorporateMemberDataType175.setUnitRef(INR169);
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisCorporateMemberDataType175.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisCorporateMemberDataType175.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisCorporateMemberValue172));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisCorporateMemberElement174 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisCorporateMemberDataType175);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisCorporateMemberElement174);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                        
                    
                        
                            
                            
                                
                                Unit INR176 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR176 = createUnitIfNotExist(INR176, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:LeverageRatioExposureAxis - ExposureAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap178 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap178.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:ExposureToCCPsMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap178.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToCCPsMemberValue179 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap178);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToCCPsMemberFieldDataValue180 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap178, "", "", "xs:date($refPeriodEndDate)" );

                                explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToCCPsMemberValue179 = explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToCCPsMemberFieldDataValue180 == null ? "" : explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToCCPsMemberFieldDataValue180.getValue();
                                    
                                if(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToCCPsMemberFieldDataValue180 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToCCPsMemberFieldDataValue180.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToCCPsMemberFieldDataValue180.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToCCPsMemberFieldDataValue180.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToCCPsMemberFieldDataValue180.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToCCPsMemberFieldDataValue180.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToCCPsMemberFieldDataValue180.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToCCPsMemberValue179 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToCCPsMemberValue179)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext177 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap178 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext177, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToCCPsMemberDataType182 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToCCPsMemberDataType182.setContextRef(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext177);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToCCPsMemberDataType182.setUnitRef(INR176);
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToCCPsMemberDataType182.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToCCPsMemberDataType182.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToCCPsMemberValue179));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToCCPsMemberElement181 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToCCPsMemberDataType182);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToCCPsMemberElement181);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                        
                    
                        
                            
                            
                                
                                Unit INR183 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR183 = createUnitIfNotExist(INR183, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:LeverageRatioExposureAxis - ExposureAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap185 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap185.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:ExposureToCapitalOfCCPsMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap185.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToCapitalOfCCPsMemberValue186 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap185);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToCapitalOfCCPsMemberFieldDataValue187 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap185, "", "", "xs:date($refPeriodEndDate)" );

                                explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToCapitalOfCCPsMemberValue186 = explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToCapitalOfCCPsMemberFieldDataValue187 == null ? "" : explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToCapitalOfCCPsMemberFieldDataValue187.getValue();
                                    
                                if(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToCapitalOfCCPsMemberFieldDataValue187 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToCapitalOfCCPsMemberFieldDataValue187.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToCapitalOfCCPsMemberFieldDataValue187.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToCapitalOfCCPsMemberFieldDataValue187.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToCapitalOfCCPsMemberFieldDataValue187.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToCapitalOfCCPsMemberFieldDataValue187.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToCapitalOfCCPsMemberFieldDataValue187.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToCapitalOfCCPsMemberValue186 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToCapitalOfCCPsMemberValue186)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext184 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap185 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext184, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToCapitalOfCCPsMemberDataType189 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToCapitalOfCCPsMemberDataType189.setContextRef(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext184);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToCapitalOfCCPsMemberDataType189.setUnitRef(INR183);
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToCapitalOfCCPsMemberDataType189.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToCapitalOfCCPsMemberDataType189.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToCapitalOfCCPsMemberValue186));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToCapitalOfCCPsMemberElement188 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToCapitalOfCCPsMemberDataType189);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToCapitalOfCCPsMemberElement188);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                        
                    
                        
                            
                            
                                
                                Unit INR190 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR190 = createUnitIfNotExist(INR190, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:LeverageRatioExposureAxis - ExposureAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap192 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap192.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:ExposureToDefaultFundContributionOfCCPsMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap192.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToDefaultFundContributionOfCCPsMemberValue193 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap192);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToDefaultFundContributionOfCCPsMemberFieldDataValue194 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap192, "", "", "xs:date($refPeriodEndDate)" );

                                explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToDefaultFundContributionOfCCPsMemberValue193 = explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToDefaultFundContributionOfCCPsMemberFieldDataValue194 == null ? "" : explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToDefaultFundContributionOfCCPsMemberFieldDataValue194.getValue();
                                    
                                if(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToDefaultFundContributionOfCCPsMemberFieldDataValue194 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToDefaultFundContributionOfCCPsMemberFieldDataValue194.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToDefaultFundContributionOfCCPsMemberFieldDataValue194.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToDefaultFundContributionOfCCPsMemberFieldDataValue194.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToDefaultFundContributionOfCCPsMemberFieldDataValue194.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToDefaultFundContributionOfCCPsMemberFieldDataValue194.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToDefaultFundContributionOfCCPsMemberFieldDataValue194.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToDefaultFundContributionOfCCPsMemberValue193 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToDefaultFundContributionOfCCPsMemberValue193)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext191 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap192 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext191, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToDefaultFundContributionOfCCPsMemberDataType196 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToDefaultFundContributionOfCCPsMemberDataType196.setContextRef(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext191);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToDefaultFundContributionOfCCPsMemberDataType196.setUnitRef(INR190);
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToDefaultFundContributionOfCCPsMemberDataType196.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToDefaultFundContributionOfCCPsMemberDataType196.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToDefaultFundContributionOfCCPsMemberValue193));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToDefaultFundContributionOfCCPsMemberElement195 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToDefaultFundContributionOfCCPsMemberDataType196);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisExposureToDefaultFundContributionOfCCPsMemberElement195);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                        
                    
                        
                            
                            
                                
                                Unit INR197 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR197 = createUnitIfNotExist(INR197, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:LeverageRatioExposureAxis - ExposureAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap199 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap199.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:OtherExposureToCCPsMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap199.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisOtherExposureToCCPsMemberValue200 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap199);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisOtherExposureToCCPsMemberFieldDataValue201 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap199, "", "", "xs:date($refPeriodEndDate)" );

                                explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisOtherExposureToCCPsMemberValue200 = explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisOtherExposureToCCPsMemberFieldDataValue201 == null ? "" : explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisOtherExposureToCCPsMemberFieldDataValue201.getValue();
                                    
                                if(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisOtherExposureToCCPsMemberFieldDataValue201 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisOtherExposureToCCPsMemberFieldDataValue201.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisOtherExposureToCCPsMemberFieldDataValue201.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisOtherExposureToCCPsMemberFieldDataValue201.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisOtherExposureToCCPsMemberFieldDataValue201.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisOtherExposureToCCPsMemberFieldDataValue201.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisOtherExposureToCCPsMemberFieldDataValue201.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisOtherExposureToCCPsMemberValue200 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisOtherExposureToCCPsMemberValue200)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext198 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap199 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext198, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisOtherExposureToCCPsMemberDataType203 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisOtherExposureToCCPsMemberDataType203.setContextRef(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext198);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisOtherExposureToCCPsMemberDataType203.setUnitRef(INR197);
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisOtherExposureToCCPsMemberDataType203.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisOtherExposureToCCPsMemberDataType203.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisOtherExposureToCCPsMemberValue200));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisOtherExposureToCCPsMemberElement202 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisOtherExposureToCCPsMemberDataType203);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisOtherExposureToCCPsMemberElement202);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                        
                    
                        
                            
                            
                                
                                Unit INR204 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR204 = createUnitIfNotExist(INR204, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:LeverageRatioExposureAxis - ExposureAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap206 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap206.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:AllOtherExposuresMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap206.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisAllOtherExposuresMemberValue207 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap206);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisAllOtherExposuresMemberFieldDataValue208 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap206, "", "", "xs:date($refPeriodEndDate)" );

                                explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisAllOtherExposuresMemberValue207 = explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisAllOtherExposuresMemberFieldDataValue208 == null ? "" : explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisAllOtherExposuresMemberFieldDataValue208.getValue();
                                    
                                if(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisAllOtherExposuresMemberFieldDataValue208 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisAllOtherExposuresMemberFieldDataValue208.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisAllOtherExposuresMemberFieldDataValue208.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisAllOtherExposuresMemberFieldDataValue208.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisAllOtherExposuresMemberFieldDataValue208.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisAllOtherExposuresMemberFieldDataValue208.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisAllOtherExposuresMemberFieldDataValue208.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisAllOtherExposuresMemberValue207 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisAllOtherExposuresMemberValue207)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext205 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap206 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext205, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisAllOtherExposuresMemberDataType210 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisAllOtherExposuresMemberDataType210.setContextRef(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext205);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisAllOtherExposuresMemberDataType210.setUnitRef(INR204);
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisAllOtherExposuresMemberDataType210.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisAllOtherExposuresMemberDataType210.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisAllOtherExposuresMemberValue207));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisAllOtherExposuresMemberElement209 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisAllOtherExposuresMemberDataType210);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisAllOtherExposuresMemberElement209);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                        
                    
                        
                            
                            
                                
                                Unit INR211 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR211 = createUnitIfNotExist(INR211, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:LeverageRatioExposureAxis - ExposureAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap213 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap213.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:BalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap213.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberValue214 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap213);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberFieldDataValue215 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap213, "", "", "xs:date($refPeriodEndDate)" );

                                explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberValue214 = explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberFieldDataValue215 == null ? "" : explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberFieldDataValue215.getValue();
                                    
                                if(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberFieldDataValue215 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberFieldDataValue215.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberFieldDataValue215.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberFieldDataValue215.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberFieldDataValue215.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberFieldDataValue215.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberFieldDataValue215.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberValue214 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberValue214)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext212 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap213 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext212, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberDataType217 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberDataType217.setContextRef(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext212);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberDataType217.setUnitRef(INR211);
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberDataType217.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberDataType217.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberValue214));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberElement216 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberDataType217);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberElement216);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                        
                    
                        
                            
                            
                                
                                Unit INR218 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR218 = createUnitIfNotExist(INR218, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:LeverageRatioExposureAxis - ExposureAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap220 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap220.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:FiduciaryAssetsMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap220.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisFiduciaryAssetsMemberValue221 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap220);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisFiduciaryAssetsMemberFieldDataValue222 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap220, "", "", "xs:date($refPeriodEndDate)" );

                                explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisFiduciaryAssetsMemberValue221 = explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisFiduciaryAssetsMemberFieldDataValue222 == null ? "" : explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisFiduciaryAssetsMemberFieldDataValue222.getValue();
                                    
                                if(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisFiduciaryAssetsMemberFieldDataValue222 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisFiduciaryAssetsMemberFieldDataValue222.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisFiduciaryAssetsMemberFieldDataValue222.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisFiduciaryAssetsMemberFieldDataValue222.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisFiduciaryAssetsMemberFieldDataValue222.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisFiduciaryAssetsMemberFieldDataValue222.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisFiduciaryAssetsMemberFieldDataValue222.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisFiduciaryAssetsMemberValue221 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisFiduciaryAssetsMemberValue221)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext219 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap220 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext219, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisFiduciaryAssetsMemberDataType224 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisFiduciaryAssetsMemberDataType224.setContextRef(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext219);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisFiduciaryAssetsMemberDataType224.setUnitRef(INR218);
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisFiduciaryAssetsMemberDataType224.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisFiduciaryAssetsMemberDataType224.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisFiduciaryAssetsMemberValue221));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisFiduciaryAssetsMemberElement223 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisFiduciaryAssetsMemberDataType224);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisFiduciaryAssetsMemberElement223);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                        
                    
                        
                            
                            
                                
                                Unit INR225 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR225 = createUnitIfNotExist(INR225, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:LeverageRatioExposureAxis - ExposureAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap227 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap227.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:OnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap227.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberValue228 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap227);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberFieldDataValue229 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap227, "", "", "xs:date($refPeriodEndDate)" );

                                explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberValue228 = explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberFieldDataValue229 == null ? "" : explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberFieldDataValue229.getValue();
                                    
                                if(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberFieldDataValue229 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberFieldDataValue229.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberFieldDataValue229.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberFieldDataValue229.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberFieldDataValue229.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberFieldDataValue229.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberFieldDataValue229.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberValue228 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberValue228)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext226 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisMap227 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext226, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberDataType231 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberDataType231.setContextRef(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisContext226);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberDataType231.setUnitRef(INR225);
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberDataType231.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberDataType231.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberValue228));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberElement230 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberDataType231);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout1ExposureAmountLeverageRatioExposureAxisOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberElement230);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                        
                    
                    
                    return "";
                    }

                
                    
                
                // if typemembers exist
                
                
                
                // create variable for subclass DBSLeverageRatioSolo_Layout2 if any typeMembers then List or Single
                //DBSLeverageRatioSolo_Layout2 dBSLeverageRatioSolo_Layout2 = mainReportData.getDBSLeverageRatioSolo_Layout2();
                
                    private String dBSLeverageRatioSolo_Layout2Method(DBSLeverageRatioSolo_Layout2 dBSLeverageRatioSolo_Layout2, List<String> contextIdentifiers,  List<Context> contextElements, List<Object> bodyElements, List<String> unitIdentifiers, List<Unit> unitElements, String bankCode, String startDateDefault, String endDateDefault, String periodDateDefault)
                
                    {
                        String startDate = startDateDefault;
                        String endDate = endDateDefault;
                        String periodDate = periodDateDefault;
                    DBSLeverageRatioSolo_Layout2 field = dBSLeverageRatioSolo_Layout2;
                    
                    
                        
                        
                            
                                
                                Unit INR232 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR232 = createUnitIfNotExist(INR232, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - NotionalPrincipalAmount
                            
                                Map zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountMap236 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountMap236.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountMap236.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:OffBalanceSheetItemsWith10PercentCreditConversionFactorMember");
                                    
                                    
                                    String zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountValue234 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountMap236);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountFieldDataValue235 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountMap236, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountValue234 = zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountFieldDataValue235 == null ? "" : zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountFieldDataValue235.getValue();
                                    if(zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountFieldDataValue235 != null ) {
                                        if(!zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountFieldDataValue235.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountFieldDataValue235.getStartDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountFieldDataValue235.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountFieldDataValue235.getEndDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountFieldDataValue235.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountFieldDataValue235.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioSolo_Layout2NotionalPrincipalAmountContext233 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountMap236 );
                                        
                                
                                if(zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountValue234 != null && !"".equals(zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountValue234)) {
                                    
                                    addContext(DBSLeverageRatioSolo_Layout2NotionalPrincipalAmountContext233, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType notionalPrincipalAmountValue237 = new MonetaryItemType();
                                    notionalPrincipalAmountValue237.setContextRef(DBSLeverageRatioSolo_Layout2NotionalPrincipalAmountContext233);
                                    
                                    notionalPrincipalAmountValue237.setUnitRef(INR232);
                                    notionalPrincipalAmountValue237.setDecimals("INF");
                                    notionalPrincipalAmountValue237.setValue(new BigDecimal(zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountValue234));
                                    
                                    
                                    JAXBElement<MonetaryItemType> notionalPrincipalAmountElement238 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(notionalPrincipalAmountValue237);
                                    bodyElements.add(notionalPrincipalAmountElement238);
                                
                            }
                        
                            
                                
                                Unit INR239 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR239 = createUnitIfNotExist(INR239, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - ExposureAmount
                            
                                Map zeroDBSLeverageRatioSolo_Layout2ExposureAmountMap243 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout2ExposureAmountMap243.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout2ExposureAmountMap243.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:OffBalanceSheetItemsWith10PercentCreditConversionFactorMember");
                                    
                                    
                                    String zeroDBSLeverageRatioSolo_Layout2ExposureAmountValue241 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), zeroDBSLeverageRatioSolo_Layout2ExposureAmountMap243);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioSolo_Layout2ExposureAmountFieldDataValue242 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), zeroDBSLeverageRatioSolo_Layout2ExposureAmountMap243, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioSolo_Layout2ExposureAmountValue241 = zeroDBSLeverageRatioSolo_Layout2ExposureAmountFieldDataValue242 == null ? "" : zeroDBSLeverageRatioSolo_Layout2ExposureAmountFieldDataValue242.getValue();
                                    if(zeroDBSLeverageRatioSolo_Layout2ExposureAmountFieldDataValue242 != null ) {
                                        if(!zeroDBSLeverageRatioSolo_Layout2ExposureAmountFieldDataValue242.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioSolo_Layout2ExposureAmountFieldDataValue242.getStartDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout2ExposureAmountFieldDataValue242.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioSolo_Layout2ExposureAmountFieldDataValue242.getEndDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout2ExposureAmountFieldDataValue242.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioSolo_Layout2ExposureAmountFieldDataValue242.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioSolo_Layout2ExposureAmountContext240 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioSolo_Layout2ExposureAmountMap243 );
                                        
                                
                                if(zeroDBSLeverageRatioSolo_Layout2ExposureAmountValue241 != null && !"".equals(zeroDBSLeverageRatioSolo_Layout2ExposureAmountValue241)) {
                                    
                                    addContext(DBSLeverageRatioSolo_Layout2ExposureAmountContext240, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType exposureAmountValue244 = new MonetaryItemType();
                                    exposureAmountValue244.setContextRef(DBSLeverageRatioSolo_Layout2ExposureAmountContext240);
                                    
                                    exposureAmountValue244.setUnitRef(INR239);
                                    exposureAmountValue244.setDecimals("INF");
                                    exposureAmountValue244.setValue(new BigDecimal(zeroDBSLeverageRatioSolo_Layout2ExposureAmountValue241));
                                    
                                    
                                    JAXBElement<MonetaryItemType> exposureAmountElement245 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(exposureAmountValue244);
                                    bodyElements.add(exposureAmountElement245);
                                
                            }
                        
                            
                                
                                Unit INR246 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR246 = createUnitIfNotExist(INR246, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - NotionalPrincipalAmount
                            
                                Map zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountMap250 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountMap250.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountMap250.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:UnconditionallyCancellableCreditCardsCommitmentsMember");
                                    
                                    
                                    String zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountValue248 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountMap250);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountFieldDataValue249 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountMap250, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountValue248 = zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountFieldDataValue249 == null ? "" : zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountFieldDataValue249.getValue();
                                    if(zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountFieldDataValue249 != null ) {
                                        if(!zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountFieldDataValue249.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountFieldDataValue249.getStartDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountFieldDataValue249.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountFieldDataValue249.getEndDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountFieldDataValue249.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountFieldDataValue249.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioSolo_Layout2NotionalPrincipalAmountContext247 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountMap250 );
                                        
                                
                                if(zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountValue248 != null && !"".equals(zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountValue248)) {
                                    
                                    addContext(DBSLeverageRatioSolo_Layout2NotionalPrincipalAmountContext247, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType notionalPrincipalAmountValue251 = new MonetaryItemType();
                                    notionalPrincipalAmountValue251.setContextRef(DBSLeverageRatioSolo_Layout2NotionalPrincipalAmountContext247);
                                    
                                    notionalPrincipalAmountValue251.setUnitRef(INR246);
                                    notionalPrincipalAmountValue251.setDecimals("INF");
                                    notionalPrincipalAmountValue251.setValue(new BigDecimal(zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountValue248));
                                    
                                    
                                    JAXBElement<MonetaryItemType> notionalPrincipalAmountElement252 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(notionalPrincipalAmountValue251);
                                    bodyElements.add(notionalPrincipalAmountElement252);
                                
                            }
                        
                            
                                
                                Unit pure253 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                                pure253 = createUnitIfNotExist(pure253, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                                
                            
                            // - CreditConversionFactor
                            
                                Map zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorMap257 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorMap257.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorMap257.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:UnconditionallyCancellableCreditCardsCommitmentsMember");
                                    
                                    
                                    String zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorValue255 = DBS06ReportUtil.retrieveValueForElement(field.getCreditConversionFactor(), zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorMap257);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorFieldDataValue256 = DBS06ReportUtil.retrieveFieldDataForElement(field.getCreditConversionFactor(), zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorMap257, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorValue255 = zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorFieldDataValue256 == null ? "" : zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorFieldDataValue256.getValue();
                                    if(zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorFieldDataValue256 != null ) {
                                        if(!zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorFieldDataValue256.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorFieldDataValue256.getStartDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorFieldDataValue256.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorFieldDataValue256.getEndDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorFieldDataValue256.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorFieldDataValue256.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioSolo_Layout2CreditConversionFactorContext254 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorMap257 );
                                        
                                
                                if(zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorValue255 != null && !"".equals(zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorValue255)) {
                                    
                                    addContext(DBSLeverageRatioSolo_Layout2CreditConversionFactorContext254, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    PercentItemType creditConversionFactorValue258 = new PercentItemType();
                                    creditConversionFactorValue258.setContextRef(DBSLeverageRatioSolo_Layout2CreditConversionFactorContext254);
                                    
                                    creditConversionFactorValue258.setUnitRef(pure253);
                                    creditConversionFactorValue258.setDecimals("INF");
                                    creditConversionFactorValue258.setValue(new BigDecimal(zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorValue255));
                                    
                                    
                                    JAXBElement<PercentItemType> creditConversionFactorElement259 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createCreditConversionFactor(creditConversionFactorValue258);
                                    bodyElements.add(creditConversionFactorElement259);
                                
                            }
                        
                            
                                
                                Unit INR260 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR260 = createUnitIfNotExist(INR260, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - ExposureAmount
                            
                                Map zeroDBSLeverageRatioSolo_Layout2ExposureAmountMap264 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout2ExposureAmountMap264.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout2ExposureAmountMap264.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:UnconditionallyCancellableCreditCardsCommitmentsMember");
                                    
                                    
                                    String zeroDBSLeverageRatioSolo_Layout2ExposureAmountValue262 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), zeroDBSLeverageRatioSolo_Layout2ExposureAmountMap264);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioSolo_Layout2ExposureAmountFieldDataValue263 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), zeroDBSLeverageRatioSolo_Layout2ExposureAmountMap264, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioSolo_Layout2ExposureAmountValue262 = zeroDBSLeverageRatioSolo_Layout2ExposureAmountFieldDataValue263 == null ? "" : zeroDBSLeverageRatioSolo_Layout2ExposureAmountFieldDataValue263.getValue();
                                    if(zeroDBSLeverageRatioSolo_Layout2ExposureAmountFieldDataValue263 != null ) {
                                        if(!zeroDBSLeverageRatioSolo_Layout2ExposureAmountFieldDataValue263.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioSolo_Layout2ExposureAmountFieldDataValue263.getStartDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout2ExposureAmountFieldDataValue263.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioSolo_Layout2ExposureAmountFieldDataValue263.getEndDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout2ExposureAmountFieldDataValue263.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioSolo_Layout2ExposureAmountFieldDataValue263.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioSolo_Layout2ExposureAmountContext261 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioSolo_Layout2ExposureAmountMap264 );
                                        
                                
                                if(zeroDBSLeverageRatioSolo_Layout2ExposureAmountValue262 != null && !"".equals(zeroDBSLeverageRatioSolo_Layout2ExposureAmountValue262)) {
                                    
                                    addContext(DBSLeverageRatioSolo_Layout2ExposureAmountContext261, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType exposureAmountValue265 = new MonetaryItemType();
                                    exposureAmountValue265.setContextRef(DBSLeverageRatioSolo_Layout2ExposureAmountContext261);
                                    
                                    exposureAmountValue265.setUnitRef(INR260);
                                    exposureAmountValue265.setDecimals("INF");
                                    exposureAmountValue265.setValue(new BigDecimal(zeroDBSLeverageRatioSolo_Layout2ExposureAmountValue262));
                                    
                                    
                                    JAXBElement<MonetaryItemType> exposureAmountElement266 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(exposureAmountValue265);
                                    bodyElements.add(exposureAmountElement266);
                                
                            }
                        
                            
                                
                                Unit INR267 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR267 = createUnitIfNotExist(INR267, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - NotionalPrincipalAmount
                            
                                Map zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountMap271 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountMap271.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountMap271.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:OtherUnconditionallyCancellableCommitmentsMember");
                                    
                                    
                                    String zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountValue269 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountMap271);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountFieldDataValue270 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountMap271, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountValue269 = zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountFieldDataValue270 == null ? "" : zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountFieldDataValue270.getValue();
                                    if(zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountFieldDataValue270 != null ) {
                                        if(!zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountFieldDataValue270.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountFieldDataValue270.getStartDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountFieldDataValue270.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountFieldDataValue270.getEndDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountFieldDataValue270.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountFieldDataValue270.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioSolo_Layout2NotionalPrincipalAmountContext268 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountMap271 );
                                        
                                
                                if(zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountValue269 != null && !"".equals(zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountValue269)) {
                                    
                                    addContext(DBSLeverageRatioSolo_Layout2NotionalPrincipalAmountContext268, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType notionalPrincipalAmountValue272 = new MonetaryItemType();
                                    notionalPrincipalAmountValue272.setContextRef(DBSLeverageRatioSolo_Layout2NotionalPrincipalAmountContext268);
                                    
                                    notionalPrincipalAmountValue272.setUnitRef(INR267);
                                    notionalPrincipalAmountValue272.setDecimals("INF");
                                    notionalPrincipalAmountValue272.setValue(new BigDecimal(zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountValue269));
                                    
                                    
                                    JAXBElement<MonetaryItemType> notionalPrincipalAmountElement273 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(notionalPrincipalAmountValue272);
                                    bodyElements.add(notionalPrincipalAmountElement273);
                                
                            }
                        
                            
                                
                                Unit pure274 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                                pure274 = createUnitIfNotExist(pure274, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                                
                            
                            // - CreditConversionFactor
                            
                                Map zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorMap278 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorMap278.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorMap278.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:OtherUnconditionallyCancellableCommitmentsMember");
                                    
                                    
                                    String zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorValue276 = DBS06ReportUtil.retrieveValueForElement(field.getCreditConversionFactor(), zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorMap278);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorFieldDataValue277 = DBS06ReportUtil.retrieveFieldDataForElement(field.getCreditConversionFactor(), zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorMap278, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorValue276 = zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorFieldDataValue277 == null ? "" : zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorFieldDataValue277.getValue();
                                    if(zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorFieldDataValue277 != null ) {
                                        if(!zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorFieldDataValue277.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorFieldDataValue277.getStartDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorFieldDataValue277.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorFieldDataValue277.getEndDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorFieldDataValue277.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorFieldDataValue277.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioSolo_Layout2CreditConversionFactorContext275 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorMap278 );
                                        
                                
                                if(zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorValue276 != null && !"".equals(zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorValue276)) {
                                    
                                    addContext(DBSLeverageRatioSolo_Layout2CreditConversionFactorContext275, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    PercentItemType creditConversionFactorValue279 = new PercentItemType();
                                    creditConversionFactorValue279.setContextRef(DBSLeverageRatioSolo_Layout2CreditConversionFactorContext275);
                                    
                                    creditConversionFactorValue279.setUnitRef(pure274);
                                    creditConversionFactorValue279.setDecimals("INF");
                                    creditConversionFactorValue279.setValue(new BigDecimal(zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorValue276));
                                    
                                    
                                    JAXBElement<PercentItemType> creditConversionFactorElement280 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createCreditConversionFactor(creditConversionFactorValue279);
                                    bodyElements.add(creditConversionFactorElement280);
                                
                            }
                        
                            
                                
                                Unit INR281 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR281 = createUnitIfNotExist(INR281, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - ExposureAmount
                            
                                Map zeroDBSLeverageRatioSolo_Layout2ExposureAmountMap285 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout2ExposureAmountMap285.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout2ExposureAmountMap285.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:OtherUnconditionallyCancellableCommitmentsMember");
                                    
                                    
                                    String zeroDBSLeverageRatioSolo_Layout2ExposureAmountValue283 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), zeroDBSLeverageRatioSolo_Layout2ExposureAmountMap285);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioSolo_Layout2ExposureAmountFieldDataValue284 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), zeroDBSLeverageRatioSolo_Layout2ExposureAmountMap285, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioSolo_Layout2ExposureAmountValue283 = zeroDBSLeverageRatioSolo_Layout2ExposureAmountFieldDataValue284 == null ? "" : zeroDBSLeverageRatioSolo_Layout2ExposureAmountFieldDataValue284.getValue();
                                    if(zeroDBSLeverageRatioSolo_Layout2ExposureAmountFieldDataValue284 != null ) {
                                        if(!zeroDBSLeverageRatioSolo_Layout2ExposureAmountFieldDataValue284.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioSolo_Layout2ExposureAmountFieldDataValue284.getStartDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout2ExposureAmountFieldDataValue284.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioSolo_Layout2ExposureAmountFieldDataValue284.getEndDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout2ExposureAmountFieldDataValue284.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioSolo_Layout2ExposureAmountFieldDataValue284.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioSolo_Layout2ExposureAmountContext282 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioSolo_Layout2ExposureAmountMap285 );
                                        
                                
                                if(zeroDBSLeverageRatioSolo_Layout2ExposureAmountValue283 != null && !"".equals(zeroDBSLeverageRatioSolo_Layout2ExposureAmountValue283)) {
                                    
                                    addContext(DBSLeverageRatioSolo_Layout2ExposureAmountContext282, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType exposureAmountValue286 = new MonetaryItemType();
                                    exposureAmountValue286.setContextRef(DBSLeverageRatioSolo_Layout2ExposureAmountContext282);
                                    
                                    exposureAmountValue286.setUnitRef(INR281);
                                    exposureAmountValue286.setDecimals("INF");
                                    exposureAmountValue286.setValue(new BigDecimal(zeroDBSLeverageRatioSolo_Layout2ExposureAmountValue283));
                                    
                                    
                                    JAXBElement<MonetaryItemType> exposureAmountElement287 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(exposureAmountValue286);
                                    bodyElements.add(exposureAmountElement287);
                                
                            }
                        
                            
                                
                                Unit INR288 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR288 = createUnitIfNotExist(INR288, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - NotionalPrincipalAmount
                            
                                Map zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountMap292 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountMap292.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountMap292.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:OtherOffBalanceSheetItemsWith10PercentCreditConversionFactorMember");
                                    
                                    
                                    String zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountValue290 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountMap292);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountFieldDataValue291 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountMap292, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountValue290 = zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountFieldDataValue291 == null ? "" : zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountFieldDataValue291.getValue();
                                    if(zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountFieldDataValue291 != null ) {
                                        if(!zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountFieldDataValue291.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountFieldDataValue291.getStartDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountFieldDataValue291.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountFieldDataValue291.getEndDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountFieldDataValue291.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountFieldDataValue291.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioSolo_Layout2NotionalPrincipalAmountContext289 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountMap292 );
                                        
                                
                                if(zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountValue290 != null && !"".equals(zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountValue290)) {
                                    
                                    addContext(DBSLeverageRatioSolo_Layout2NotionalPrincipalAmountContext289, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType notionalPrincipalAmountValue293 = new MonetaryItemType();
                                    notionalPrincipalAmountValue293.setContextRef(DBSLeverageRatioSolo_Layout2NotionalPrincipalAmountContext289);
                                    
                                    notionalPrincipalAmountValue293.setUnitRef(INR288);
                                    notionalPrincipalAmountValue293.setDecimals("INF");
                                    notionalPrincipalAmountValue293.setValue(new BigDecimal(zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountValue290));
                                    
                                    
                                    JAXBElement<MonetaryItemType> notionalPrincipalAmountElement294 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(notionalPrincipalAmountValue293);
                                    bodyElements.add(notionalPrincipalAmountElement294);
                                
                            }
                        
                            
                                
                                Unit pure295 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                                pure295 = createUnitIfNotExist(pure295, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                                
                            
                            // - CreditConversionFactor
                            
                                Map zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorMap299 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorMap299.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorMap299.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:OtherOffBalanceSheetItemsWith10PercentCreditConversionFactorMember");
                                    
                                    
                                    String zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorValue297 = DBS06ReportUtil.retrieveValueForElement(field.getCreditConversionFactor(), zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorMap299);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorFieldDataValue298 = DBS06ReportUtil.retrieveFieldDataForElement(field.getCreditConversionFactor(), zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorMap299, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorValue297 = zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorFieldDataValue298 == null ? "" : zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorFieldDataValue298.getValue();
                                    if(zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorFieldDataValue298 != null ) {
                                        if(!zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorFieldDataValue298.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorFieldDataValue298.getStartDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorFieldDataValue298.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorFieldDataValue298.getEndDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorFieldDataValue298.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorFieldDataValue298.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioSolo_Layout2CreditConversionFactorContext296 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorMap299 );
                                        
                                
                                if(zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorValue297 != null && !"".equals(zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorValue297)) {
                                    
                                    addContext(DBSLeverageRatioSolo_Layout2CreditConversionFactorContext296, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    PercentItemType creditConversionFactorValue300 = new PercentItemType();
                                    creditConversionFactorValue300.setContextRef(DBSLeverageRatioSolo_Layout2CreditConversionFactorContext296);
                                    
                                    creditConversionFactorValue300.setUnitRef(pure295);
                                    creditConversionFactorValue300.setDecimals("INF");
                                    creditConversionFactorValue300.setValue(new BigDecimal(zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorValue297));
                                    
                                    
                                    JAXBElement<PercentItemType> creditConversionFactorElement301 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createCreditConversionFactor(creditConversionFactorValue300);
                                    bodyElements.add(creditConversionFactorElement301);
                                
                            }
                        
                            
                                
                                Unit INR302 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR302 = createUnitIfNotExist(INR302, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - ExposureAmount
                            
                                Map zeroDBSLeverageRatioSolo_Layout2ExposureAmountMap306 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout2ExposureAmountMap306.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout2ExposureAmountMap306.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:OtherOffBalanceSheetItemsWith10PercentCreditConversionFactorMember");
                                    
                                    
                                    String zeroDBSLeverageRatioSolo_Layout2ExposureAmountValue304 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), zeroDBSLeverageRatioSolo_Layout2ExposureAmountMap306);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioSolo_Layout2ExposureAmountFieldDataValue305 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), zeroDBSLeverageRatioSolo_Layout2ExposureAmountMap306, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioSolo_Layout2ExposureAmountValue304 = zeroDBSLeverageRatioSolo_Layout2ExposureAmountFieldDataValue305 == null ? "" : zeroDBSLeverageRatioSolo_Layout2ExposureAmountFieldDataValue305.getValue();
                                    if(zeroDBSLeverageRatioSolo_Layout2ExposureAmountFieldDataValue305 != null ) {
                                        if(!zeroDBSLeverageRatioSolo_Layout2ExposureAmountFieldDataValue305.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioSolo_Layout2ExposureAmountFieldDataValue305.getStartDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout2ExposureAmountFieldDataValue305.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioSolo_Layout2ExposureAmountFieldDataValue305.getEndDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout2ExposureAmountFieldDataValue305.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioSolo_Layout2ExposureAmountFieldDataValue305.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioSolo_Layout2ExposureAmountContext303 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioSolo_Layout2ExposureAmountMap306 );
                                        
                                
                                if(zeroDBSLeverageRatioSolo_Layout2ExposureAmountValue304 != null && !"".equals(zeroDBSLeverageRatioSolo_Layout2ExposureAmountValue304)) {
                                    
                                    addContext(DBSLeverageRatioSolo_Layout2ExposureAmountContext303, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType exposureAmountValue307 = new MonetaryItemType();
                                    exposureAmountValue307.setContextRef(DBSLeverageRatioSolo_Layout2ExposureAmountContext303);
                                    
                                    exposureAmountValue307.setUnitRef(INR302);
                                    exposureAmountValue307.setDecimals("INF");
                                    exposureAmountValue307.setValue(new BigDecimal(zeroDBSLeverageRatioSolo_Layout2ExposureAmountValue304));
                                    
                                    
                                    JAXBElement<MonetaryItemType> exposureAmountElement308 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(exposureAmountValue307);
                                    bodyElements.add(exposureAmountElement308);
                                
                            }
                        
                            
                                
                                Unit INR309 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR309 = createUnitIfNotExist(INR309, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - NotionalPrincipalAmount
                            
                                Map zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountMap313 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountMap313.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountMap313.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:OffBalanceSheetItemsWith20PercentCreditConversionFactorMember");
                                    
                                    
                                    String zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountValue311 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountMap313);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountFieldDataValue312 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountMap313, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountValue311 = zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountFieldDataValue312 == null ? "" : zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountFieldDataValue312.getValue();
                                    if(zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountFieldDataValue312 != null ) {
                                        if(!zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountFieldDataValue312.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountFieldDataValue312.getStartDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountFieldDataValue312.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountFieldDataValue312.getEndDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountFieldDataValue312.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountFieldDataValue312.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioSolo_Layout2NotionalPrincipalAmountContext310 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountMap313 );
                                        
                                
                                if(zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountValue311 != null && !"".equals(zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountValue311)) {
                                    
                                    addContext(DBSLeverageRatioSolo_Layout2NotionalPrincipalAmountContext310, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType notionalPrincipalAmountValue314 = new MonetaryItemType();
                                    notionalPrincipalAmountValue314.setContextRef(DBSLeverageRatioSolo_Layout2NotionalPrincipalAmountContext310);
                                    
                                    notionalPrincipalAmountValue314.setUnitRef(INR309);
                                    notionalPrincipalAmountValue314.setDecimals("INF");
                                    notionalPrincipalAmountValue314.setValue(new BigDecimal(zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountValue311));
                                    
                                    
                                    JAXBElement<MonetaryItemType> notionalPrincipalAmountElement315 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(notionalPrincipalAmountValue314);
                                    bodyElements.add(notionalPrincipalAmountElement315);
                                
                            }
                        
                            
                                
                                Unit pure316 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                                pure316 = createUnitIfNotExist(pure316, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                                
                            
                            // - CreditConversionFactor
                            
                                Map zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorMap320 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorMap320.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorMap320.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:OffBalanceSheetItemsWith20PercentCreditConversionFactorMember");
                                    
                                    
                                    String zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorValue318 = DBS06ReportUtil.retrieveValueForElement(field.getCreditConversionFactor(), zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorMap320);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorFieldDataValue319 = DBS06ReportUtil.retrieveFieldDataForElement(field.getCreditConversionFactor(), zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorMap320, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorValue318 = zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorFieldDataValue319 == null ? "" : zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorFieldDataValue319.getValue();
                                    if(zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorFieldDataValue319 != null ) {
                                        if(!zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorFieldDataValue319.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorFieldDataValue319.getStartDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorFieldDataValue319.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorFieldDataValue319.getEndDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorFieldDataValue319.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorFieldDataValue319.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioSolo_Layout2CreditConversionFactorContext317 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorMap320 );
                                        
                                
                                if(zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorValue318 != null && !"".equals(zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorValue318)) {
                                    
                                    addContext(DBSLeverageRatioSolo_Layout2CreditConversionFactorContext317, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    PercentItemType creditConversionFactorValue321 = new PercentItemType();
                                    creditConversionFactorValue321.setContextRef(DBSLeverageRatioSolo_Layout2CreditConversionFactorContext317);
                                    
                                    creditConversionFactorValue321.setUnitRef(pure316);
                                    creditConversionFactorValue321.setDecimals("INF");
                                    creditConversionFactorValue321.setValue(new BigDecimal(zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorValue318));
                                    
                                    
                                    JAXBElement<PercentItemType> creditConversionFactorElement322 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createCreditConversionFactor(creditConversionFactorValue321);
                                    bodyElements.add(creditConversionFactorElement322);
                                
                            }
                        
                            
                                
                                Unit INR323 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR323 = createUnitIfNotExist(INR323, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - ExposureAmount
                            
                                Map zeroDBSLeverageRatioSolo_Layout2ExposureAmountMap327 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout2ExposureAmountMap327.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout2ExposureAmountMap327.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:OffBalanceSheetItemsWith20PercentCreditConversionFactorMember");
                                    
                                    
                                    String zeroDBSLeverageRatioSolo_Layout2ExposureAmountValue325 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), zeroDBSLeverageRatioSolo_Layout2ExposureAmountMap327);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioSolo_Layout2ExposureAmountFieldDataValue326 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), zeroDBSLeverageRatioSolo_Layout2ExposureAmountMap327, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioSolo_Layout2ExposureAmountValue325 = zeroDBSLeverageRatioSolo_Layout2ExposureAmountFieldDataValue326 == null ? "" : zeroDBSLeverageRatioSolo_Layout2ExposureAmountFieldDataValue326.getValue();
                                    if(zeroDBSLeverageRatioSolo_Layout2ExposureAmountFieldDataValue326 != null ) {
                                        if(!zeroDBSLeverageRatioSolo_Layout2ExposureAmountFieldDataValue326.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioSolo_Layout2ExposureAmountFieldDataValue326.getStartDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout2ExposureAmountFieldDataValue326.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioSolo_Layout2ExposureAmountFieldDataValue326.getEndDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout2ExposureAmountFieldDataValue326.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioSolo_Layout2ExposureAmountFieldDataValue326.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioSolo_Layout2ExposureAmountContext324 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioSolo_Layout2ExposureAmountMap327 );
                                        
                                
                                if(zeroDBSLeverageRatioSolo_Layout2ExposureAmountValue325 != null && !"".equals(zeroDBSLeverageRatioSolo_Layout2ExposureAmountValue325)) {
                                    
                                    addContext(DBSLeverageRatioSolo_Layout2ExposureAmountContext324, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType exposureAmountValue328 = new MonetaryItemType();
                                    exposureAmountValue328.setContextRef(DBSLeverageRatioSolo_Layout2ExposureAmountContext324);
                                    
                                    exposureAmountValue328.setUnitRef(INR323);
                                    exposureAmountValue328.setDecimals("INF");
                                    exposureAmountValue328.setValue(new BigDecimal(zeroDBSLeverageRatioSolo_Layout2ExposureAmountValue325));
                                    
                                    
                                    JAXBElement<MonetaryItemType> exposureAmountElement329 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(exposureAmountValue328);
                                    bodyElements.add(exposureAmountElement329);
                                
                            }
                        
                            
                                
                                Unit INR330 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR330 = createUnitIfNotExist(INR330, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - NotionalPrincipalAmount
                            
                                Map zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountMap334 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountMap334.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountMap334.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:OffBalanceSheetItemsWith50PercentCreditConversionFactorMember");
                                    
                                    
                                    String zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountValue332 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountMap334);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountFieldDataValue333 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountMap334, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountValue332 = zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountFieldDataValue333 == null ? "" : zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountFieldDataValue333.getValue();
                                    if(zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountFieldDataValue333 != null ) {
                                        if(!zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountFieldDataValue333.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountFieldDataValue333.getStartDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountFieldDataValue333.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountFieldDataValue333.getEndDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountFieldDataValue333.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountFieldDataValue333.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioSolo_Layout2NotionalPrincipalAmountContext331 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountMap334 );
                                        
                                
                                if(zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountValue332 != null && !"".equals(zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountValue332)) {
                                    
                                    addContext(DBSLeverageRatioSolo_Layout2NotionalPrincipalAmountContext331, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType notionalPrincipalAmountValue335 = new MonetaryItemType();
                                    notionalPrincipalAmountValue335.setContextRef(DBSLeverageRatioSolo_Layout2NotionalPrincipalAmountContext331);
                                    
                                    notionalPrincipalAmountValue335.setUnitRef(INR330);
                                    notionalPrincipalAmountValue335.setDecimals("INF");
                                    notionalPrincipalAmountValue335.setValue(new BigDecimal(zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountValue332));
                                    
                                    
                                    JAXBElement<MonetaryItemType> notionalPrincipalAmountElement336 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(notionalPrincipalAmountValue335);
                                    bodyElements.add(notionalPrincipalAmountElement336);
                                
                            }
                        
                            
                                
                                Unit pure337 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                                pure337 = createUnitIfNotExist(pure337, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                                
                            
                            // - CreditConversionFactor
                            
                                Map zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorMap341 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorMap341.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorMap341.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:OffBalanceSheetItemsWith50PercentCreditConversionFactorMember");
                                    
                                    
                                    String zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorValue339 = DBS06ReportUtil.retrieveValueForElement(field.getCreditConversionFactor(), zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorMap341);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorFieldDataValue340 = DBS06ReportUtil.retrieveFieldDataForElement(field.getCreditConversionFactor(), zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorMap341, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorValue339 = zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorFieldDataValue340 == null ? "" : zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorFieldDataValue340.getValue();
                                    if(zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorFieldDataValue340 != null ) {
                                        if(!zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorFieldDataValue340.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorFieldDataValue340.getStartDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorFieldDataValue340.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorFieldDataValue340.getEndDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorFieldDataValue340.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorFieldDataValue340.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioSolo_Layout2CreditConversionFactorContext338 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorMap341 );
                                        
                                
                                if(zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorValue339 != null && !"".equals(zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorValue339)) {
                                    
                                    addContext(DBSLeverageRatioSolo_Layout2CreditConversionFactorContext338, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    PercentItemType creditConversionFactorValue342 = new PercentItemType();
                                    creditConversionFactorValue342.setContextRef(DBSLeverageRatioSolo_Layout2CreditConversionFactorContext338);
                                    
                                    creditConversionFactorValue342.setUnitRef(pure337);
                                    creditConversionFactorValue342.setDecimals("INF");
                                    creditConversionFactorValue342.setValue(new BigDecimal(zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorValue339));
                                    
                                    
                                    JAXBElement<PercentItemType> creditConversionFactorElement343 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createCreditConversionFactor(creditConversionFactorValue342);
                                    bodyElements.add(creditConversionFactorElement343);
                                
                            }
                        
                            
                                
                                Unit INR344 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR344 = createUnitIfNotExist(INR344, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - ExposureAmount
                            
                                Map zeroDBSLeverageRatioSolo_Layout2ExposureAmountMap348 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout2ExposureAmountMap348.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout2ExposureAmountMap348.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:OffBalanceSheetItemsWith50PercentCreditConversionFactorMember");
                                    
                                    
                                    String zeroDBSLeverageRatioSolo_Layout2ExposureAmountValue346 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), zeroDBSLeverageRatioSolo_Layout2ExposureAmountMap348);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioSolo_Layout2ExposureAmountFieldDataValue347 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), zeroDBSLeverageRatioSolo_Layout2ExposureAmountMap348, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioSolo_Layout2ExposureAmountValue346 = zeroDBSLeverageRatioSolo_Layout2ExposureAmountFieldDataValue347 == null ? "" : zeroDBSLeverageRatioSolo_Layout2ExposureAmountFieldDataValue347.getValue();
                                    if(zeroDBSLeverageRatioSolo_Layout2ExposureAmountFieldDataValue347 != null ) {
                                        if(!zeroDBSLeverageRatioSolo_Layout2ExposureAmountFieldDataValue347.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioSolo_Layout2ExposureAmountFieldDataValue347.getStartDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout2ExposureAmountFieldDataValue347.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioSolo_Layout2ExposureAmountFieldDataValue347.getEndDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout2ExposureAmountFieldDataValue347.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioSolo_Layout2ExposureAmountFieldDataValue347.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioSolo_Layout2ExposureAmountContext345 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioSolo_Layout2ExposureAmountMap348 );
                                        
                                
                                if(zeroDBSLeverageRatioSolo_Layout2ExposureAmountValue346 != null && !"".equals(zeroDBSLeverageRatioSolo_Layout2ExposureAmountValue346)) {
                                    
                                    addContext(DBSLeverageRatioSolo_Layout2ExposureAmountContext345, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType exposureAmountValue349 = new MonetaryItemType();
                                    exposureAmountValue349.setContextRef(DBSLeverageRatioSolo_Layout2ExposureAmountContext345);
                                    
                                    exposureAmountValue349.setUnitRef(INR344);
                                    exposureAmountValue349.setDecimals("INF");
                                    exposureAmountValue349.setValue(new BigDecimal(zeroDBSLeverageRatioSolo_Layout2ExposureAmountValue346));
                                    
                                    
                                    JAXBElement<MonetaryItemType> exposureAmountElement350 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(exposureAmountValue349);
                                    bodyElements.add(exposureAmountElement350);
                                
                            }
                        
                            
                                
                                Unit INR351 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR351 = createUnitIfNotExist(INR351, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - NotionalPrincipalAmount
                            
                                Map zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountMap355 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountMap355.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountMap355.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:OffBalanceSheetItemsWith100PercentCreditConversionFactorMember");
                                    
                                    
                                    String zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountValue353 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountMap355);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountFieldDataValue354 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountMap355, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountValue353 = zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountFieldDataValue354 == null ? "" : zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountFieldDataValue354.getValue();
                                    if(zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountFieldDataValue354 != null ) {
                                        if(!zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountFieldDataValue354.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountFieldDataValue354.getStartDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountFieldDataValue354.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountFieldDataValue354.getEndDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountFieldDataValue354.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountFieldDataValue354.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioSolo_Layout2NotionalPrincipalAmountContext352 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountMap355 );
                                        
                                
                                if(zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountValue353 != null && !"".equals(zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountValue353)) {
                                    
                                    addContext(DBSLeverageRatioSolo_Layout2NotionalPrincipalAmountContext352, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType notionalPrincipalAmountValue356 = new MonetaryItemType();
                                    notionalPrincipalAmountValue356.setContextRef(DBSLeverageRatioSolo_Layout2NotionalPrincipalAmountContext352);
                                    
                                    notionalPrincipalAmountValue356.setUnitRef(INR351);
                                    notionalPrincipalAmountValue356.setDecimals("INF");
                                    notionalPrincipalAmountValue356.setValue(new BigDecimal(zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountValue353));
                                    
                                    
                                    JAXBElement<MonetaryItemType> notionalPrincipalAmountElement357 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(notionalPrincipalAmountValue356);
                                    bodyElements.add(notionalPrincipalAmountElement357);
                                
                            }
                        
                            
                                
                                Unit pure358 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                                pure358 = createUnitIfNotExist(pure358, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                                
                            
                            // - CreditConversionFactor
                            
                                Map zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorMap362 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorMap362.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorMap362.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:OffBalanceSheetItemsWith100PercentCreditConversionFactorMember");
                                    
                                    
                                    String zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorValue360 = DBS06ReportUtil.retrieveValueForElement(field.getCreditConversionFactor(), zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorMap362);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorFieldDataValue361 = DBS06ReportUtil.retrieveFieldDataForElement(field.getCreditConversionFactor(), zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorMap362, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorValue360 = zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorFieldDataValue361 == null ? "" : zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorFieldDataValue361.getValue();
                                    if(zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorFieldDataValue361 != null ) {
                                        if(!zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorFieldDataValue361.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorFieldDataValue361.getStartDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorFieldDataValue361.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorFieldDataValue361.getEndDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorFieldDataValue361.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorFieldDataValue361.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioSolo_Layout2CreditConversionFactorContext359 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorMap362 );
                                        
                                
                                if(zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorValue360 != null && !"".equals(zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorValue360)) {
                                    
                                    addContext(DBSLeverageRatioSolo_Layout2CreditConversionFactorContext359, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    PercentItemType creditConversionFactorValue363 = new PercentItemType();
                                    creditConversionFactorValue363.setContextRef(DBSLeverageRatioSolo_Layout2CreditConversionFactorContext359);
                                    
                                    creditConversionFactorValue363.setUnitRef(pure358);
                                    creditConversionFactorValue363.setDecimals("INF");
                                    creditConversionFactorValue363.setValue(new BigDecimal(zeroDBSLeverageRatioSolo_Layout2CreditConversionFactorValue360));
                                    
                                    
                                    JAXBElement<PercentItemType> creditConversionFactorElement364 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createCreditConversionFactor(creditConversionFactorValue363);
                                    bodyElements.add(creditConversionFactorElement364);
                                
                            }
                        
                            
                                
                                Unit INR365 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR365 = createUnitIfNotExist(INR365, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - ExposureAmount
                            
                                Map zeroDBSLeverageRatioSolo_Layout2ExposureAmountMap369 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout2ExposureAmountMap369.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout2ExposureAmountMap369.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:OffBalanceSheetItemsWith100PercentCreditConversionFactorMember");
                                    
                                    
                                    String zeroDBSLeverageRatioSolo_Layout2ExposureAmountValue367 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), zeroDBSLeverageRatioSolo_Layout2ExposureAmountMap369);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioSolo_Layout2ExposureAmountFieldDataValue368 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), zeroDBSLeverageRatioSolo_Layout2ExposureAmountMap369, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioSolo_Layout2ExposureAmountValue367 = zeroDBSLeverageRatioSolo_Layout2ExposureAmountFieldDataValue368 == null ? "" : zeroDBSLeverageRatioSolo_Layout2ExposureAmountFieldDataValue368.getValue();
                                    if(zeroDBSLeverageRatioSolo_Layout2ExposureAmountFieldDataValue368 != null ) {
                                        if(!zeroDBSLeverageRatioSolo_Layout2ExposureAmountFieldDataValue368.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioSolo_Layout2ExposureAmountFieldDataValue368.getStartDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout2ExposureAmountFieldDataValue368.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioSolo_Layout2ExposureAmountFieldDataValue368.getEndDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout2ExposureAmountFieldDataValue368.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioSolo_Layout2ExposureAmountFieldDataValue368.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioSolo_Layout2ExposureAmountContext366 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioSolo_Layout2ExposureAmountMap369 );
                                        
                                
                                if(zeroDBSLeverageRatioSolo_Layout2ExposureAmountValue367 != null && !"".equals(zeroDBSLeverageRatioSolo_Layout2ExposureAmountValue367)) {
                                    
                                    addContext(DBSLeverageRatioSolo_Layout2ExposureAmountContext366, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType exposureAmountValue370 = new MonetaryItemType();
                                    exposureAmountValue370.setContextRef(DBSLeverageRatioSolo_Layout2ExposureAmountContext366);
                                    
                                    exposureAmountValue370.setUnitRef(INR365);
                                    exposureAmountValue370.setDecimals("INF");
                                    exposureAmountValue370.setValue(new BigDecimal(zeroDBSLeverageRatioSolo_Layout2ExposureAmountValue367));
                                    
                                    
                                    JAXBElement<MonetaryItemType> exposureAmountElement371 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(exposureAmountValue370);
                                    bodyElements.add(exposureAmountElement371);
                                
                            }
                        
                            
                                
                                Unit INR372 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR372 = createUnitIfNotExist(INR372, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - NotionalPrincipalAmount
                            
                                Map zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountMap376 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountMap376.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountMap376.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:OffBalanceSheetExposureItemMember");
                                    
                                    
                                    String zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountValue374 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountMap376);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountFieldDataValue375 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountMap376, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountValue374 = zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountFieldDataValue375 == null ? "" : zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountFieldDataValue375.getValue();
                                    if(zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountFieldDataValue375 != null ) {
                                        if(!zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountFieldDataValue375.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountFieldDataValue375.getStartDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountFieldDataValue375.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountFieldDataValue375.getEndDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountFieldDataValue375.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountFieldDataValue375.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioSolo_Layout2NotionalPrincipalAmountContext373 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountMap376 );
                                        
                                
                                if(zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountValue374 != null && !"".equals(zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountValue374)) {
                                    
                                    addContext(DBSLeverageRatioSolo_Layout2NotionalPrincipalAmountContext373, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType notionalPrincipalAmountValue377 = new MonetaryItemType();
                                    notionalPrincipalAmountValue377.setContextRef(DBSLeverageRatioSolo_Layout2NotionalPrincipalAmountContext373);
                                    
                                    notionalPrincipalAmountValue377.setUnitRef(INR372);
                                    notionalPrincipalAmountValue377.setDecimals("INF");
                                    notionalPrincipalAmountValue377.setValue(new BigDecimal(zeroDBSLeverageRatioSolo_Layout2NotionalPrincipalAmountValue374));
                                    
                                    
                                    JAXBElement<MonetaryItemType> notionalPrincipalAmountElement378 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(notionalPrincipalAmountValue377);
                                    bodyElements.add(notionalPrincipalAmountElement378);
                                
                            }
                        
                            
                                
                                Unit INR379 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR379 = createUnitIfNotExist(INR379, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - ExposureAmount
                            
                                Map zeroDBSLeverageRatioSolo_Layout2ExposureAmountMap383 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout2ExposureAmountMap383.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout2ExposureAmountMap383.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:OffBalanceSheetExposureItemMember");
                                    
                                    
                                    String zeroDBSLeverageRatioSolo_Layout2ExposureAmountValue381 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), zeroDBSLeverageRatioSolo_Layout2ExposureAmountMap383);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioSolo_Layout2ExposureAmountFieldDataValue382 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), zeroDBSLeverageRatioSolo_Layout2ExposureAmountMap383, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioSolo_Layout2ExposureAmountValue381 = zeroDBSLeverageRatioSolo_Layout2ExposureAmountFieldDataValue382 == null ? "" : zeroDBSLeverageRatioSolo_Layout2ExposureAmountFieldDataValue382.getValue();
                                    if(zeroDBSLeverageRatioSolo_Layout2ExposureAmountFieldDataValue382 != null ) {
                                        if(!zeroDBSLeverageRatioSolo_Layout2ExposureAmountFieldDataValue382.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioSolo_Layout2ExposureAmountFieldDataValue382.getStartDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout2ExposureAmountFieldDataValue382.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioSolo_Layout2ExposureAmountFieldDataValue382.getEndDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout2ExposureAmountFieldDataValue382.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioSolo_Layout2ExposureAmountFieldDataValue382.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioSolo_Layout2ExposureAmountContext380 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioSolo_Layout2ExposureAmountMap383 );
                                        
                                
                                if(zeroDBSLeverageRatioSolo_Layout2ExposureAmountValue381 != null && !"".equals(zeroDBSLeverageRatioSolo_Layout2ExposureAmountValue381)) {
                                    
                                    addContext(DBSLeverageRatioSolo_Layout2ExposureAmountContext380, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType exposureAmountValue384 = new MonetaryItemType();
                                    exposureAmountValue384.setContextRef(DBSLeverageRatioSolo_Layout2ExposureAmountContext380);
                                    
                                    exposureAmountValue384.setUnitRef(INR379);
                                    exposureAmountValue384.setDecimals("INF");
                                    exposureAmountValue384.setValue(new BigDecimal(zeroDBSLeverageRatioSolo_Layout2ExposureAmountValue381));
                                    
                                    
                                    JAXBElement<MonetaryItemType> exposureAmountElement385 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(exposureAmountValue384);
                                    bodyElements.add(exposureAmountElement385);
                                
                            }
                        
                        
                    
                    
            
                    
                    
                    
                    return "";
                    }

                
                    
                
                // if typemembers exist
                
                
                
                // create variable for subclass DBSLeverageRatioSolo_Layout3 if any typeMembers then List or Single
                //DBSLeverageRatioSolo_Layout3 dBSLeverageRatioSolo_Layout3 = mainReportData.getDBSLeverageRatioSolo_Layout3();
                
                    private String dBSLeverageRatioSolo_Layout3Method(DBSLeverageRatioSolo_Layout3 dBSLeverageRatioSolo_Layout3, List<String> contextIdentifiers,  List<Context> contextElements, List<Object> bodyElements, List<String> unitIdentifiers, List<Unit> unitElements, String bankCode, String startDateDefault, String endDateDefault, String periodDateDefault)
                
                    {
                        String startDate = startDateDefault;
                        String endDate = endDateDefault;
                        String periodDate = periodDateDefault;
                    DBSLeverageRatioSolo_Layout3 field = dBSLeverageRatioSolo_Layout3;
                    
                    
                        
                        
                            
                                
                                Unit INR386 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR386 = createUnitIfNotExist(INR386, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - NotionalPrincipalAmount
                            
                                Map zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountMap390 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountMap390.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountMap390.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:CreditDerivativesProtectionSoldMember");
                                    
                                    
                                    String zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountValue388 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountMap390);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue389 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountMap390, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountValue388 = zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue389 == null ? "" : zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue389.getValue();
                                    if(zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue389 != null ) {
                                        if(!zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue389.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue389.getStartDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue389.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue389.getEndDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue389.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue389.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountContext387 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountMap390 );
                                        
                                
                                if(zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountValue388 != null && !"".equals(zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountValue388)) {
                                    
                                    addContext(DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountContext387, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType notionalPrincipalAmountValue391 = new MonetaryItemType();
                                    notionalPrincipalAmountValue391.setContextRef(DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountContext387);
                                    
                                    notionalPrincipalAmountValue391.setUnitRef(INR386);
                                    notionalPrincipalAmountValue391.setDecimals("INF");
                                    notionalPrincipalAmountValue391.setValue(new BigDecimal(zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountValue388));
                                    
                                    
                                    JAXBElement<MonetaryItemType> notionalPrincipalAmountElement392 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(notionalPrincipalAmountValue391);
                                    bodyElements.add(notionalPrincipalAmountElement392);
                                
                            }
                        
                            
                                
                                Unit INR393 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR393 = createUnitIfNotExist(INR393, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - ReplacementCost
                            
                                Map zeroDBSLeverageRatioSolo_Layout3ReplacementCostMap397 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout3ReplacementCostMap397.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout3ReplacementCostMap397.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:CreditDerivativesProtectionSoldMember");
                                    
                                    
                                    String zeroDBSLeverageRatioSolo_Layout3ReplacementCostValue395 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), zeroDBSLeverageRatioSolo_Layout3ReplacementCostMap397);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue396 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), zeroDBSLeverageRatioSolo_Layout3ReplacementCostMap397, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioSolo_Layout3ReplacementCostValue395 = zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue396 == null ? "" : zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue396.getValue();
                                    if(zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue396 != null ) {
                                        if(!zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue396.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue396.getStartDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue396.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue396.getEndDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue396.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue396.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioSolo_Layout3ReplacementCostContext394 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioSolo_Layout3ReplacementCostMap397 );
                                        
                                
                                if(zeroDBSLeverageRatioSolo_Layout3ReplacementCostValue395 != null && !"".equals(zeroDBSLeverageRatioSolo_Layout3ReplacementCostValue395)) {
                                    
                                    addContext(DBSLeverageRatioSolo_Layout3ReplacementCostContext394, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType replacementCostValue398 = new MonetaryItemType();
                                    replacementCostValue398.setContextRef(DBSLeverageRatioSolo_Layout3ReplacementCostContext394);
                                    
                                    replacementCostValue398.setUnitRef(INR393);
                                    replacementCostValue398.setDecimals("INF");
                                    replacementCostValue398.setValue(new BigDecimal(zeroDBSLeverageRatioSolo_Layout3ReplacementCostValue395));
                                    
                                    
                                    JAXBElement<MonetaryItemType> replacementCostElement399 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(replacementCostValue398);
                                    bodyElements.add(replacementCostElement399);
                                
                            }
                        
                            
                                
                                Unit INR400 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR400 = createUnitIfNotExist(INR400, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - PotentialFutureExposure
                            
                                Map zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureMap404 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureMap404.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureMap404.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:CreditDerivativesProtectionSoldMember");
                                    
                                    
                                    String zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureValue402 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureMap404);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureFieldDataValue403 = DBS06ReportUtil.retrieveFieldDataForElement(field.getPotentialFutureExposure(), zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureMap404, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureValue402 = zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureFieldDataValue403 == null ? "" : zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureFieldDataValue403.getValue();
                                    if(zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureFieldDataValue403 != null ) {
                                        if(!zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureFieldDataValue403.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureFieldDataValue403.getStartDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureFieldDataValue403.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureFieldDataValue403.getEndDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureFieldDataValue403.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureFieldDataValue403.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioSolo_Layout3PotentialFutureExposureContext401 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureMap404 );
                                        
                                
                                if(zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureValue402 != null && !"".equals(zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureValue402)) {
                                    
                                    addContext(DBSLeverageRatioSolo_Layout3PotentialFutureExposureContext401, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType potentialFutureExposureValue405 = new MonetaryItemType();
                                    potentialFutureExposureValue405.setContextRef(DBSLeverageRatioSolo_Layout3PotentialFutureExposureContext401);
                                    
                                    potentialFutureExposureValue405.setUnitRef(INR400);
                                    potentialFutureExposureValue405.setDecimals("INF");
                                    potentialFutureExposureValue405.setValue(new BigDecimal(zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureValue402));
                                    
                                    
                                    JAXBElement<MonetaryItemType> potentialFutureExposureElement406 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createPotentialFutureExposure(potentialFutureExposureValue405);
                                    bodyElements.add(potentialFutureExposureElement406);
                                
                            }
                        
                            
                                
                                Unit INR407 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR407 = createUnitIfNotExist(INR407, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - NotionalPrincipalAmount
                            
                                Map zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountMap411 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountMap411.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountMap411.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:CreditDerivativesProtectionBoughtMember");
                                    
                                    
                                    String zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountValue409 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountMap411);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue410 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountMap411, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountValue409 = zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue410 == null ? "" : zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue410.getValue();
                                    if(zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue410 != null ) {
                                        if(!zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue410.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue410.getStartDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue410.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue410.getEndDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue410.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue410.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountContext408 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountMap411 );
                                        
                                
                                if(zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountValue409 != null && !"".equals(zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountValue409)) {
                                    
                                    addContext(DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountContext408, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType notionalPrincipalAmountValue412 = new MonetaryItemType();
                                    notionalPrincipalAmountValue412.setContextRef(DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountContext408);
                                    
                                    notionalPrincipalAmountValue412.setUnitRef(INR407);
                                    notionalPrincipalAmountValue412.setDecimals("INF");
                                    notionalPrincipalAmountValue412.setValue(new BigDecimal(zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountValue409));
                                    
                                    
                                    JAXBElement<MonetaryItemType> notionalPrincipalAmountElement413 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(notionalPrincipalAmountValue412);
                                    bodyElements.add(notionalPrincipalAmountElement413);
                                
                            }
                        
                            
                                
                                Unit INR414 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR414 = createUnitIfNotExist(INR414, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - ReplacementCost
                            
                                Map zeroDBSLeverageRatioSolo_Layout3ReplacementCostMap418 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout3ReplacementCostMap418.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout3ReplacementCostMap418.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:CreditDerivativesProtectionBoughtMember");
                                    
                                    
                                    String zeroDBSLeverageRatioSolo_Layout3ReplacementCostValue416 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), zeroDBSLeverageRatioSolo_Layout3ReplacementCostMap418);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue417 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), zeroDBSLeverageRatioSolo_Layout3ReplacementCostMap418, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioSolo_Layout3ReplacementCostValue416 = zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue417 == null ? "" : zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue417.getValue();
                                    if(zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue417 != null ) {
                                        if(!zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue417.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue417.getStartDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue417.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue417.getEndDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue417.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue417.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioSolo_Layout3ReplacementCostContext415 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioSolo_Layout3ReplacementCostMap418 );
                                        
                                
                                if(zeroDBSLeverageRatioSolo_Layout3ReplacementCostValue416 != null && !"".equals(zeroDBSLeverageRatioSolo_Layout3ReplacementCostValue416)) {
                                    
                                    addContext(DBSLeverageRatioSolo_Layout3ReplacementCostContext415, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType replacementCostValue419 = new MonetaryItemType();
                                    replacementCostValue419.setContextRef(DBSLeverageRatioSolo_Layout3ReplacementCostContext415);
                                    
                                    replacementCostValue419.setUnitRef(INR414);
                                    replacementCostValue419.setDecimals("INF");
                                    replacementCostValue419.setValue(new BigDecimal(zeroDBSLeverageRatioSolo_Layout3ReplacementCostValue416));
                                    
                                    
                                    JAXBElement<MonetaryItemType> replacementCostElement420 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(replacementCostValue419);
                                    bodyElements.add(replacementCostElement420);
                                
                            }
                        
                            
                                
                                Unit INR421 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR421 = createUnitIfNotExist(INR421, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - PotentialFutureExposure
                            
                                Map zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureMap425 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureMap425.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureMap425.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:CreditDerivativesProtectionBoughtMember");
                                    
                                    
                                    String zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureValue423 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureMap425);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureFieldDataValue424 = DBS06ReportUtil.retrieveFieldDataForElement(field.getPotentialFutureExposure(), zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureMap425, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureValue423 = zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureFieldDataValue424 == null ? "" : zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureFieldDataValue424.getValue();
                                    if(zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureFieldDataValue424 != null ) {
                                        if(!zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureFieldDataValue424.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureFieldDataValue424.getStartDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureFieldDataValue424.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureFieldDataValue424.getEndDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureFieldDataValue424.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureFieldDataValue424.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioSolo_Layout3PotentialFutureExposureContext422 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureMap425 );
                                        
                                
                                if(zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureValue423 != null && !"".equals(zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureValue423)) {
                                    
                                    addContext(DBSLeverageRatioSolo_Layout3PotentialFutureExposureContext422, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType potentialFutureExposureValue426 = new MonetaryItemType();
                                    potentialFutureExposureValue426.setContextRef(DBSLeverageRatioSolo_Layout3PotentialFutureExposureContext422);
                                    
                                    potentialFutureExposureValue426.setUnitRef(INR421);
                                    potentialFutureExposureValue426.setDecimals("INF");
                                    potentialFutureExposureValue426.setValue(new BigDecimal(zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureValue423));
                                    
                                    
                                    JAXBElement<MonetaryItemType> potentialFutureExposureElement427 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createPotentialFutureExposure(potentialFutureExposureValue426);
                                    bodyElements.add(potentialFutureExposureElement427);
                                
                            }
                        
                            
                                
                                Unit INR428 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR428 = createUnitIfNotExist(INR428, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - NotionalPrincipalAmount
                            
                                Map zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountMap432 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountMap432.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountMap432.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:FinancialDerivativesMember");
                                    
                                    
                                    String zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountValue430 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountMap432);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue431 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountMap432, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountValue430 = zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue431 == null ? "" : zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue431.getValue();
                                    if(zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue431 != null ) {
                                        if(!zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue431.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue431.getStartDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue431.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue431.getEndDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue431.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue431.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountContext429 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountMap432 );
                                        
                                
                                if(zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountValue430 != null && !"".equals(zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountValue430)) {
                                    
                                    addContext(DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountContext429, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType notionalPrincipalAmountValue433 = new MonetaryItemType();
                                    notionalPrincipalAmountValue433.setContextRef(DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountContext429);
                                    
                                    notionalPrincipalAmountValue433.setUnitRef(INR428);
                                    notionalPrincipalAmountValue433.setDecimals("INF");
                                    notionalPrincipalAmountValue433.setValue(new BigDecimal(zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountValue430));
                                    
                                    
                                    JAXBElement<MonetaryItemType> notionalPrincipalAmountElement434 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(notionalPrincipalAmountValue433);
                                    bodyElements.add(notionalPrincipalAmountElement434);
                                
                            }
                        
                            
                                
                                Unit INR435 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR435 = createUnitIfNotExist(INR435, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - ReplacementCost
                            
                                Map zeroDBSLeverageRatioSolo_Layout3ReplacementCostMap439 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout3ReplacementCostMap439.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout3ReplacementCostMap439.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:FinancialDerivativesMember");
                                    
                                    
                                    String zeroDBSLeverageRatioSolo_Layout3ReplacementCostValue437 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), zeroDBSLeverageRatioSolo_Layout3ReplacementCostMap439);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue438 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), zeroDBSLeverageRatioSolo_Layout3ReplacementCostMap439, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioSolo_Layout3ReplacementCostValue437 = zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue438 == null ? "" : zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue438.getValue();
                                    if(zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue438 != null ) {
                                        if(!zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue438.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue438.getStartDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue438.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue438.getEndDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue438.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue438.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioSolo_Layout3ReplacementCostContext436 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioSolo_Layout3ReplacementCostMap439 );
                                        
                                
                                if(zeroDBSLeverageRatioSolo_Layout3ReplacementCostValue437 != null && !"".equals(zeroDBSLeverageRatioSolo_Layout3ReplacementCostValue437)) {
                                    
                                    addContext(DBSLeverageRatioSolo_Layout3ReplacementCostContext436, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType replacementCostValue440 = new MonetaryItemType();
                                    replacementCostValue440.setContextRef(DBSLeverageRatioSolo_Layout3ReplacementCostContext436);
                                    
                                    replacementCostValue440.setUnitRef(INR435);
                                    replacementCostValue440.setDecimals("INF");
                                    replacementCostValue440.setValue(new BigDecimal(zeroDBSLeverageRatioSolo_Layout3ReplacementCostValue437));
                                    
                                    
                                    JAXBElement<MonetaryItemType> replacementCostElement441 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(replacementCostValue440);
                                    bodyElements.add(replacementCostElement441);
                                
                            }
                        
                            
                                
                                Unit INR442 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR442 = createUnitIfNotExist(INR442, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - PotentialFutureExposure
                            
                                Map zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureMap446 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureMap446.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureMap446.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:FinancialDerivativesMember");
                                    
                                    
                                    String zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureValue444 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureMap446);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureFieldDataValue445 = DBS06ReportUtil.retrieveFieldDataForElement(field.getPotentialFutureExposure(), zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureMap446, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureValue444 = zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureFieldDataValue445 == null ? "" : zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureFieldDataValue445.getValue();
                                    if(zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureFieldDataValue445 != null ) {
                                        if(!zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureFieldDataValue445.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureFieldDataValue445.getStartDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureFieldDataValue445.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureFieldDataValue445.getEndDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureFieldDataValue445.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureFieldDataValue445.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioSolo_Layout3PotentialFutureExposureContext443 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureMap446 );
                                        
                                
                                if(zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureValue444 != null && !"".equals(zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureValue444)) {
                                    
                                    addContext(DBSLeverageRatioSolo_Layout3PotentialFutureExposureContext443, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType potentialFutureExposureValue447 = new MonetaryItemType();
                                    potentialFutureExposureValue447.setContextRef(DBSLeverageRatioSolo_Layout3PotentialFutureExposureContext443);
                                    
                                    potentialFutureExposureValue447.setUnitRef(INR442);
                                    potentialFutureExposureValue447.setDecimals("INF");
                                    potentialFutureExposureValue447.setValue(new BigDecimal(zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureValue444));
                                    
                                    
                                    JAXBElement<MonetaryItemType> potentialFutureExposureElement448 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createPotentialFutureExposure(potentialFutureExposureValue447);
                                    bodyElements.add(potentialFutureExposureElement448);
                                
                            }
                        
                            
                                
                                Unit INR449 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR449 = createUnitIfNotExist(INR449, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - NotionalPrincipalAmount
                            
                                Map zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountMap453 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountMap453.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountMap453.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:AggregateOfCreditAndFinancialDerivativesMember");
                                    
                                    
                                    String zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountValue451 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountMap453);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue452 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountMap453, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountValue451 = zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue452 == null ? "" : zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue452.getValue();
                                    if(zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue452 != null ) {
                                        if(!zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue452.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue452.getStartDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue452.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue452.getEndDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue452.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue452.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountContext450 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountMap453 );
                                        
                                
                                if(zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountValue451 != null && !"".equals(zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountValue451)) {
                                    
                                    addContext(DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountContext450, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType notionalPrincipalAmountValue454 = new MonetaryItemType();
                                    notionalPrincipalAmountValue454.setContextRef(DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountContext450);
                                    
                                    notionalPrincipalAmountValue454.setUnitRef(INR449);
                                    notionalPrincipalAmountValue454.setDecimals("INF");
                                    notionalPrincipalAmountValue454.setValue(new BigDecimal(zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountValue451));
                                    
                                    
                                    JAXBElement<MonetaryItemType> notionalPrincipalAmountElement455 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(notionalPrincipalAmountValue454);
                                    bodyElements.add(notionalPrincipalAmountElement455);
                                
                            }
                        
                            
                                
                                Unit INR456 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR456 = createUnitIfNotExist(INR456, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - ReplacementCost
                            
                                Map zeroDBSLeverageRatioSolo_Layout3ReplacementCostMap460 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout3ReplacementCostMap460.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout3ReplacementCostMap460.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:AggregateOfCreditAndFinancialDerivativesMember");
                                    
                                    
                                    String zeroDBSLeverageRatioSolo_Layout3ReplacementCostValue458 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), zeroDBSLeverageRatioSolo_Layout3ReplacementCostMap460);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue459 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), zeroDBSLeverageRatioSolo_Layout3ReplacementCostMap460, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioSolo_Layout3ReplacementCostValue458 = zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue459 == null ? "" : zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue459.getValue();
                                    if(zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue459 != null ) {
                                        if(!zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue459.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue459.getStartDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue459.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue459.getEndDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue459.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue459.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioSolo_Layout3ReplacementCostContext457 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioSolo_Layout3ReplacementCostMap460 );
                                        
                                
                                if(zeroDBSLeverageRatioSolo_Layout3ReplacementCostValue458 != null && !"".equals(zeroDBSLeverageRatioSolo_Layout3ReplacementCostValue458)) {
                                    
                                    addContext(DBSLeverageRatioSolo_Layout3ReplacementCostContext457, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType replacementCostValue461 = new MonetaryItemType();
                                    replacementCostValue461.setContextRef(DBSLeverageRatioSolo_Layout3ReplacementCostContext457);
                                    
                                    replacementCostValue461.setUnitRef(INR456);
                                    replacementCostValue461.setDecimals("INF");
                                    replacementCostValue461.setValue(new BigDecimal(zeroDBSLeverageRatioSolo_Layout3ReplacementCostValue458));
                                    
                                    
                                    JAXBElement<MonetaryItemType> replacementCostElement462 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(replacementCostValue461);
                                    bodyElements.add(replacementCostElement462);
                                
                            }
                        
                            
                                
                                Unit INR463 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR463 = createUnitIfNotExist(INR463, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - PotentialFutureExposure
                            
                                Map zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureMap467 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureMap467.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureMap467.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:AggregateOfCreditAndFinancialDerivativesMember");
                                    
                                    
                                    String zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureValue465 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureMap467);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureFieldDataValue466 = DBS06ReportUtil.retrieveFieldDataForElement(field.getPotentialFutureExposure(), zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureMap467, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureValue465 = zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureFieldDataValue466 == null ? "" : zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureFieldDataValue466.getValue();
                                    if(zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureFieldDataValue466 != null ) {
                                        if(!zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureFieldDataValue466.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureFieldDataValue466.getStartDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureFieldDataValue466.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureFieldDataValue466.getEndDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureFieldDataValue466.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureFieldDataValue466.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioSolo_Layout3PotentialFutureExposureContext464 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureMap467 );
                                        
                                
                                if(zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureValue465 != null && !"".equals(zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureValue465)) {
                                    
                                    addContext(DBSLeverageRatioSolo_Layout3PotentialFutureExposureContext464, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType potentialFutureExposureValue468 = new MonetaryItemType();
                                    potentialFutureExposureValue468.setContextRef(DBSLeverageRatioSolo_Layout3PotentialFutureExposureContext464);
                                    
                                    potentialFutureExposureValue468.setUnitRef(INR463);
                                    potentialFutureExposureValue468.setDecimals("INF");
                                    potentialFutureExposureValue468.setValue(new BigDecimal(zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureValue465));
                                    
                                    
                                    JAXBElement<MonetaryItemType> potentialFutureExposureElement469 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createPotentialFutureExposure(potentialFutureExposureValue468);
                                    bodyElements.add(potentialFutureExposureElement469);
                                
                            }
                        
                            
                                
                                Unit INR470 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR470 = createUnitIfNotExist(INR470, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - NotionalPrincipalAmount
                            
                                Map zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountMap474 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountMap474.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountMap474.put("in-rbi-rep:ExposureClassAxis", "rbi-core:ExposureToQCCPsMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountMap474.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:AggregateOfCreditAndFinancialDerivativesMember");
                                    
                                    
                                    String zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountValue472 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountMap474);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue473 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountMap474, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountValue472 = zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue473 == null ? "" : zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue473.getValue();
                                    if(zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue473 != null ) {
                                        if(!zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue473.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue473.getStartDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue473.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue473.getEndDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue473.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue473.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountContext471 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountMap474 );
                                        
                                
                                if(zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountValue472 != null && !"".equals(zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountValue472)) {
                                    
                                    addContext(DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountContext471, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType notionalPrincipalAmountValue475 = new MonetaryItemType();
                                    notionalPrincipalAmountValue475.setContextRef(DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountContext471);
                                    
                                    notionalPrincipalAmountValue475.setUnitRef(INR470);
                                    notionalPrincipalAmountValue475.setDecimals("INF");
                                    notionalPrincipalAmountValue475.setValue(new BigDecimal(zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountValue472));
                                    
                                    
                                    JAXBElement<MonetaryItemType> notionalPrincipalAmountElement476 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(notionalPrincipalAmountValue475);
                                    bodyElements.add(notionalPrincipalAmountElement476);
                                
                            }
                        
                            
                                
                                Unit INR477 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR477 = createUnitIfNotExist(INR477, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - ReplacementCost
                            
                                Map zeroDBSLeverageRatioSolo_Layout3ReplacementCostMap481 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout3ReplacementCostMap481.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout3ReplacementCostMap481.put("in-rbi-rep:ExposureClassAxis", "rbi-core:ExposureToQCCPsMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout3ReplacementCostMap481.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:AggregateOfCreditAndFinancialDerivativesMember");
                                    
                                    
                                    String zeroDBSLeverageRatioSolo_Layout3ReplacementCostValue479 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), zeroDBSLeverageRatioSolo_Layout3ReplacementCostMap481);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue480 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), zeroDBSLeverageRatioSolo_Layout3ReplacementCostMap481, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioSolo_Layout3ReplacementCostValue479 = zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue480 == null ? "" : zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue480.getValue();
                                    if(zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue480 != null ) {
                                        if(!zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue480.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue480.getStartDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue480.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue480.getEndDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue480.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue480.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioSolo_Layout3ReplacementCostContext478 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioSolo_Layout3ReplacementCostMap481 );
                                        
                                
                                if(zeroDBSLeverageRatioSolo_Layout3ReplacementCostValue479 != null && !"".equals(zeroDBSLeverageRatioSolo_Layout3ReplacementCostValue479)) {
                                    
                                    addContext(DBSLeverageRatioSolo_Layout3ReplacementCostContext478, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType replacementCostValue482 = new MonetaryItemType();
                                    replacementCostValue482.setContextRef(DBSLeverageRatioSolo_Layout3ReplacementCostContext478);
                                    
                                    replacementCostValue482.setUnitRef(INR477);
                                    replacementCostValue482.setDecimals("INF");
                                    replacementCostValue482.setValue(new BigDecimal(zeroDBSLeverageRatioSolo_Layout3ReplacementCostValue479));
                                    
                                    
                                    JAXBElement<MonetaryItemType> replacementCostElement483 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(replacementCostValue482);
                                    bodyElements.add(replacementCostElement483);
                                
                            }
                        
                            
                                
                                Unit INR484 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR484 = createUnitIfNotExist(INR484, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - PotentialFutureExposure
                            
                                Map zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureMap488 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureMap488.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureMap488.put("in-rbi-rep:ExposureClassAxis", "rbi-core:ExposureToQCCPsMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureMap488.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:AggregateOfCreditAndFinancialDerivativesMember");
                                    
                                    
                                    String zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureValue486 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureMap488);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureFieldDataValue487 = DBS06ReportUtil.retrieveFieldDataForElement(field.getPotentialFutureExposure(), zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureMap488, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureValue486 = zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureFieldDataValue487 == null ? "" : zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureFieldDataValue487.getValue();
                                    if(zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureFieldDataValue487 != null ) {
                                        if(!zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureFieldDataValue487.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureFieldDataValue487.getStartDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureFieldDataValue487.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureFieldDataValue487.getEndDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureFieldDataValue487.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureFieldDataValue487.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioSolo_Layout3PotentialFutureExposureContext485 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureMap488 );
                                        
                                
                                if(zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureValue486 != null && !"".equals(zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureValue486)) {
                                    
                                    addContext(DBSLeverageRatioSolo_Layout3PotentialFutureExposureContext485, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType potentialFutureExposureValue489 = new MonetaryItemType();
                                    potentialFutureExposureValue489.setContextRef(DBSLeverageRatioSolo_Layout3PotentialFutureExposureContext485);
                                    
                                    potentialFutureExposureValue489.setUnitRef(INR484);
                                    potentialFutureExposureValue489.setDecimals("INF");
                                    potentialFutureExposureValue489.setValue(new BigDecimal(zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureValue486));
                                    
                                    
                                    JAXBElement<MonetaryItemType> potentialFutureExposureElement490 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createPotentialFutureExposure(potentialFutureExposureValue489);
                                    bodyElements.add(potentialFutureExposureElement490);
                                
                            }
                        
                            
                                
                                Unit INR491 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR491 = createUnitIfNotExist(INR491, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - NotionalPrincipalAmount
                            
                                Map zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountMap495 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountMap495.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountMap495.put("in-rbi-rep:ExposureClassAxis", "rbi-core:ExposureToNonQCCPsMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountMap495.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:AggregateOfCreditAndFinancialDerivativesMember");
                                    
                                    
                                    String zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountValue493 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountMap495);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue494 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountMap495, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountValue493 = zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue494 == null ? "" : zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue494.getValue();
                                    if(zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue494 != null ) {
                                        if(!zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue494.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue494.getStartDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue494.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue494.getEndDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue494.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue494.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountContext492 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountMap495 );
                                        
                                
                                if(zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountValue493 != null && !"".equals(zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountValue493)) {
                                    
                                    addContext(DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountContext492, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType notionalPrincipalAmountValue496 = new MonetaryItemType();
                                    notionalPrincipalAmountValue496.setContextRef(DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountContext492);
                                    
                                    notionalPrincipalAmountValue496.setUnitRef(INR491);
                                    notionalPrincipalAmountValue496.setDecimals("INF");
                                    notionalPrincipalAmountValue496.setValue(new BigDecimal(zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountValue493));
                                    
                                    
                                    JAXBElement<MonetaryItemType> notionalPrincipalAmountElement497 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(notionalPrincipalAmountValue496);
                                    bodyElements.add(notionalPrincipalAmountElement497);
                                
                            }
                        
                            
                                
                                Unit INR498 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR498 = createUnitIfNotExist(INR498, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - ReplacementCost
                            
                                Map zeroDBSLeverageRatioSolo_Layout3ReplacementCostMap502 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout3ReplacementCostMap502.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout3ReplacementCostMap502.put("in-rbi-rep:ExposureClassAxis", "rbi-core:ExposureToNonQCCPsMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout3ReplacementCostMap502.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:AggregateOfCreditAndFinancialDerivativesMember");
                                    
                                    
                                    String zeroDBSLeverageRatioSolo_Layout3ReplacementCostValue500 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), zeroDBSLeverageRatioSolo_Layout3ReplacementCostMap502);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue501 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), zeroDBSLeverageRatioSolo_Layout3ReplacementCostMap502, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioSolo_Layout3ReplacementCostValue500 = zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue501 == null ? "" : zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue501.getValue();
                                    if(zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue501 != null ) {
                                        if(!zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue501.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue501.getStartDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue501.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue501.getEndDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue501.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue501.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioSolo_Layout3ReplacementCostContext499 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioSolo_Layout3ReplacementCostMap502 );
                                        
                                
                                if(zeroDBSLeverageRatioSolo_Layout3ReplacementCostValue500 != null && !"".equals(zeroDBSLeverageRatioSolo_Layout3ReplacementCostValue500)) {
                                    
                                    addContext(DBSLeverageRatioSolo_Layout3ReplacementCostContext499, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType replacementCostValue503 = new MonetaryItemType();
                                    replacementCostValue503.setContextRef(DBSLeverageRatioSolo_Layout3ReplacementCostContext499);
                                    
                                    replacementCostValue503.setUnitRef(INR498);
                                    replacementCostValue503.setDecimals("INF");
                                    replacementCostValue503.setValue(new BigDecimal(zeroDBSLeverageRatioSolo_Layout3ReplacementCostValue500));
                                    
                                    
                                    JAXBElement<MonetaryItemType> replacementCostElement504 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(replacementCostValue503);
                                    bodyElements.add(replacementCostElement504);
                                
                            }
                        
                            
                                
                                Unit INR505 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR505 = createUnitIfNotExist(INR505, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - PotentialFutureExposure
                            
                                Map zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureMap509 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureMap509.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureMap509.put("in-rbi-rep:ExposureClassAxis", "rbi-core:ExposureToNonQCCPsMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureMap509.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:AggregateOfCreditAndFinancialDerivativesMember");
                                    
                                    
                                    String zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureValue507 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureMap509);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureFieldDataValue508 = DBS06ReportUtil.retrieveFieldDataForElement(field.getPotentialFutureExposure(), zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureMap509, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureValue507 = zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureFieldDataValue508 == null ? "" : zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureFieldDataValue508.getValue();
                                    if(zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureFieldDataValue508 != null ) {
                                        if(!zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureFieldDataValue508.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureFieldDataValue508.getStartDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureFieldDataValue508.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureFieldDataValue508.getEndDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureFieldDataValue508.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureFieldDataValue508.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioSolo_Layout3PotentialFutureExposureContext506 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureMap509 );
                                        
                                
                                if(zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureValue507 != null && !"".equals(zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureValue507)) {
                                    
                                    addContext(DBSLeverageRatioSolo_Layout3PotentialFutureExposureContext506, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType potentialFutureExposureValue510 = new MonetaryItemType();
                                    potentialFutureExposureValue510.setContextRef(DBSLeverageRatioSolo_Layout3PotentialFutureExposureContext506);
                                    
                                    potentialFutureExposureValue510.setUnitRef(INR505);
                                    potentialFutureExposureValue510.setDecimals("INF");
                                    potentialFutureExposureValue510.setValue(new BigDecimal(zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureValue507));
                                    
                                    
                                    JAXBElement<MonetaryItemType> potentialFutureExposureElement511 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createPotentialFutureExposure(potentialFutureExposureValue510);
                                    bodyElements.add(potentialFutureExposureElement511);
                                
                            }
                        
                            
                                
                                Unit INR512 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR512 = createUnitIfNotExist(INR512, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - NotionalPrincipalAmount
                            
                                Map zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountMap516 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountMap516.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountMap516.put("in-rbi-rep:ExposureClassAxis", "rbi-core:ExposureDueToNonCentrallyClearedDerivativesMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountMap516.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:AggregateOfCreditAndFinancialDerivativesMember");
                                    
                                    
                                    String zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountValue514 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountMap516);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue515 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountMap516, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountValue514 = zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue515 == null ? "" : zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue515.getValue();
                                    if(zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue515 != null ) {
                                        if(!zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue515.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue515.getStartDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue515.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue515.getEndDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue515.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue515.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountContext513 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountMap516 );
                                        
                                
                                if(zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountValue514 != null && !"".equals(zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountValue514)) {
                                    
                                    addContext(DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountContext513, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType notionalPrincipalAmountValue517 = new MonetaryItemType();
                                    notionalPrincipalAmountValue517.setContextRef(DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountContext513);
                                    
                                    notionalPrincipalAmountValue517.setUnitRef(INR512);
                                    notionalPrincipalAmountValue517.setDecimals("INF");
                                    notionalPrincipalAmountValue517.setValue(new BigDecimal(zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountValue514));
                                    
                                    
                                    JAXBElement<MonetaryItemType> notionalPrincipalAmountElement518 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(notionalPrincipalAmountValue517);
                                    bodyElements.add(notionalPrincipalAmountElement518);
                                
                            }
                        
                            
                                
                                Unit INR519 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR519 = createUnitIfNotExist(INR519, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - ReplacementCost
                            
                                Map zeroDBSLeverageRatioSolo_Layout3ReplacementCostMap523 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout3ReplacementCostMap523.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout3ReplacementCostMap523.put("in-rbi-rep:ExposureClassAxis", "rbi-core:ExposureDueToNonCentrallyClearedDerivativesMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout3ReplacementCostMap523.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:AggregateOfCreditAndFinancialDerivativesMember");
                                    
                                    
                                    String zeroDBSLeverageRatioSolo_Layout3ReplacementCostValue521 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), zeroDBSLeverageRatioSolo_Layout3ReplacementCostMap523);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue522 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), zeroDBSLeverageRatioSolo_Layout3ReplacementCostMap523, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioSolo_Layout3ReplacementCostValue521 = zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue522 == null ? "" : zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue522.getValue();
                                    if(zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue522 != null ) {
                                        if(!zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue522.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue522.getStartDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue522.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue522.getEndDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue522.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue522.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioSolo_Layout3ReplacementCostContext520 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioSolo_Layout3ReplacementCostMap523 );
                                        
                                
                                if(zeroDBSLeverageRatioSolo_Layout3ReplacementCostValue521 != null && !"".equals(zeroDBSLeverageRatioSolo_Layout3ReplacementCostValue521)) {
                                    
                                    addContext(DBSLeverageRatioSolo_Layout3ReplacementCostContext520, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType replacementCostValue524 = new MonetaryItemType();
                                    replacementCostValue524.setContextRef(DBSLeverageRatioSolo_Layout3ReplacementCostContext520);
                                    
                                    replacementCostValue524.setUnitRef(INR519);
                                    replacementCostValue524.setDecimals("INF");
                                    replacementCostValue524.setValue(new BigDecimal(zeroDBSLeverageRatioSolo_Layout3ReplacementCostValue521));
                                    
                                    
                                    JAXBElement<MonetaryItemType> replacementCostElement525 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(replacementCostValue524);
                                    bodyElements.add(replacementCostElement525);
                                
                            }
                        
                            
                                
                                Unit INR526 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR526 = createUnitIfNotExist(INR526, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - PotentialFutureExposure
                            
                                Map zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureMap530 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureMap530.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureMap530.put("in-rbi-rep:ExposureClassAxis", "rbi-core:ExposureDueToNonCentrallyClearedDerivativesMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureMap530.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:AggregateOfCreditAndFinancialDerivativesMember");
                                    
                                    
                                    String zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureValue528 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureMap530);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureFieldDataValue529 = DBS06ReportUtil.retrieveFieldDataForElement(field.getPotentialFutureExposure(), zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureMap530, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureValue528 = zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureFieldDataValue529 == null ? "" : zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureFieldDataValue529.getValue();
                                    if(zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureFieldDataValue529 != null ) {
                                        if(!zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureFieldDataValue529.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureFieldDataValue529.getStartDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureFieldDataValue529.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureFieldDataValue529.getEndDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureFieldDataValue529.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureFieldDataValue529.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioSolo_Layout3PotentialFutureExposureContext527 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureMap530 );
                                        
                                
                                if(zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureValue528 != null && !"".equals(zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureValue528)) {
                                    
                                    addContext(DBSLeverageRatioSolo_Layout3PotentialFutureExposureContext527, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType potentialFutureExposureValue531 = new MonetaryItemType();
                                    potentialFutureExposureValue531.setContextRef(DBSLeverageRatioSolo_Layout3PotentialFutureExposureContext527);
                                    
                                    potentialFutureExposureValue531.setUnitRef(INR526);
                                    potentialFutureExposureValue531.setDecimals("INF");
                                    potentialFutureExposureValue531.setValue(new BigDecimal(zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureValue528));
                                    
                                    
                                    JAXBElement<MonetaryItemType> potentialFutureExposureElement532 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createPotentialFutureExposure(potentialFutureExposureValue531);
                                    bodyElements.add(potentialFutureExposureElement532);
                                
                            }
                        
                            
                                
                                Unit INR533 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR533 = createUnitIfNotExist(INR533, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - NotionalPrincipalAmount
                            
                                Map zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountMap537 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountMap537.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountMap537.put("in-rbi-rep:ExposureClassAxis", "rbi-core:OtherExposuresMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountMap537.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:AggregateOfCreditAndFinancialDerivativesMember");
                                    
                                    
                                    String zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountValue535 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountMap537);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue536 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountMap537, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountValue535 = zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue536 == null ? "" : zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue536.getValue();
                                    if(zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue536 != null ) {
                                        if(!zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue536.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue536.getStartDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue536.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue536.getEndDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue536.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue536.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountContext534 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountMap537 );
                                        
                                
                                if(zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountValue535 != null && !"".equals(zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountValue535)) {
                                    
                                    addContext(DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountContext534, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType notionalPrincipalAmountValue538 = new MonetaryItemType();
                                    notionalPrincipalAmountValue538.setContextRef(DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountContext534);
                                    
                                    notionalPrincipalAmountValue538.setUnitRef(INR533);
                                    notionalPrincipalAmountValue538.setDecimals("INF");
                                    notionalPrincipalAmountValue538.setValue(new BigDecimal(zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountValue535));
                                    
                                    
                                    JAXBElement<MonetaryItemType> notionalPrincipalAmountElement539 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(notionalPrincipalAmountValue538);
                                    bodyElements.add(notionalPrincipalAmountElement539);
                                
                            }
                        
                            
                                
                                Unit INR540 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR540 = createUnitIfNotExist(INR540, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - ReplacementCost
                            
                                Map zeroDBSLeverageRatioSolo_Layout3ReplacementCostMap544 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout3ReplacementCostMap544.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout3ReplacementCostMap544.put("in-rbi-rep:ExposureClassAxis", "rbi-core:OtherExposuresMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout3ReplacementCostMap544.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:AggregateOfCreditAndFinancialDerivativesMember");
                                    
                                    
                                    String zeroDBSLeverageRatioSolo_Layout3ReplacementCostValue542 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), zeroDBSLeverageRatioSolo_Layout3ReplacementCostMap544);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue543 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), zeroDBSLeverageRatioSolo_Layout3ReplacementCostMap544, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioSolo_Layout3ReplacementCostValue542 = zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue543 == null ? "" : zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue543.getValue();
                                    if(zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue543 != null ) {
                                        if(!zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue543.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue543.getStartDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue543.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue543.getEndDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue543.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue543.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioSolo_Layout3ReplacementCostContext541 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioSolo_Layout3ReplacementCostMap544 );
                                        
                                
                                if(zeroDBSLeverageRatioSolo_Layout3ReplacementCostValue542 != null && !"".equals(zeroDBSLeverageRatioSolo_Layout3ReplacementCostValue542)) {
                                    
                                    addContext(DBSLeverageRatioSolo_Layout3ReplacementCostContext541, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType replacementCostValue545 = new MonetaryItemType();
                                    replacementCostValue545.setContextRef(DBSLeverageRatioSolo_Layout3ReplacementCostContext541);
                                    
                                    replacementCostValue545.setUnitRef(INR540);
                                    replacementCostValue545.setDecimals("INF");
                                    replacementCostValue545.setValue(new BigDecimal(zeroDBSLeverageRatioSolo_Layout3ReplacementCostValue542));
                                    
                                    
                                    JAXBElement<MonetaryItemType> replacementCostElement546 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(replacementCostValue545);
                                    bodyElements.add(replacementCostElement546);
                                
                            }
                        
                            
                                
                                Unit INR547 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR547 = createUnitIfNotExist(INR547, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - PotentialFutureExposure
                            
                                Map zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureMap551 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureMap551.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureMap551.put("in-rbi-rep:ExposureClassAxis", "rbi-core:OtherExposuresMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureMap551.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:AggregateOfCreditAndFinancialDerivativesMember");
                                    
                                    
                                    String zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureValue549 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureMap551);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureFieldDataValue550 = DBS06ReportUtil.retrieveFieldDataForElement(field.getPotentialFutureExposure(), zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureMap551, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureValue549 = zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureFieldDataValue550 == null ? "" : zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureFieldDataValue550.getValue();
                                    if(zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureFieldDataValue550 != null ) {
                                        if(!zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureFieldDataValue550.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureFieldDataValue550.getStartDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureFieldDataValue550.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureFieldDataValue550.getEndDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureFieldDataValue550.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureFieldDataValue550.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioSolo_Layout3PotentialFutureExposureContext548 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureMap551 );
                                        
                                
                                if(zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureValue549 != null && !"".equals(zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureValue549)) {
                                    
                                    addContext(DBSLeverageRatioSolo_Layout3PotentialFutureExposureContext548, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType potentialFutureExposureValue552 = new MonetaryItemType();
                                    potentialFutureExposureValue552.setContextRef(DBSLeverageRatioSolo_Layout3PotentialFutureExposureContext548);
                                    
                                    potentialFutureExposureValue552.setUnitRef(INR547);
                                    potentialFutureExposureValue552.setDecimals("INF");
                                    potentialFutureExposureValue552.setValue(new BigDecimal(zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureValue549));
                                    
                                    
                                    JAXBElement<MonetaryItemType> potentialFutureExposureElement553 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createPotentialFutureExposure(potentialFutureExposureValue552);
                                    bodyElements.add(potentialFutureExposureElement553);
                                
                            }
                        
                            
                                
                                Unit INR554 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR554 = createUnitIfNotExist(INR554, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - NotionalPrincipalAmount
                            
                                Map zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountMap558 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountMap558.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountMap558.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:ExemptedCCPLegOfClientClearedTradeExposuresMember");
                                    
                                    
                                    String zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountValue556 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountMap558);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue557 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountMap558, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountValue556 = zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue557 == null ? "" : zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue557.getValue();
                                    if(zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue557 != null ) {
                                        if(!zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue557.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue557.getStartDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue557.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue557.getEndDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue557.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue557.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountContext555 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountMap558 );
                                        
                                
                                if(zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountValue556 != null && !"".equals(zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountValue556)) {
                                    
                                    addContext(DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountContext555, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType notionalPrincipalAmountValue559 = new MonetaryItemType();
                                    notionalPrincipalAmountValue559.setContextRef(DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountContext555);
                                    
                                    notionalPrincipalAmountValue559.setUnitRef(INR554);
                                    notionalPrincipalAmountValue559.setDecimals("INF");
                                    notionalPrincipalAmountValue559.setValue(new BigDecimal(zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountValue556));
                                    
                                    
                                    JAXBElement<MonetaryItemType> notionalPrincipalAmountElement560 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(notionalPrincipalAmountValue559);
                                    bodyElements.add(notionalPrincipalAmountElement560);
                                
                            }
                        
                            
                                
                                Unit INR561 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR561 = createUnitIfNotExist(INR561, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - ReplacementCost
                            
                                Map zeroDBSLeverageRatioSolo_Layout3ReplacementCostMap565 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout3ReplacementCostMap565.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout3ReplacementCostMap565.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:ExemptedCCPLegOfClientClearedTradeExposuresMember");
                                    
                                    
                                    String zeroDBSLeverageRatioSolo_Layout3ReplacementCostValue563 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), zeroDBSLeverageRatioSolo_Layout3ReplacementCostMap565);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue564 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), zeroDBSLeverageRatioSolo_Layout3ReplacementCostMap565, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioSolo_Layout3ReplacementCostValue563 = zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue564 == null ? "" : zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue564.getValue();
                                    if(zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue564 != null ) {
                                        if(!zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue564.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue564.getStartDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue564.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue564.getEndDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue564.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue564.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioSolo_Layout3ReplacementCostContext562 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioSolo_Layout3ReplacementCostMap565 );
                                        
                                
                                if(zeroDBSLeverageRatioSolo_Layout3ReplacementCostValue563 != null && !"".equals(zeroDBSLeverageRatioSolo_Layout3ReplacementCostValue563)) {
                                    
                                    addContext(DBSLeverageRatioSolo_Layout3ReplacementCostContext562, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType replacementCostValue566 = new MonetaryItemType();
                                    replacementCostValue566.setContextRef(DBSLeverageRatioSolo_Layout3ReplacementCostContext562);
                                    
                                    replacementCostValue566.setUnitRef(INR561);
                                    replacementCostValue566.setDecimals("INF");
                                    replacementCostValue566.setValue(new BigDecimal(zeroDBSLeverageRatioSolo_Layout3ReplacementCostValue563));
                                    
                                    
                                    JAXBElement<MonetaryItemType> replacementCostElement567 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(replacementCostValue566);
                                    bodyElements.add(replacementCostElement567);
                                
                            }
                        
                            
                                
                                Unit INR568 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR568 = createUnitIfNotExist(INR568, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - PotentialFutureExposure
                            
                                Map zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureMap572 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureMap572.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureMap572.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:ExemptedCCPLegOfClientClearedTradeExposuresMember");
                                    
                                    
                                    String zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureValue570 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureMap572);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureFieldDataValue571 = DBS06ReportUtil.retrieveFieldDataForElement(field.getPotentialFutureExposure(), zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureMap572, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureValue570 = zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureFieldDataValue571 == null ? "" : zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureFieldDataValue571.getValue();
                                    if(zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureFieldDataValue571 != null ) {
                                        if(!zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureFieldDataValue571.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureFieldDataValue571.getStartDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureFieldDataValue571.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureFieldDataValue571.getEndDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureFieldDataValue571.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureFieldDataValue571.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioSolo_Layout3PotentialFutureExposureContext569 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureMap572 );
                                        
                                
                                if(zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureValue570 != null && !"".equals(zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureValue570)) {
                                    
                                    addContext(DBSLeverageRatioSolo_Layout3PotentialFutureExposureContext569, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType potentialFutureExposureValue573 = new MonetaryItemType();
                                    potentialFutureExposureValue573.setContextRef(DBSLeverageRatioSolo_Layout3PotentialFutureExposureContext569);
                                    
                                    potentialFutureExposureValue573.setUnitRef(INR568);
                                    potentialFutureExposureValue573.setDecimals("INF");
                                    potentialFutureExposureValue573.setValue(new BigDecimal(zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureValue570));
                                    
                                    
                                    JAXBElement<MonetaryItemType> potentialFutureExposureElement574 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createPotentialFutureExposure(potentialFutureExposureValue573);
                                    bodyElements.add(potentialFutureExposureElement574);
                                
                            }
                        
                            
                                
                                Unit INR575 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR575 = createUnitIfNotExist(INR575, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - NotionalPrincipalAmount
                            
                                Map zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountMap579 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountMap579.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountMap579.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:EffectiveNotionalAmountOfWrittenCreditDerivativesMember");
                                    
                                    
                                    String zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountValue577 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountMap579);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue578 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountMap579, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountValue577 = zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue578 == null ? "" : zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue578.getValue();
                                    if(zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue578 != null ) {
                                        if(!zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue578.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue578.getStartDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue578.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue578.getEndDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue578.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue578.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountContext576 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountMap579 );
                                        
                                
                                if(zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountValue577 != null && !"".equals(zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountValue577)) {
                                    
                                    addContext(DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountContext576, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType notionalPrincipalAmountValue580 = new MonetaryItemType();
                                    notionalPrincipalAmountValue580.setContextRef(DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountContext576);
                                    
                                    notionalPrincipalAmountValue580.setUnitRef(INR575);
                                    notionalPrincipalAmountValue580.setDecimals("INF");
                                    notionalPrincipalAmountValue580.setValue(new BigDecimal(zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountValue577));
                                    
                                    
                                    JAXBElement<MonetaryItemType> notionalPrincipalAmountElement581 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(notionalPrincipalAmountValue580);
                                    bodyElements.add(notionalPrincipalAmountElement581);
                                
                            }
                        
                            
                                
                                Unit INR582 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR582 = createUnitIfNotExist(INR582, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - NotionalPrincipalAmount
                            
                                Map zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountMap586 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountMap586.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountMap586.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:NegativeChangeInFairValueOfWrittenCreditDerivativesMember");
                                    
                                    
                                    String zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountValue584 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountMap586);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue585 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountMap586, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountValue584 = zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue585 == null ? "" : zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue585.getValue();
                                    if(zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue585 != null ) {
                                        if(!zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue585.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue585.getStartDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue585.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue585.getEndDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue585.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue585.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountContext583 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountMap586 );
                                        
                                
                                if(zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountValue584 != null && !"".equals(zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountValue584)) {
                                    
                                    addContext(DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountContext583, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType notionalPrincipalAmountValue587 = new MonetaryItemType();
                                    notionalPrincipalAmountValue587.setContextRef(DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountContext583);
                                    
                                    notionalPrincipalAmountValue587.setUnitRef(INR582);
                                    notionalPrincipalAmountValue587.setDecimals("INF");
                                    notionalPrincipalAmountValue587.setValue(new BigDecimal(zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountValue584));
                                    
                                    
                                    JAXBElement<MonetaryItemType> notionalPrincipalAmountElement588 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(notionalPrincipalAmountValue587);
                                    bodyElements.add(notionalPrincipalAmountElement588);
                                
                            }
                        
                            
                                
                                Unit INR589 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR589 = createUnitIfNotExist(INR589, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - NotionalPrincipalAmount
                            
                                Map zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountMap593 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountMap593.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountMap593.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:EffectiveNotionalAmountOfWrittenCreditDerivativesAdjustedForNegativeChangeInFairValueMember");
                                    
                                    
                                    String zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountValue591 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountMap593);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue592 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountMap593, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountValue591 = zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue592 == null ? "" : zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue592.getValue();
                                    if(zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue592 != null ) {
                                        if(!zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue592.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue592.getStartDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue592.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue592.getEndDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue592.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue592.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountContext590 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountMap593 );
                                        
                                
                                if(zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountValue591 != null && !"".equals(zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountValue591)) {
                                    
                                    addContext(DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountContext590, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType notionalPrincipalAmountValue594 = new MonetaryItemType();
                                    notionalPrincipalAmountValue594.setContextRef(DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountContext590);
                                    
                                    notionalPrincipalAmountValue594.setUnitRef(INR589);
                                    notionalPrincipalAmountValue594.setDecimals("INF");
                                    notionalPrincipalAmountValue594.setValue(new BigDecimal(zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountValue591));
                                    
                                    
                                    JAXBElement<MonetaryItemType> notionalPrincipalAmountElement595 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(notionalPrincipalAmountValue594);
                                    bodyElements.add(notionalPrincipalAmountElement595);
                                
                            }
                        
                            
                                
                                Unit INR596 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR596 = createUnitIfNotExist(INR596, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - NotionalPrincipalAmount
                            
                                Map zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountMap600 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountMap600.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountMap600.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:CreditDerivativesBoughtMember");
                                    
                                    
                                    String zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountValue598 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountMap600);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue599 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountMap600, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountValue598 = zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue599 == null ? "" : zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue599.getValue();
                                    if(zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue599 != null ) {
                                        if(!zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue599.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue599.getStartDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue599.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue599.getEndDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue599.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue599.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountContext597 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountMap600 );
                                        
                                
                                if(zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountValue598 != null && !"".equals(zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountValue598)) {
                                    
                                    addContext(DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountContext597, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType notionalPrincipalAmountValue601 = new MonetaryItemType();
                                    notionalPrincipalAmountValue601.setContextRef(DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountContext597);
                                    
                                    notionalPrincipalAmountValue601.setUnitRef(INR596);
                                    notionalPrincipalAmountValue601.setDecimals("INF");
                                    notionalPrincipalAmountValue601.setValue(new BigDecimal(zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountValue598));
                                    
                                    
                                    JAXBElement<MonetaryItemType> notionalPrincipalAmountElement602 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(notionalPrincipalAmountValue601);
                                    bodyElements.add(notionalPrincipalAmountElement602);
                                
                            }
                        
                            
                                
                                Unit INR603 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR603 = createUnitIfNotExist(INR603, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - NotionalPrincipalAmount
                            
                                Map zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountMap607 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountMap607.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountMap607.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:NetAdjustedEffectiveNotionalAmountOfWrittenCreditDerivativesMember");
                                    
                                    
                                    String zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountValue605 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountMap607);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue606 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountMap607, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountValue605 = zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue606 == null ? "" : zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue606.getValue();
                                    if(zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue606 != null ) {
                                        if(!zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue606.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue606.getStartDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue606.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue606.getEndDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue606.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue606.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountContext604 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountMap607 );
                                        
                                
                                if(zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountValue605 != null && !"".equals(zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountValue605)) {
                                    
                                    addContext(DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountContext604, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType notionalPrincipalAmountValue608 = new MonetaryItemType();
                                    notionalPrincipalAmountValue608.setContextRef(DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountContext604);
                                    
                                    notionalPrincipalAmountValue608.setUnitRef(INR603);
                                    notionalPrincipalAmountValue608.setDecimals("INF");
                                    notionalPrincipalAmountValue608.setValue(new BigDecimal(zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountValue605));
                                    
                                    
                                    JAXBElement<MonetaryItemType> notionalPrincipalAmountElement609 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(notionalPrincipalAmountValue608);
                                    bodyElements.add(notionalPrincipalAmountElement609);
                                
                            }
                        
                            
                                
                                Unit INR610 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR610 = createUnitIfNotExist(INR610, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - NotionalPrincipalAmount
                            
                                Map zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountMap614 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountMap614.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountMap614.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:DeductionForAjustmentOfPFEAmountRelatingToWrittenCreditDerivativesMember");
                                    
                                    
                                    String zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountValue612 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountMap614);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue613 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountMap614, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountValue612 = zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue613 == null ? "" : zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue613.getValue();
                                    if(zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue613 != null ) {
                                        if(!zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue613.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue613.getStartDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue613.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue613.getEndDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue613.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue613.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountContext611 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountMap614 );
                                        
                                
                                if(zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountValue612 != null && !"".equals(zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountValue612)) {
                                    
                                    addContext(DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountContext611, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType notionalPrincipalAmountValue615 = new MonetaryItemType();
                                    notionalPrincipalAmountValue615.setContextRef(DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountContext611);
                                    
                                    notionalPrincipalAmountValue615.setUnitRef(INR610);
                                    notionalPrincipalAmountValue615.setDecimals("INF");
                                    notionalPrincipalAmountValue615.setValue(new BigDecimal(zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountValue612));
                                    
                                    
                                    JAXBElement<MonetaryItemType> notionalPrincipalAmountElement616 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(notionalPrincipalAmountValue615);
                                    bodyElements.add(notionalPrincipalAmountElement616);
                                
                            }
                        
                            
                                
                                Unit INR617 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR617 = createUnitIfNotExist(INR617, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - NotionalPrincipalAmount
                            
                                Map zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountMap621 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountMap621.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountMap621.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:WrittenCreditDerivativesNetMember");
                                    
                                    
                                    String zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountValue619 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountMap621);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue620 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountMap621, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountValue619 = zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue620 == null ? "" : zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue620.getValue();
                                    if(zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue620 != null ) {
                                        if(!zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue620.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue620.getStartDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue620.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue620.getEndDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue620.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountFieldDataValue620.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountContext618 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountMap621 );
                                        
                                
                                if(zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountValue619 != null && !"".equals(zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountValue619)) {
                                    
                                    addContext(DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountContext618, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType notionalPrincipalAmountValue622 = new MonetaryItemType();
                                    notionalPrincipalAmountValue622.setContextRef(DBSLeverageRatioSolo_Layout3NotionalPrincipalAmountContext618);
                                    
                                    notionalPrincipalAmountValue622.setUnitRef(INR617);
                                    notionalPrincipalAmountValue622.setDecimals("INF");
                                    notionalPrincipalAmountValue622.setValue(new BigDecimal(zeroDBSLeverageRatioSolo_Layout3NotionalPrincipalAmountValue619));
                                    
                                    
                                    JAXBElement<MonetaryItemType> notionalPrincipalAmountElement623 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(notionalPrincipalAmountValue622);
                                    bodyElements.add(notionalPrincipalAmountElement623);
                                
                            }
                        
                            
                                
                                Unit INR624 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR624 = createUnitIfNotExist(INR624, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - ReplacementCost
                            
                                Map zeroDBSLeverageRatioSolo_Layout3ReplacementCostMap628 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout3ReplacementCostMap628.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout3ReplacementCostMap628.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:GrossUpForDerivativeCollateralProvidedWhereDeductedFromTheBalanceSheetMember");
                                    
                                    
                                    String zeroDBSLeverageRatioSolo_Layout3ReplacementCostValue626 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), zeroDBSLeverageRatioSolo_Layout3ReplacementCostMap628);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue627 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), zeroDBSLeverageRatioSolo_Layout3ReplacementCostMap628, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioSolo_Layout3ReplacementCostValue626 = zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue627 == null ? "" : zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue627.getValue();
                                    if(zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue627 != null ) {
                                        if(!zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue627.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue627.getStartDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue627.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue627.getEndDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue627.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue627.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioSolo_Layout3ReplacementCostContext625 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioSolo_Layout3ReplacementCostMap628 );
                                        
                                
                                if(zeroDBSLeverageRatioSolo_Layout3ReplacementCostValue626 != null && !"".equals(zeroDBSLeverageRatioSolo_Layout3ReplacementCostValue626)) {
                                    
                                    addContext(DBSLeverageRatioSolo_Layout3ReplacementCostContext625, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType replacementCostValue629 = new MonetaryItemType();
                                    replacementCostValue629.setContextRef(DBSLeverageRatioSolo_Layout3ReplacementCostContext625);
                                    
                                    replacementCostValue629.setUnitRef(INR624);
                                    replacementCostValue629.setDecimals("INF");
                                    replacementCostValue629.setValue(new BigDecimal(zeroDBSLeverageRatioSolo_Layout3ReplacementCostValue626));
                                    
                                    
                                    JAXBElement<MonetaryItemType> replacementCostElement630 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(replacementCostValue629);
                                    bodyElements.add(replacementCostElement630);
                                
                            }
                        
                            
                                
                                Unit INR631 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR631 = createUnitIfNotExist(INR631, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - ReplacementCost
                            
                                Map zeroDBSLeverageRatioSolo_Layout3ReplacementCostMap635 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout3ReplacementCostMap635.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout3ReplacementCostMap635.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:EligibleCashVariationMarginReceivedInDerivativeExpsouresMember");
                                    
                                    
                                    String zeroDBSLeverageRatioSolo_Layout3ReplacementCostValue633 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), zeroDBSLeverageRatioSolo_Layout3ReplacementCostMap635);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue634 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), zeroDBSLeverageRatioSolo_Layout3ReplacementCostMap635, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioSolo_Layout3ReplacementCostValue633 = zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue634 == null ? "" : zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue634.getValue();
                                    if(zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue634 != null ) {
                                        if(!zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue634.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue634.getStartDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue634.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue634.getEndDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue634.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue634.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioSolo_Layout3ReplacementCostContext632 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioSolo_Layout3ReplacementCostMap635 );
                                        
                                
                                if(zeroDBSLeverageRatioSolo_Layout3ReplacementCostValue633 != null && !"".equals(zeroDBSLeverageRatioSolo_Layout3ReplacementCostValue633)) {
                                    
                                    addContext(DBSLeverageRatioSolo_Layout3ReplacementCostContext632, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType replacementCostValue636 = new MonetaryItemType();
                                    replacementCostValue636.setContextRef(DBSLeverageRatioSolo_Layout3ReplacementCostContext632);
                                    
                                    replacementCostValue636.setUnitRef(INR631);
                                    replacementCostValue636.setDecimals("INF");
                                    replacementCostValue636.setValue(new BigDecimal(zeroDBSLeverageRatioSolo_Layout3ReplacementCostValue633));
                                    
                                    
                                    JAXBElement<MonetaryItemType> replacementCostElement637 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(replacementCostValue636);
                                    bodyElements.add(replacementCostElement637);
                                
                            }
                        
                            
                                
                                Unit INR638 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR638 = createUnitIfNotExist(INR638, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - ReplacementCost
                            
                                Map zeroDBSLeverageRatioSolo_Layout3ReplacementCostMap642 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout3ReplacementCostMap642.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout3ReplacementCostMap642.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:ReceivableAssetsForCashVariationMarginProvidedInDerivativeExposuresMember");
                                    
                                    
                                    String zeroDBSLeverageRatioSolo_Layout3ReplacementCostValue640 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), zeroDBSLeverageRatioSolo_Layout3ReplacementCostMap642);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue641 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), zeroDBSLeverageRatioSolo_Layout3ReplacementCostMap642, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioSolo_Layout3ReplacementCostValue640 = zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue641 == null ? "" : zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue641.getValue();
                                    if(zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue641 != null ) {
                                        if(!zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue641.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue641.getStartDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue641.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue641.getEndDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue641.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue641.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioSolo_Layout3ReplacementCostContext639 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioSolo_Layout3ReplacementCostMap642 );
                                        
                                
                                if(zeroDBSLeverageRatioSolo_Layout3ReplacementCostValue640 != null && !"".equals(zeroDBSLeverageRatioSolo_Layout3ReplacementCostValue640)) {
                                    
                                    addContext(DBSLeverageRatioSolo_Layout3ReplacementCostContext639, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType replacementCostValue643 = new MonetaryItemType();
                                    replacementCostValue643.setContextRef(DBSLeverageRatioSolo_Layout3ReplacementCostContext639);
                                    
                                    replacementCostValue643.setUnitRef(INR638);
                                    replacementCostValue643.setDecimals("INF");
                                    replacementCostValue643.setValue(new BigDecimal(zeroDBSLeverageRatioSolo_Layout3ReplacementCostValue640));
                                    
                                    
                                    JAXBElement<MonetaryItemType> replacementCostElement644 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(replacementCostValue643);
                                    bodyElements.add(replacementCostElement644);
                                
                            }
                        
                            
                                
                                Unit INR645 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR645 = createUnitIfNotExist(INR645, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - ReplacementCost
                            
                                Map zeroDBSLeverageRatioSolo_Layout3ReplacementCostMap649 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout3ReplacementCostMap649.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout3ReplacementCostMap649.put("rbi-core:LeverageRatioExposureAxis", "in-rbi-rep:DerivativesMember");
                                    
                                    
                                    String zeroDBSLeverageRatioSolo_Layout3ReplacementCostValue647 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), zeroDBSLeverageRatioSolo_Layout3ReplacementCostMap649);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue648 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), zeroDBSLeverageRatioSolo_Layout3ReplacementCostMap649, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioSolo_Layout3ReplacementCostValue647 = zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue648 == null ? "" : zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue648.getValue();
                                    if(zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue648 != null ) {
                                        if(!zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue648.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue648.getStartDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue648.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue648.getEndDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue648.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioSolo_Layout3ReplacementCostFieldDataValue648.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioSolo_Layout3ReplacementCostContext646 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioSolo_Layout3ReplacementCostMap649 );
                                        
                                
                                if(zeroDBSLeverageRatioSolo_Layout3ReplacementCostValue647 != null && !"".equals(zeroDBSLeverageRatioSolo_Layout3ReplacementCostValue647)) {
                                    
                                    addContext(DBSLeverageRatioSolo_Layout3ReplacementCostContext646, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType replacementCostValue650 = new MonetaryItemType();
                                    replacementCostValue650.setContextRef(DBSLeverageRatioSolo_Layout3ReplacementCostContext646);
                                    
                                    replacementCostValue650.setUnitRef(INR645);
                                    replacementCostValue650.setDecimals("INF");
                                    replacementCostValue650.setValue(new BigDecimal(zeroDBSLeverageRatioSolo_Layout3ReplacementCostValue647));
                                    
                                    
                                    JAXBElement<MonetaryItemType> replacementCostElement651 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(replacementCostValue650);
                                    bodyElements.add(replacementCostElement651);
                                
                            }
                        
                            
                                
                                Unit INR652 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR652 = createUnitIfNotExist(INR652, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - PotentialFutureExposure
                            
                                Map zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureMap656 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureMap656.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureMap656.put("rbi-core:LeverageRatioExposureAxis", "in-rbi-rep:DerivativesMember");
                                    
                                    
                                    String zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureValue654 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureMap656);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureFieldDataValue655 = DBS06ReportUtil.retrieveFieldDataForElement(field.getPotentialFutureExposure(), zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureMap656, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureValue654 = zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureFieldDataValue655 == null ? "" : zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureFieldDataValue655.getValue();
                                    if(zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureFieldDataValue655 != null ) {
                                        if(!zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureFieldDataValue655.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureFieldDataValue655.getStartDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureFieldDataValue655.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureFieldDataValue655.getEndDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureFieldDataValue655.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureFieldDataValue655.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioSolo_Layout3PotentialFutureExposureContext653 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureMap656 );
                                        
                                
                                if(zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureValue654 != null && !"".equals(zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureValue654)) {
                                    
                                    addContext(DBSLeverageRatioSolo_Layout3PotentialFutureExposureContext653, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType potentialFutureExposureValue657 = new MonetaryItemType();
                                    potentialFutureExposureValue657.setContextRef(DBSLeverageRatioSolo_Layout3PotentialFutureExposureContext653);
                                    
                                    potentialFutureExposureValue657.setUnitRef(INR652);
                                    potentialFutureExposureValue657.setDecimals("INF");
                                    potentialFutureExposureValue657.setValue(new BigDecimal(zeroDBSLeverageRatioSolo_Layout3PotentialFutureExposureValue654));
                                    
                                    
                                    JAXBElement<MonetaryItemType> potentialFutureExposureElement658 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createPotentialFutureExposure(potentialFutureExposureValue657);
                                    bodyElements.add(potentialFutureExposureElement658);
                                
                            }
                        
                            
                                
                                Unit INR659 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR659 = createUnitIfNotExist(INR659, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - ExposureAmount
                            
                                Map zeroDBSLeverageRatioSolo_Layout3ExposureAmountMap663 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout3ExposureAmountMap663.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout3ExposureAmountMap663.put("rbi-core:LeverageRatioExposureAxis", "in-rbi-rep:DerivativesMember");
                                    
                                    
                                    String zeroDBSLeverageRatioSolo_Layout3ExposureAmountValue661 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), zeroDBSLeverageRatioSolo_Layout3ExposureAmountMap663);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioSolo_Layout3ExposureAmountFieldDataValue662 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), zeroDBSLeverageRatioSolo_Layout3ExposureAmountMap663, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioSolo_Layout3ExposureAmountValue661 = zeroDBSLeverageRatioSolo_Layout3ExposureAmountFieldDataValue662 == null ? "" : zeroDBSLeverageRatioSolo_Layout3ExposureAmountFieldDataValue662.getValue();
                                    if(zeroDBSLeverageRatioSolo_Layout3ExposureAmountFieldDataValue662 != null ) {
                                        if(!zeroDBSLeverageRatioSolo_Layout3ExposureAmountFieldDataValue662.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioSolo_Layout3ExposureAmountFieldDataValue662.getStartDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout3ExposureAmountFieldDataValue662.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioSolo_Layout3ExposureAmountFieldDataValue662.getEndDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout3ExposureAmountFieldDataValue662.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioSolo_Layout3ExposureAmountFieldDataValue662.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioSolo_Layout3ExposureAmountContext660 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioSolo_Layout3ExposureAmountMap663 );
                                        
                                
                                if(zeroDBSLeverageRatioSolo_Layout3ExposureAmountValue661 != null && !"".equals(zeroDBSLeverageRatioSolo_Layout3ExposureAmountValue661)) {
                                    
                                    addContext(DBSLeverageRatioSolo_Layout3ExposureAmountContext660, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType exposureAmountValue664 = new MonetaryItemType();
                                    exposureAmountValue664.setContextRef(DBSLeverageRatioSolo_Layout3ExposureAmountContext660);
                                    
                                    exposureAmountValue664.setUnitRef(INR659);
                                    exposureAmountValue664.setDecimals("INF");
                                    exposureAmountValue664.setValue(new BigDecimal(zeroDBSLeverageRatioSolo_Layout3ExposureAmountValue661));
                                    
                                    
                                    JAXBElement<MonetaryItemType> exposureAmountElement665 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(exposureAmountValue664);
                                    bodyElements.add(exposureAmountElement665);
                                
                            }
                        
                        
                    
                    
            
                    
                    
                    
                    return "";
                    }

                
                    
                
                // if typemembers exist
                
                
                
                // create variable for subclass DBSLeverageRatioSolo_Layout4 if any typeMembers then List or Single
                //DBSLeverageRatioSolo_Layout4 dBSLeverageRatioSolo_Layout4 = mainReportData.getDBSLeverageRatioSolo_Layout4();
                
                    private String dBSLeverageRatioSolo_Layout4Method(DBSLeverageRatioSolo_Layout4 dBSLeverageRatioSolo_Layout4, List<String> contextIdentifiers,  List<Context> contextElements, List<Object> bodyElements, List<String> unitIdentifiers, List<Unit> unitElements, String bankCode, String startDateDefault, String endDateDefault, String periodDateDefault)
                
                    {
                        String startDate = startDateDefault;
                        String endDate = endDateDefault;
                        String periodDate = periodDateDefault;
                    DBSLeverageRatioSolo_Layout4 field = dBSLeverageRatioSolo_Layout4;
                    
                    
                        
                        
                            
                                
                                Unit INR666 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR666 = createUnitIfNotExist(INR666, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - ExposureAmount
                            
                                Map zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap670 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap670.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap670.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:GrossSFTAssetsMember");
                                    
                                    
                                    String zeroDBSLeverageRatioSolo_Layout4ExposureAmountValue668 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap670);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue669 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap670, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioSolo_Layout4ExposureAmountValue668 = zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue669 == null ? "" : zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue669.getValue();
                                    if(zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue669 != null ) {
                                        if(!zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue669.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue669.getStartDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue669.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue669.getEndDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue669.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue669.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioSolo_Layout4ExposureAmountContext667 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap670 );
                                        
                                
                                if(zeroDBSLeverageRatioSolo_Layout4ExposureAmountValue668 != null && !"".equals(zeroDBSLeverageRatioSolo_Layout4ExposureAmountValue668)) {
                                    
                                    addContext(DBSLeverageRatioSolo_Layout4ExposureAmountContext667, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType exposureAmountValue671 = new MonetaryItemType();
                                    exposureAmountValue671.setContextRef(DBSLeverageRatioSolo_Layout4ExposureAmountContext667);
                                    
                                    exposureAmountValue671.setUnitRef(INR666);
                                    exposureAmountValue671.setDecimals("INF");
                                    exposureAmountValue671.setValue(new BigDecimal(zeroDBSLeverageRatioSolo_Layout4ExposureAmountValue668));
                                    
                                    
                                    JAXBElement<MonetaryItemType> exposureAmountElement672 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(exposureAmountValue671);
                                    bodyElements.add(exposureAmountElement672);
                                
                            }
                        
                            
                                
                                Unit INR673 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR673 = createUnitIfNotExist(INR673, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - ExposureAmount
                            
                                Map zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap677 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap677.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap677.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:AdjustmentsForSFTSalesAccountingTransactionsMember");
                                    
                                    
                                    String zeroDBSLeverageRatioSolo_Layout4ExposureAmountValue675 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap677);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue676 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap677, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioSolo_Layout4ExposureAmountValue675 = zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue676 == null ? "" : zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue676.getValue();
                                    if(zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue676 != null ) {
                                        if(!zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue676.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue676.getStartDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue676.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue676.getEndDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue676.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue676.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioSolo_Layout4ExposureAmountContext674 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap677 );
                                        
                                
                                if(zeroDBSLeverageRatioSolo_Layout4ExposureAmountValue675 != null && !"".equals(zeroDBSLeverageRatioSolo_Layout4ExposureAmountValue675)) {
                                    
                                    addContext(DBSLeverageRatioSolo_Layout4ExposureAmountContext674, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType exposureAmountValue678 = new MonetaryItemType();
                                    exposureAmountValue678.setContextRef(DBSLeverageRatioSolo_Layout4ExposureAmountContext674);
                                    
                                    exposureAmountValue678.setUnitRef(INR673);
                                    exposureAmountValue678.setDecimals("INF");
                                    exposureAmountValue678.setValue(new BigDecimal(zeroDBSLeverageRatioSolo_Layout4ExposureAmountValue675));
                                    
                                    
                                    JAXBElement<MonetaryItemType> exposureAmountElement679 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(exposureAmountValue678);
                                    bodyElements.add(exposureAmountElement679);
                                
                            }
                        
                            
                                
                                Unit INR680 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR680 = createUnitIfNotExist(INR680, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - ExposureAmount
                            
                                Map zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap684 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap684.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap684.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:GrossSFTAssetsAfterAdjustmentsForSalesAccountingTransactionsMember");
                                    
                                    
                                    String zeroDBSLeverageRatioSolo_Layout4ExposureAmountValue682 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap684);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue683 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap684, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioSolo_Layout4ExposureAmountValue682 = zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue683 == null ? "" : zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue683.getValue();
                                    if(zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue683 != null ) {
                                        if(!zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue683.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue683.getStartDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue683.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue683.getEndDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue683.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue683.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioSolo_Layout4ExposureAmountContext681 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap684 );
                                        
                                
                                if(zeroDBSLeverageRatioSolo_Layout4ExposureAmountValue682 != null && !"".equals(zeroDBSLeverageRatioSolo_Layout4ExposureAmountValue682)) {
                                    
                                    addContext(DBSLeverageRatioSolo_Layout4ExposureAmountContext681, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType exposureAmountValue685 = new MonetaryItemType();
                                    exposureAmountValue685.setContextRef(DBSLeverageRatioSolo_Layout4ExposureAmountContext681);
                                    
                                    exposureAmountValue685.setUnitRef(INR680);
                                    exposureAmountValue685.setDecimals("INF");
                                    exposureAmountValue685.setValue(new BigDecimal(zeroDBSLeverageRatioSolo_Layout4ExposureAmountValue682));
                                    
                                    
                                    JAXBElement<MonetaryItemType> exposureAmountElement686 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(exposureAmountValue685);
                                    bodyElements.add(exposureAmountElement686);
                                
                            }
                        
                            
                                
                                Unit INR687 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR687 = createUnitIfNotExist(INR687, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - ExposureAmount
                            
                                Map zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap691 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap691.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap691.put("in-rbi-rep:ExposureClassAxis", "rbi-core:ExposureToQCCPsMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap691.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:GrossSFTAssetsAfterAdjustmentsForSalesAccountingTransactionsMember");
                                    
                                    
                                    String zeroDBSLeverageRatioSolo_Layout4ExposureAmountValue689 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap691);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue690 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap691, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioSolo_Layout4ExposureAmountValue689 = zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue690 == null ? "" : zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue690.getValue();
                                    if(zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue690 != null ) {
                                        if(!zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue690.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue690.getStartDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue690.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue690.getEndDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue690.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue690.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioSolo_Layout4ExposureAmountContext688 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap691 );
                                        
                                
                                if(zeroDBSLeverageRatioSolo_Layout4ExposureAmountValue689 != null && !"".equals(zeroDBSLeverageRatioSolo_Layout4ExposureAmountValue689)) {
                                    
                                    addContext(DBSLeverageRatioSolo_Layout4ExposureAmountContext688, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType exposureAmountValue692 = new MonetaryItemType();
                                    exposureAmountValue692.setContextRef(DBSLeverageRatioSolo_Layout4ExposureAmountContext688);
                                    
                                    exposureAmountValue692.setUnitRef(INR687);
                                    exposureAmountValue692.setDecimals("INF");
                                    exposureAmountValue692.setValue(new BigDecimal(zeroDBSLeverageRatioSolo_Layout4ExposureAmountValue689));
                                    
                                    
                                    JAXBElement<MonetaryItemType> exposureAmountElement693 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(exposureAmountValue692);
                                    bodyElements.add(exposureAmountElement693);
                                
                            }
                        
                            
                                
                                Unit INR694 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR694 = createUnitIfNotExist(INR694, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - ExposureAmount
                            
                                Map zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap698 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap698.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap698.put("in-rbi-rep:ExposureClassAxis", "rbi-core:ExposureToNonQCCPsMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap698.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:GrossSFTAssetsAfterAdjustmentsForSalesAccountingTransactionsMember");
                                    
                                    
                                    String zeroDBSLeverageRatioSolo_Layout4ExposureAmountValue696 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap698);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue697 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap698, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioSolo_Layout4ExposureAmountValue696 = zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue697 == null ? "" : zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue697.getValue();
                                    if(zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue697 != null ) {
                                        if(!zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue697.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue697.getStartDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue697.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue697.getEndDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue697.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue697.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioSolo_Layout4ExposureAmountContext695 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap698 );
                                        
                                
                                if(zeroDBSLeverageRatioSolo_Layout4ExposureAmountValue696 != null && !"".equals(zeroDBSLeverageRatioSolo_Layout4ExposureAmountValue696)) {
                                    
                                    addContext(DBSLeverageRatioSolo_Layout4ExposureAmountContext695, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType exposureAmountValue699 = new MonetaryItemType();
                                    exposureAmountValue699.setContextRef(DBSLeverageRatioSolo_Layout4ExposureAmountContext695);
                                    
                                    exposureAmountValue699.setUnitRef(INR694);
                                    exposureAmountValue699.setDecimals("INF");
                                    exposureAmountValue699.setValue(new BigDecimal(zeroDBSLeverageRatioSolo_Layout4ExposureAmountValue696));
                                    
                                    
                                    JAXBElement<MonetaryItemType> exposureAmountElement700 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(exposureAmountValue699);
                                    bodyElements.add(exposureAmountElement700);
                                
                            }
                        
                            
                                
                                Unit INR701 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR701 = createUnitIfNotExist(INR701, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - ExposureAmount
                            
                                Map zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap705 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap705.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap705.put("in-rbi-rep:ExposureClassAxis", "rbi-core:ExposureDueToOtherSFTsMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap705.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:GrossSFTAssetsAfterAdjustmentsForSalesAccountingTransactionsMember");
                                    
                                    
                                    String zeroDBSLeverageRatioSolo_Layout4ExposureAmountValue703 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap705);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue704 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap705, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioSolo_Layout4ExposureAmountValue703 = zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue704 == null ? "" : zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue704.getValue();
                                    if(zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue704 != null ) {
                                        if(!zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue704.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue704.getStartDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue704.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue704.getEndDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue704.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue704.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioSolo_Layout4ExposureAmountContext702 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap705 );
                                        
                                
                                if(zeroDBSLeverageRatioSolo_Layout4ExposureAmountValue703 != null && !"".equals(zeroDBSLeverageRatioSolo_Layout4ExposureAmountValue703)) {
                                    
                                    addContext(DBSLeverageRatioSolo_Layout4ExposureAmountContext702, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType exposureAmountValue706 = new MonetaryItemType();
                                    exposureAmountValue706.setContextRef(DBSLeverageRatioSolo_Layout4ExposureAmountContext702);
                                    
                                    exposureAmountValue706.setUnitRef(INR701);
                                    exposureAmountValue706.setDecimals("INF");
                                    exposureAmountValue706.setValue(new BigDecimal(zeroDBSLeverageRatioSolo_Layout4ExposureAmountValue703));
                                    
                                    
                                    JAXBElement<MonetaryItemType> exposureAmountElement707 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(exposureAmountValue706);
                                    bodyElements.add(exposureAmountElement707);
                                
                            }
                        
                            
                                
                                Unit INR708 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR708 = createUnitIfNotExist(INR708, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - ExposureAmount
                            
                                Map zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap712 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap712.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap712.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:NettedAmountsOfCashPayablesAndCashReceivablesOfGrossSFTAssetsMember");
                                    
                                    
                                    String zeroDBSLeverageRatioSolo_Layout4ExposureAmountValue710 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap712);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue711 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap712, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioSolo_Layout4ExposureAmountValue710 = zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue711 == null ? "" : zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue711.getValue();
                                    if(zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue711 != null ) {
                                        if(!zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue711.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue711.getStartDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue711.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue711.getEndDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue711.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue711.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioSolo_Layout4ExposureAmountContext709 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap712 );
                                        
                                
                                if(zeroDBSLeverageRatioSolo_Layout4ExposureAmountValue710 != null && !"".equals(zeroDBSLeverageRatioSolo_Layout4ExposureAmountValue710)) {
                                    
                                    addContext(DBSLeverageRatioSolo_Layout4ExposureAmountContext709, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType exposureAmountValue713 = new MonetaryItemType();
                                    exposureAmountValue713.setContextRef(DBSLeverageRatioSolo_Layout4ExposureAmountContext709);
                                    
                                    exposureAmountValue713.setUnitRef(INR708);
                                    exposureAmountValue713.setDecimals("INF");
                                    exposureAmountValue713.setValue(new BigDecimal(zeroDBSLeverageRatioSolo_Layout4ExposureAmountValue710));
                                    
                                    
                                    JAXBElement<MonetaryItemType> exposureAmountElement714 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(exposureAmountValue713);
                                    bodyElements.add(exposureAmountElement714);
                                
                            }
                        
                            
                                
                                Unit INR715 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR715 = createUnitIfNotExist(INR715, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - ExposureAmount
                            
                                Map zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap719 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap719.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap719.put("in-rbi-rep:ExposureClassAxis", "rbi-core:ExposureToQCCPsMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap719.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:NettedAmountsOfCashPayablesAndCashReceivablesOfGrossSFTAssetsMember");
                                    
                                    
                                    String zeroDBSLeverageRatioSolo_Layout4ExposureAmountValue717 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap719);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue718 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap719, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioSolo_Layout4ExposureAmountValue717 = zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue718 == null ? "" : zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue718.getValue();
                                    if(zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue718 != null ) {
                                        if(!zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue718.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue718.getStartDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue718.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue718.getEndDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue718.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue718.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioSolo_Layout4ExposureAmountContext716 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap719 );
                                        
                                
                                if(zeroDBSLeverageRatioSolo_Layout4ExposureAmountValue717 != null && !"".equals(zeroDBSLeverageRatioSolo_Layout4ExposureAmountValue717)) {
                                    
                                    addContext(DBSLeverageRatioSolo_Layout4ExposureAmountContext716, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType exposureAmountValue720 = new MonetaryItemType();
                                    exposureAmountValue720.setContextRef(DBSLeverageRatioSolo_Layout4ExposureAmountContext716);
                                    
                                    exposureAmountValue720.setUnitRef(INR715);
                                    exposureAmountValue720.setDecimals("INF");
                                    exposureAmountValue720.setValue(new BigDecimal(zeroDBSLeverageRatioSolo_Layout4ExposureAmountValue717));
                                    
                                    
                                    JAXBElement<MonetaryItemType> exposureAmountElement721 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(exposureAmountValue720);
                                    bodyElements.add(exposureAmountElement721);
                                
                            }
                        
                            
                                
                                Unit INR722 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR722 = createUnitIfNotExist(INR722, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - ExposureAmount
                            
                                Map zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap726 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap726.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap726.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:NettedAmountsOfGrossSFTAssetsMember");
                                    
                                    
                                    String zeroDBSLeverageRatioSolo_Layout4ExposureAmountValue724 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap726);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue725 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap726, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioSolo_Layout4ExposureAmountValue724 = zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue725 == null ? "" : zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue725.getValue();
                                    if(zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue725 != null ) {
                                        if(!zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue725.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue725.getStartDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue725.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue725.getEndDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue725.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue725.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioSolo_Layout4ExposureAmountContext723 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap726 );
                                        
                                
                                if(zeroDBSLeverageRatioSolo_Layout4ExposureAmountValue724 != null && !"".equals(zeroDBSLeverageRatioSolo_Layout4ExposureAmountValue724)) {
                                    
                                    addContext(DBSLeverageRatioSolo_Layout4ExposureAmountContext723, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType exposureAmountValue727 = new MonetaryItemType();
                                    exposureAmountValue727.setContextRef(DBSLeverageRatioSolo_Layout4ExposureAmountContext723);
                                    
                                    exposureAmountValue727.setUnitRef(INR722);
                                    exposureAmountValue727.setDecimals("INF");
                                    exposureAmountValue727.setValue(new BigDecimal(zeroDBSLeverageRatioSolo_Layout4ExposureAmountValue724));
                                    
                                    
                                    JAXBElement<MonetaryItemType> exposureAmountElement728 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(exposureAmountValue727);
                                    bodyElements.add(exposureAmountElement728);
                                
                            }
                        
                            
                                
                                Unit INR729 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR729 = createUnitIfNotExist(INR729, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - ExposureAmount
                            
                                Map zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap733 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap733.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap733.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:GrossCCRExpsoureForSFTAssetsMember");
                                    
                                    
                                    String zeroDBSLeverageRatioSolo_Layout4ExposureAmountValue731 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap733);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue732 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap733, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioSolo_Layout4ExposureAmountValue731 = zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue732 == null ? "" : zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue732.getValue();
                                    if(zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue732 != null ) {
                                        if(!zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue732.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue732.getStartDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue732.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue732.getEndDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue732.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue732.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioSolo_Layout4ExposureAmountContext730 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap733 );
                                        
                                
                                if(zeroDBSLeverageRatioSolo_Layout4ExposureAmountValue731 != null && !"".equals(zeroDBSLeverageRatioSolo_Layout4ExposureAmountValue731)) {
                                    
                                    addContext(DBSLeverageRatioSolo_Layout4ExposureAmountContext730, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType exposureAmountValue734 = new MonetaryItemType();
                                    exposureAmountValue734.setContextRef(DBSLeverageRatioSolo_Layout4ExposureAmountContext730);
                                    
                                    exposureAmountValue734.setUnitRef(INR729);
                                    exposureAmountValue734.setDecimals("INF");
                                    exposureAmountValue734.setValue(new BigDecimal(zeroDBSLeverageRatioSolo_Layout4ExposureAmountValue731));
                                    
                                    
                                    JAXBElement<MonetaryItemType> exposureAmountElement735 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(exposureAmountValue734);
                                    bodyElements.add(exposureAmountElement735);
                                
                            }
                        
                            
                                
                                Unit INR736 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR736 = createUnitIfNotExist(INR736, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - ExposureAmount
                            
                                Map zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap740 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap740.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap740.put("in-rbi-rep:ExposureClassAxis", "rbi-core:ExposureToQCCPsMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap740.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:GrossCCRExpsoureForSFTAssetsMember");
                                    
                                    
                                    String zeroDBSLeverageRatioSolo_Layout4ExposureAmountValue738 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap740);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue739 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap740, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioSolo_Layout4ExposureAmountValue738 = zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue739 == null ? "" : zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue739.getValue();
                                    if(zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue739 != null ) {
                                        if(!zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue739.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue739.getStartDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue739.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue739.getEndDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue739.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue739.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioSolo_Layout4ExposureAmountContext737 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap740 );
                                        
                                
                                if(zeroDBSLeverageRatioSolo_Layout4ExposureAmountValue738 != null && !"".equals(zeroDBSLeverageRatioSolo_Layout4ExposureAmountValue738)) {
                                    
                                    addContext(DBSLeverageRatioSolo_Layout4ExposureAmountContext737, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType exposureAmountValue741 = new MonetaryItemType();
                                    exposureAmountValue741.setContextRef(DBSLeverageRatioSolo_Layout4ExposureAmountContext737);
                                    
                                    exposureAmountValue741.setUnitRef(INR736);
                                    exposureAmountValue741.setDecimals("INF");
                                    exposureAmountValue741.setValue(new BigDecimal(zeroDBSLeverageRatioSolo_Layout4ExposureAmountValue738));
                                    
                                    
                                    JAXBElement<MonetaryItemType> exposureAmountElement742 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(exposureAmountValue741);
                                    bodyElements.add(exposureAmountElement742);
                                
                            }
                        
                            
                                
                                Unit INR743 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR743 = createUnitIfNotExist(INR743, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - ExposureAmount
                            
                                Map zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap747 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap747.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap747.put("in-rbi-rep:ExposureClassAxis", "rbi-core:ExposureToNonQCCPsMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap747.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:GrossCCRExpsoureForSFTAssetsMember");
                                    
                                    
                                    String zeroDBSLeverageRatioSolo_Layout4ExposureAmountValue745 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap747);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue746 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap747, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioSolo_Layout4ExposureAmountValue745 = zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue746 == null ? "" : zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue746.getValue();
                                    if(zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue746 != null ) {
                                        if(!zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue746.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue746.getStartDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue746.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue746.getEndDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue746.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue746.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioSolo_Layout4ExposureAmountContext744 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap747 );
                                        
                                
                                if(zeroDBSLeverageRatioSolo_Layout4ExposureAmountValue745 != null && !"".equals(zeroDBSLeverageRatioSolo_Layout4ExposureAmountValue745)) {
                                    
                                    addContext(DBSLeverageRatioSolo_Layout4ExposureAmountContext744, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType exposureAmountValue748 = new MonetaryItemType();
                                    exposureAmountValue748.setContextRef(DBSLeverageRatioSolo_Layout4ExposureAmountContext744);
                                    
                                    exposureAmountValue748.setUnitRef(INR743);
                                    exposureAmountValue748.setDecimals("INF");
                                    exposureAmountValue748.setValue(new BigDecimal(zeroDBSLeverageRatioSolo_Layout4ExposureAmountValue745));
                                    
                                    
                                    JAXBElement<MonetaryItemType> exposureAmountElement749 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(exposureAmountValue748);
                                    bodyElements.add(exposureAmountElement749);
                                
                            }
                        
                            
                                
                                Unit INR750 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR750 = createUnitIfNotExist(INR750, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - ExposureAmount
                            
                                Map zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap754 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap754.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap754.put("in-rbi-rep:ExposureClassAxis", "rbi-core:ExposureDueToOtherSFTsMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap754.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:GrossCCRExpsoureForSFTAssetsMember");
                                    
                                    
                                    String zeroDBSLeverageRatioSolo_Layout4ExposureAmountValue752 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap754);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue753 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap754, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioSolo_Layout4ExposureAmountValue752 = zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue753 == null ? "" : zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue753.getValue();
                                    if(zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue753 != null ) {
                                        if(!zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue753.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue753.getStartDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue753.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue753.getEndDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue753.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue753.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioSolo_Layout4ExposureAmountContext751 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap754 );
                                        
                                
                                if(zeroDBSLeverageRatioSolo_Layout4ExposureAmountValue752 != null && !"".equals(zeroDBSLeverageRatioSolo_Layout4ExposureAmountValue752)) {
                                    
                                    addContext(DBSLeverageRatioSolo_Layout4ExposureAmountContext751, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType exposureAmountValue755 = new MonetaryItemType();
                                    exposureAmountValue755.setContextRef(DBSLeverageRatioSolo_Layout4ExposureAmountContext751);
                                    
                                    exposureAmountValue755.setUnitRef(INR750);
                                    exposureAmountValue755.setDecimals("INF");
                                    exposureAmountValue755.setValue(new BigDecimal(zeroDBSLeverageRatioSolo_Layout4ExposureAmountValue752));
                                    
                                    
                                    JAXBElement<MonetaryItemType> exposureAmountElement756 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(exposureAmountValue755);
                                    bodyElements.add(exposureAmountElement756);
                                
                            }
                        
                            
                                
                                Unit INR757 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR757 = createUnitIfNotExist(INR757, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - ExposureAmount
                            
                                Map zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap761 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap761.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap761.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:AmountOfCCRExposureAfterNettingMember");
                                    
                                    
                                    String zeroDBSLeverageRatioSolo_Layout4ExposureAmountValue759 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap761);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue760 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap761, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioSolo_Layout4ExposureAmountValue759 = zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue760 == null ? "" : zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue760.getValue();
                                    if(zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue760 != null ) {
                                        if(!zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue760.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue760.getStartDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue760.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue760.getEndDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue760.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue760.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioSolo_Layout4ExposureAmountContext758 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap761 );
                                        
                                
                                if(zeroDBSLeverageRatioSolo_Layout4ExposureAmountValue759 != null && !"".equals(zeroDBSLeverageRatioSolo_Layout4ExposureAmountValue759)) {
                                    
                                    addContext(DBSLeverageRatioSolo_Layout4ExposureAmountContext758, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType exposureAmountValue762 = new MonetaryItemType();
                                    exposureAmountValue762.setContextRef(DBSLeverageRatioSolo_Layout4ExposureAmountContext758);
                                    
                                    exposureAmountValue762.setUnitRef(INR757);
                                    exposureAmountValue762.setDecimals("INF");
                                    exposureAmountValue762.setValue(new BigDecimal(zeroDBSLeverageRatioSolo_Layout4ExposureAmountValue759));
                                    
                                    
                                    JAXBElement<MonetaryItemType> exposureAmountElement763 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(exposureAmountValue762);
                                    bodyElements.add(exposureAmountElement763);
                                
                            }
                        
                            
                                
                                Unit INR764 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR764 = createUnitIfNotExist(INR764, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - ExposureAmount
                            
                                Map zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap768 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap768.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap768.put("in-rbi-rep:ExposureClassAxis", "rbi-core:ExposureToQCCPsMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap768.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:AmountOfCCRExposureAfterNettingMember");
                                    
                                    
                                    String zeroDBSLeverageRatioSolo_Layout4ExposureAmountValue766 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap768);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue767 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap768, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioSolo_Layout4ExposureAmountValue766 = zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue767 == null ? "" : zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue767.getValue();
                                    if(zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue767 != null ) {
                                        if(!zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue767.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue767.getStartDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue767.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue767.getEndDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue767.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue767.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioSolo_Layout4ExposureAmountContext765 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap768 );
                                        
                                
                                if(zeroDBSLeverageRatioSolo_Layout4ExposureAmountValue766 != null && !"".equals(zeroDBSLeverageRatioSolo_Layout4ExposureAmountValue766)) {
                                    
                                    addContext(DBSLeverageRatioSolo_Layout4ExposureAmountContext765, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType exposureAmountValue769 = new MonetaryItemType();
                                    exposureAmountValue769.setContextRef(DBSLeverageRatioSolo_Layout4ExposureAmountContext765);
                                    
                                    exposureAmountValue769.setUnitRef(INR764);
                                    exposureAmountValue769.setDecimals("INF");
                                    exposureAmountValue769.setValue(new BigDecimal(zeroDBSLeverageRatioSolo_Layout4ExposureAmountValue766));
                                    
                                    
                                    JAXBElement<MonetaryItemType> exposureAmountElement770 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(exposureAmountValue769);
                                    bodyElements.add(exposureAmountElement770);
                                
                            }
                        
                            
                                
                                Unit INR771 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR771 = createUnitIfNotExist(INR771, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - ExposureAmount
                            
                                Map zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap775 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap775.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap775.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:CCRExpsoureForSFTAssetsMember");
                                    
                                    
                                    String zeroDBSLeverageRatioSolo_Layout4ExposureAmountValue773 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap775);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue774 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap775, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioSolo_Layout4ExposureAmountValue773 = zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue774 == null ? "" : zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue774.getValue();
                                    if(zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue774 != null ) {
                                        if(!zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue774.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue774.getStartDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue774.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue774.getEndDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue774.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue774.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioSolo_Layout4ExposureAmountContext772 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap775 );
                                        
                                
                                if(zeroDBSLeverageRatioSolo_Layout4ExposureAmountValue773 != null && !"".equals(zeroDBSLeverageRatioSolo_Layout4ExposureAmountValue773)) {
                                    
                                    addContext(DBSLeverageRatioSolo_Layout4ExposureAmountContext772, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType exposureAmountValue776 = new MonetaryItemType();
                                    exposureAmountValue776.setContextRef(DBSLeverageRatioSolo_Layout4ExposureAmountContext772);
                                    
                                    exposureAmountValue776.setUnitRef(INR771);
                                    exposureAmountValue776.setDecimals("INF");
                                    exposureAmountValue776.setValue(new BigDecimal(zeroDBSLeverageRatioSolo_Layout4ExposureAmountValue773));
                                    
                                    
                                    JAXBElement<MonetaryItemType> exposureAmountElement777 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(exposureAmountValue776);
                                    bodyElements.add(exposureAmountElement777);
                                
                            }
                        
                            
                                
                                Unit INR778 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR778 = createUnitIfNotExist(INR778, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - ExposureAmount
                            
                                Map zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap782 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap782.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap782.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:AgentTransactionExposureForSFTAssetsMember");
                                    
                                    
                                    String zeroDBSLeverageRatioSolo_Layout4ExposureAmountValue780 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap782);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue781 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap782, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioSolo_Layout4ExposureAmountValue780 = zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue781 == null ? "" : zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue781.getValue();
                                    if(zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue781 != null ) {
                                        if(!zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue781.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue781.getStartDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue781.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue781.getEndDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue781.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue781.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioSolo_Layout4ExposureAmountContext779 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap782 );
                                        
                                
                                if(zeroDBSLeverageRatioSolo_Layout4ExposureAmountValue780 != null && !"".equals(zeroDBSLeverageRatioSolo_Layout4ExposureAmountValue780)) {
                                    
                                    addContext(DBSLeverageRatioSolo_Layout4ExposureAmountContext779, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType exposureAmountValue783 = new MonetaryItemType();
                                    exposureAmountValue783.setContextRef(DBSLeverageRatioSolo_Layout4ExposureAmountContext779);
                                    
                                    exposureAmountValue783.setUnitRef(INR778);
                                    exposureAmountValue783.setDecimals("INF");
                                    exposureAmountValue783.setValue(new BigDecimal(zeroDBSLeverageRatioSolo_Layout4ExposureAmountValue780));
                                    
                                    
                                    JAXBElement<MonetaryItemType> exposureAmountElement784 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(exposureAmountValue783);
                                    bodyElements.add(exposureAmountElement784);
                                
                            }
                        
                            
                                
                                Unit INR785 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR785 = createUnitIfNotExist(INR785, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - ExposureAmount
                            
                                Map zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap789 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap789.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap789.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:ExposureDueToGuaranteeIndemnityProvidedMember");
                                    
                                    
                                    String zeroDBSLeverageRatioSolo_Layout4ExposureAmountValue787 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap789);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue788 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap789, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioSolo_Layout4ExposureAmountValue787 = zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue788 == null ? "" : zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue788.getValue();
                                    if(zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue788 != null ) {
                                        if(!zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue788.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue788.getStartDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue788.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue788.getEndDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue788.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue788.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioSolo_Layout4ExposureAmountContext786 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap789 );
                                        
                                
                                if(zeroDBSLeverageRatioSolo_Layout4ExposureAmountValue787 != null && !"".equals(zeroDBSLeverageRatioSolo_Layout4ExposureAmountValue787)) {
                                    
                                    addContext(DBSLeverageRatioSolo_Layout4ExposureAmountContext786, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType exposureAmountValue790 = new MonetaryItemType();
                                    exposureAmountValue790.setContextRef(DBSLeverageRatioSolo_Layout4ExposureAmountContext786);
                                    
                                    exposureAmountValue790.setUnitRef(INR785);
                                    exposureAmountValue790.setDecimals("INF");
                                    exposureAmountValue790.setValue(new BigDecimal(zeroDBSLeverageRatioSolo_Layout4ExposureAmountValue787));
                                    
                                    
                                    JAXBElement<MonetaryItemType> exposureAmountElement791 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(exposureAmountValue790);
                                    bodyElements.add(exposureAmountElement791);
                                
                            }
                        
                            
                                
                                Unit INR792 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR792 = createUnitIfNotExist(INR792, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - ExposureAmount
                            
                                Map zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap796 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap796.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap796.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:FutherExposureBeyondTheGuaranteeOrIndemnityProvidedMember");
                                    
                                    
                                    String zeroDBSLeverageRatioSolo_Layout4ExposureAmountValue794 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap796);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue795 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap796, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioSolo_Layout4ExposureAmountValue794 = zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue795 == null ? "" : zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue795.getValue();
                                    if(zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue795 != null ) {
                                        if(!zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue795.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue795.getStartDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue795.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue795.getEndDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue795.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue795.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioSolo_Layout4ExposureAmountContext793 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap796 );
                                        
                                
                                if(zeroDBSLeverageRatioSolo_Layout4ExposureAmountValue794 != null && !"".equals(zeroDBSLeverageRatioSolo_Layout4ExposureAmountValue794)) {
                                    
                                    addContext(DBSLeverageRatioSolo_Layout4ExposureAmountContext793, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType exposureAmountValue797 = new MonetaryItemType();
                                    exposureAmountValue797.setContextRef(DBSLeverageRatioSolo_Layout4ExposureAmountContext793);
                                    
                                    exposureAmountValue797.setUnitRef(INR792);
                                    exposureAmountValue797.setDecimals("INF");
                                    exposureAmountValue797.setValue(new BigDecimal(zeroDBSLeverageRatioSolo_Layout4ExposureAmountValue794));
                                    
                                    
                                    JAXBElement<MonetaryItemType> exposureAmountElement798 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(exposureAmountValue797);
                                    bodyElements.add(exposureAmountElement798);
                                
                            }
                        
                            
                                
                                Unit INR799 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR799 = createUnitIfNotExist(INR799, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - ExposureAmount
                            
                                Map zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap803 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap803.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap803.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:TotalSecuritiesFinancingTransactionsExposuresMember");
                                    
                                    
                                    String zeroDBSLeverageRatioSolo_Layout4ExposureAmountValue801 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap803);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue802 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap803, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioSolo_Layout4ExposureAmountValue801 = zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue802 == null ? "" : zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue802.getValue();
                                    if(zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue802 != null ) {
                                        if(!zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue802.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue802.getStartDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue802.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue802.getEndDateValue();
                                        if(!zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue802.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioSolo_Layout4ExposureAmountFieldDataValue802.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioSolo_Layout4ExposureAmountContext800 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioSolo_Layout4ExposureAmountMap803 );
                                        
                                
                                if(zeroDBSLeverageRatioSolo_Layout4ExposureAmountValue801 != null && !"".equals(zeroDBSLeverageRatioSolo_Layout4ExposureAmountValue801)) {
                                    
                                    addContext(DBSLeverageRatioSolo_Layout4ExposureAmountContext800, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType exposureAmountValue804 = new MonetaryItemType();
                                    exposureAmountValue804.setContextRef(DBSLeverageRatioSolo_Layout4ExposureAmountContext800);
                                    
                                    exposureAmountValue804.setUnitRef(INR799);
                                    exposureAmountValue804.setDecimals("INF");
                                    exposureAmountValue804.setValue(new BigDecimal(zeroDBSLeverageRatioSolo_Layout4ExposureAmountValue801));
                                    
                                    
                                    JAXBElement<MonetaryItemType> exposureAmountElement805 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(exposureAmountValue804);
                                    bodyElements.add(exposureAmountElement805);
                                
                            }
                        
                        
                    
                    
            
                    
                    
                    
                    return "";
                    }

                
                    
                
                // if typemembers exist
                
                
                
                // create variable for subclass DBSLeverageRatioSolo_Layout5 if any typeMembers then List or Single
                //DBSLeverageRatioSolo_Layout5 dBSLeverageRatioSolo_Layout5 = mainReportData.getDBSLeverageRatioSolo_Layout5();
                
                    private String dBSLeverageRatioSolo_Layout5Method(DBSLeverageRatioSolo_Layout5 dBSLeverageRatioSolo_Layout5, List<String> contextIdentifiers,  List<Context> contextElements, List<Object> bodyElements, List<String> unitIdentifiers, List<Unit> unitElements, String bankCode, String startDateDefault, String endDateDefault, String periodDateDefault)
                
                    {
                        String startDate = startDateDefault;
                        String endDate = endDateDefault;
                        String periodDate = periodDateDefault;
                    DBSLeverageRatioSolo_Layout5 field = dBSLeverageRatioSolo_Layout5;
                    
                    
                    
            
                    
                    
                        
                            
                            
                                
                                Unit INR806 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR806 = createUnitIfNotExist(INR806, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - Tier1Capital
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisMap808 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisMap808.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue809 = DBS06ReportUtil.retrieveValueForElement(field.getTier1Capital(), explictMember1DBSLeverageRatioSolo_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisMap808);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue810 = DBS06ReportUtil.retrieveFieldDataForElement(field.getTier1Capital(), explictMember1DBSLeverageRatioSolo_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisMap808, "", "", "xs:date($refPeriodEndDate)" );

                                explictMember1DBSLeverageRatioSolo_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue809 = explictMember1DBSLeverageRatioSolo_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue810 == null ? "" : explictMember1DBSLeverageRatioSolo_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue810.getValue();
                                    
                                if(explictMember1DBSLeverageRatioSolo_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue810 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue810.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue810.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue810.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue810.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue810.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue810.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue809 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue809)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisContext807 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisMap808 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisContext807, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType812 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType812.setContextRef(explictMember1DBSLeverageRatioSolo_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisContext807);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType812.setUnitRef(INR806);
                                        explictMember1DBSLeverageRatioSolo_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType812.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType812.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue809));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement811 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createTier1Capital(explictMember1DBSLeverageRatioSolo_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType812);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement811);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR813 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR813 = createUnitIfNotExist(INR813, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - ExposureAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisMap815 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisMap815.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioSolo_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisMap815.put("rbi-core:LeverageRatioExposureAxis", "in-rbi-rep:TotalExposureMember");
                                    
                                String explictMember1DBSLeverageRatioSolo_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue816 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), explictMember1DBSLeverageRatioSolo_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisMap815);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue817 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), explictMember1DBSLeverageRatioSolo_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisMap815, "", "", "xs:date($refPeriodEndDate)" );

                                explictMember1DBSLeverageRatioSolo_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue816 = explictMember1DBSLeverageRatioSolo_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue817 == null ? "" : explictMember1DBSLeverageRatioSolo_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue817.getValue();
                                    
                                if(explictMember1DBSLeverageRatioSolo_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue817 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue817.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue817.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue817.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue817.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue817.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue817.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue816 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue816)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisContext814 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioSolo_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisMap815 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisContext814, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioSolo_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType819 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType819.setContextRef(explictMember1DBSLeverageRatioSolo_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisContext814);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType819.setUnitRef(INR813);
                                        explictMember1DBSLeverageRatioSolo_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType819.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType819.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue816));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioSolo_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement818 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(explictMember1DBSLeverageRatioSolo_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType819);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement818);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit pure820 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                                pure820 = createUnitIfNotExist(pure820, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - BaselIILeverageRatio
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioSolo_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisMap822 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioSolo_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisMap822.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:StandaloneMember");                
                                
                                String explictMember1DBSLeverageRatioSolo_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue823 = DBS06ReportUtil.retrieveValueForElement(field.getBaselIILeverageRatio(), explictMember1DBSLeverageRatioSolo_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisMap822);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioSolo_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue824 = DBS06ReportUtil.retrieveFieldDataForElement(field.getBaselIILeverageRatio(), explictMember1DBSLeverageRatioSolo_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisMap822, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "" );

                                explictMember1DBSLeverageRatioSolo_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue823 = explictMember1DBSLeverageRatioSolo_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue824 == null ? "" : explictMember1DBSLeverageRatioSolo_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue824.getValue();
                                    
                                if(explictMember1DBSLeverageRatioSolo_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue824 != null ) {
                                    if(!explictMember1DBSLeverageRatioSolo_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue824.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioSolo_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue824.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue824.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioSolo_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue824.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioSolo_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue824.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioSolo_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberFieldDataValue824.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioSolo_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue823 != null && !"".equals(explictMember1DBSLeverageRatioSolo_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue823)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioSolo_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisContext821 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioSolo_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisMap822 );
                                    
                                    addContext(explictMember1DBSLeverageRatioSolo_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisContext821, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    PercentItemType explictMember1DBSLeverageRatioSolo_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType826 = new PercentItemType();
                                    explictMember1DBSLeverageRatioSolo_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType826.setContextRef(explictMember1DBSLeverageRatioSolo_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisContext821);
                                    
                                    
                                        explictMember1DBSLeverageRatioSolo_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType826.setUnitRef(pure820);
                                        explictMember1DBSLeverageRatioSolo_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType826.setDecimals("INF");
                                        explictMember1DBSLeverageRatioSolo_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType826.setValue(new BigDecimal(explictMember1DBSLeverageRatioSolo_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberValue823));
                                    
                                    
                                    JAXBElement<PercentItemType> explictMember1DBSLeverageRatioSolo_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement825 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createBaselIILeverageRatio(explictMember1DBSLeverageRatioSolo_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberDataType826);
                                    bodyElements.add(explictMember1DBSLeverageRatioSolo_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisStandaloneMemberElement825);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                        
                    
                    
                    return "";
                    }

                
                    
                
                // if typemembers exist
                
                
                
                // create variable for subclass DBSLeverageRatioConsolidated_Layout1 if any typeMembers then List or Single
                //DBSLeverageRatioConsolidated_Layout1 dBSLeverageRatioConsolidated_Layout1 = mainReportData.getDBSLeverageRatioConsolidated_Layout1();
                
                    private String dBSLeverageRatioConsolidated_Layout1Method(DBSLeverageRatioConsolidated_Layout1 dBSLeverageRatioConsolidated_Layout1, List<String> contextIdentifiers,  List<Context> contextElements, List<Object> bodyElements, List<String> unitIdentifiers, List<Unit> unitElements, String bankCode, String startDateDefault, String endDateDefault, String periodDateDefault)
                
                    {
                        String startDate = startDateDefault;
                        String endDate = endDateDefault;
                        String periodDate = periodDateDefault;
                    DBSLeverageRatioConsolidated_Layout1 field = dBSLeverageRatioConsolidated_Layout1;
                    
                    
                    
            
                    
                    
                        
                            
                            
                                
                                Unit INR827 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR827 = createUnitIfNotExist(INR827, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis,rbi-core:LeverageRatioExposureAxis - ExposureAmount
                            
                        
                            

                            
                                    Map explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticSovereignsMemberMap829 = new HashMap<String, String>();
                                    
                                    
                                    explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticSovereignsMemberMap829.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                    explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticSovereignsMemberMap829.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:DomesticSovereignsMember");   
                                
                                    String explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticSovereignsMemberValue830 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticSovereignsMemberMap829);
                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticSovereignsMemberFieldDataValue831 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticSovereignsMemberMap829, "", "", "xs:date($refPeriodEndDate)");

                                    explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticSovereignsMemberValue830 = explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticSovereignsMemberFieldDataValue831 == null ? "" : explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticSovereignsMemberFieldDataValue831.getValue();
                                    
                                    if(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticSovereignsMemberFieldDataValue831 != null ) {
                                        if(!explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticSovereignsMemberFieldDataValue831.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticSovereignsMemberFieldDataValue831.getStartDateValue();
                                        if(!explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticSovereignsMemberFieldDataValue831.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticSovereignsMemberFieldDataValue831.getEndDateValue();
                                        if(!explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticSovereignsMemberFieldDataValue831.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticSovereignsMemberFieldDataValue831.getInstantDateValue();
                                    }
                                    
                                    if(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticSovereignsMemberValue830 != null && !"".equals(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticSovereignsMemberValue830)) {
                                    
                                        
                                        
                                            Context explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticSovereignsMemberContext828 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticSovereignsMemberMap829 );
                                        
                                        addContext(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticSovereignsMemberContext828, contextElements, contextIdentifiers);
                                                  
                                            // create element JAXB Element
                    
                                            MonetaryItemType explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticSovereignsMemberDataType833 = new MonetaryItemType();
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticSovereignsMemberDataType833.setContextRef(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticSovereignsMemberContext828);
                                        
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticSovereignsMemberDataType833.setUnitRef(INR827);
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticSovereignsMemberDataType833.setDecimals("INF");
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticSovereignsMemberDataType833.setValue(new BigDecimal(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticSovereignsMemberValue830));
                                        
                                        
                                            JAXBElement<MonetaryItemType> explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticSovereignsMemberElement832 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticSovereignsMemberDataType833);
                                            bodyElements.add(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticSovereignsMemberElement832);
                                    }
                                
                            
                        
                        
                        
                    
                        
                            
                            
                                
                                Unit INR834 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR834 = createUnitIfNotExist(INR834, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis,rbi-core:LeverageRatioExposureAxis - ExposureAmount
                            
                        
                            

                            
                                    Map explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignSovereignsMemberMap836 = new HashMap<String, String>();
                                    
                                    
                                    explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignSovereignsMemberMap836.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                    explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignSovereignsMemberMap836.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:ForeignSovereignsMember");   
                                
                                    String explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignSovereignsMemberValue837 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignSovereignsMemberMap836);
                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignSovereignsMemberFieldDataValue838 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignSovereignsMemberMap836, "", "", "xs:date($refPeriodEndDate)");

                                    explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignSovereignsMemberValue837 = explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignSovereignsMemberFieldDataValue838 == null ? "" : explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignSovereignsMemberFieldDataValue838.getValue();
                                    
                                    if(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignSovereignsMemberFieldDataValue838 != null ) {
                                        if(!explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignSovereignsMemberFieldDataValue838.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignSovereignsMemberFieldDataValue838.getStartDateValue();
                                        if(!explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignSovereignsMemberFieldDataValue838.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignSovereignsMemberFieldDataValue838.getEndDateValue();
                                        if(!explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignSovereignsMemberFieldDataValue838.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignSovereignsMemberFieldDataValue838.getInstantDateValue();
                                    }
                                    
                                    if(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignSovereignsMemberValue837 != null && !"".equals(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignSovereignsMemberValue837)) {
                                    
                                        
                                        
                                            Context explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignSovereignsMemberContext835 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignSovereignsMemberMap836 );
                                        
                                        addContext(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignSovereignsMemberContext835, contextElements, contextIdentifiers);
                                                  
                                            // create element JAXB Element
                    
                                            MonetaryItemType explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignSovereignsMemberDataType840 = new MonetaryItemType();
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignSovereignsMemberDataType840.setContextRef(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignSovereignsMemberContext835);
                                        
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignSovereignsMemberDataType840.setUnitRef(INR834);
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignSovereignsMemberDataType840.setDecimals("INF");
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignSovereignsMemberDataType840.setValue(new BigDecimal(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignSovereignsMemberValue837));
                                        
                                        
                                            JAXBElement<MonetaryItemType> explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignSovereignsMemberElement839 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignSovereignsMemberDataType840);
                                            bodyElements.add(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignSovereignsMemberElement839);
                                    }
                                
                            
                        
                        
                        
                    
                        
                            
                            
                                
                                Unit INR841 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR841 = createUnitIfNotExist(INR841, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis,rbi-core:LeverageRatioExposureAxis - ExposureAmount
                            
                        
                            

                            
                                    Map explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberMap843 = new HashMap<String, String>();
                                    
                                    
                                    explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberMap843.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                    explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberMap843.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:BanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMember");   
                                
                                    String explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberValue844 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberMap843);
                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberFieldDataValue845 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberMap843, "", "", "xs:date($refPeriodEndDate)");

                                    explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberValue844 = explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberFieldDataValue845 == null ? "" : explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberFieldDataValue845.getValue();
                                    
                                    if(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberFieldDataValue845 != null ) {
                                        if(!explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberFieldDataValue845.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberFieldDataValue845.getStartDateValue();
                                        if(!explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberFieldDataValue845.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberFieldDataValue845.getEndDateValue();
                                        if(!explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberFieldDataValue845.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberFieldDataValue845.getInstantDateValue();
                                    }
                                    
                                    if(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberValue844 != null && !"".equals(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberValue844)) {
                                    
                                        
                                        
                                            Context explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberContext842 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberMap843 );
                                        
                                        addContext(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberContext842, contextElements, contextIdentifiers);
                                                  
                                            // create element JAXB Element
                    
                                            MonetaryItemType explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberDataType847 = new MonetaryItemType();
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberDataType847.setContextRef(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberContext842);
                                        
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberDataType847.setUnitRef(INR841);
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberDataType847.setDecimals("INF");
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberDataType847.setValue(new BigDecimal(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberValue844));
                                        
                                        
                                            JAXBElement<MonetaryItemType> explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberElement846 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberDataType847);
                                            bodyElements.add(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBanksIncorporatedInIndiaAndForeignBankBranchesInIndiaMemberElement846);
                                    }
                                
                            
                        
                        
                        
                    
                        
                            
                            
                                
                                Unit INR848 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR848 = createUnitIfNotExist(INR848, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis,rbi-core:LeverageRatioExposureAxis - ExposureAmount
                            
                        
                            

                            
                                    Map explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignBanksMemberMap850 = new HashMap<String, String>();
                                    
                                    
                                    explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignBanksMemberMap850.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                    explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignBanksMemberMap850.put("rbi-core:LeverageRatioExposureAxis", "in-rbi-rep:ForeignBanksMember");   
                                
                                    String explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignBanksMemberValue851 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignBanksMemberMap850);
                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignBanksMemberFieldDataValue852 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignBanksMemberMap850, "", "", "xs:date($refPeriodEndDate)");

                                    explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignBanksMemberValue851 = explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignBanksMemberFieldDataValue852 == null ? "" : explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignBanksMemberFieldDataValue852.getValue();
                                    
                                    if(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignBanksMemberFieldDataValue852 != null ) {
                                        if(!explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignBanksMemberFieldDataValue852.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignBanksMemberFieldDataValue852.getStartDateValue();
                                        if(!explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignBanksMemberFieldDataValue852.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignBanksMemberFieldDataValue852.getEndDateValue();
                                        if(!explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignBanksMemberFieldDataValue852.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignBanksMemberFieldDataValue852.getInstantDateValue();
                                    }
                                    
                                    if(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignBanksMemberValue851 != null && !"".equals(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignBanksMemberValue851)) {
                                    
                                        
                                        
                                            Context explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignBanksMemberContext849 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignBanksMemberMap850 );
                                        
                                        addContext(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignBanksMemberContext849, contextElements, contextIdentifiers);
                                                  
                                            // create element JAXB Element
                    
                                            MonetaryItemType explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignBanksMemberDataType854 = new MonetaryItemType();
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignBanksMemberDataType854.setContextRef(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignBanksMemberContext849);
                                        
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignBanksMemberDataType854.setUnitRef(INR848);
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignBanksMemberDataType854.setDecimals("INF");
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignBanksMemberDataType854.setValue(new BigDecimal(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignBanksMemberValue851));
                                        
                                        
                                            JAXBElement<MonetaryItemType> explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignBanksMemberElement853 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignBanksMemberDataType854);
                                            bodyElements.add(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignBanksMemberElement853);
                                    }
                                
                            
                        
                        
                        
                    
                        
                            
                            
                                
                                Unit INR855 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR855 = createUnitIfNotExist(INR855, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis,rbi-core:LeverageRatioExposureAxis - ExposureAmount
                            
                        
                            

                            
                                    Map explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticPublicSectorEntitiesMemberMap857 = new HashMap<String, String>();
                                    
                                    
                                    explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticPublicSectorEntitiesMemberMap857.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                    explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticPublicSectorEntitiesMemberMap857.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:DomesticPublicSectorEntitiesMember");   
                                
                                    String explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticPublicSectorEntitiesMemberValue858 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticPublicSectorEntitiesMemberMap857);
                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticPublicSectorEntitiesMemberFieldDataValue859 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticPublicSectorEntitiesMemberMap857, "", "", "xs:date($refPeriodEndDate)");

                                    explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticPublicSectorEntitiesMemberValue858 = explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticPublicSectorEntitiesMemberFieldDataValue859 == null ? "" : explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticPublicSectorEntitiesMemberFieldDataValue859.getValue();
                                    
                                    if(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticPublicSectorEntitiesMemberFieldDataValue859 != null ) {
                                        if(!explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticPublicSectorEntitiesMemberFieldDataValue859.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticPublicSectorEntitiesMemberFieldDataValue859.getStartDateValue();
                                        if(!explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticPublicSectorEntitiesMemberFieldDataValue859.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticPublicSectorEntitiesMemberFieldDataValue859.getEndDateValue();
                                        if(!explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticPublicSectorEntitiesMemberFieldDataValue859.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticPublicSectorEntitiesMemberFieldDataValue859.getInstantDateValue();
                                    }
                                    
                                    if(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticPublicSectorEntitiesMemberValue858 != null && !"".equals(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticPublicSectorEntitiesMemberValue858)) {
                                    
                                        
                                        
                                            Context explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticPublicSectorEntitiesMemberContext856 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticPublicSectorEntitiesMemberMap857 );
                                        
                                        addContext(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticPublicSectorEntitiesMemberContext856, contextElements, contextIdentifiers);
                                                  
                                            // create element JAXB Element
                    
                                            MonetaryItemType explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticPublicSectorEntitiesMemberDataType861 = new MonetaryItemType();
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticPublicSectorEntitiesMemberDataType861.setContextRef(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticPublicSectorEntitiesMemberContext856);
                                        
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticPublicSectorEntitiesMemberDataType861.setUnitRef(INR855);
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticPublicSectorEntitiesMemberDataType861.setDecimals("INF");
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticPublicSectorEntitiesMemberDataType861.setValue(new BigDecimal(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticPublicSectorEntitiesMemberValue858));
                                        
                                        
                                            JAXBElement<MonetaryItemType> explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticPublicSectorEntitiesMemberElement860 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticPublicSectorEntitiesMemberDataType861);
                                            bodyElements.add(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberDomesticPublicSectorEntitiesMemberElement860);
                                    }
                                
                            
                        
                        
                        
                    
                        
                            
                            
                                
                                Unit INR862 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR862 = createUnitIfNotExist(INR862, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis,rbi-core:LeverageRatioExposureAxis - ExposureAmount
                            
                        
                            

                            
                                    Map explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignPublicSectorEntitiesMemberMap864 = new HashMap<String, String>();
                                    
                                    
                                    explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignPublicSectorEntitiesMemberMap864.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                    explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignPublicSectorEntitiesMemberMap864.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:ForeignPublicSectorEntitiesMember");   
                                
                                    String explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignPublicSectorEntitiesMemberValue865 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignPublicSectorEntitiesMemberMap864);
                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignPublicSectorEntitiesMemberFieldDataValue866 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignPublicSectorEntitiesMemberMap864, "", "", "xs:date($refPeriodEndDate)");

                                    explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignPublicSectorEntitiesMemberValue865 = explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignPublicSectorEntitiesMemberFieldDataValue866 == null ? "" : explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignPublicSectorEntitiesMemberFieldDataValue866.getValue();
                                    
                                    if(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignPublicSectorEntitiesMemberFieldDataValue866 != null ) {
                                        if(!explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignPublicSectorEntitiesMemberFieldDataValue866.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignPublicSectorEntitiesMemberFieldDataValue866.getStartDateValue();
                                        if(!explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignPublicSectorEntitiesMemberFieldDataValue866.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignPublicSectorEntitiesMemberFieldDataValue866.getEndDateValue();
                                        if(!explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignPublicSectorEntitiesMemberFieldDataValue866.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignPublicSectorEntitiesMemberFieldDataValue866.getInstantDateValue();
                                    }
                                    
                                    if(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignPublicSectorEntitiesMemberValue865 != null && !"".equals(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignPublicSectorEntitiesMemberValue865)) {
                                    
                                        
                                        
                                            Context explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignPublicSectorEntitiesMemberContext863 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignPublicSectorEntitiesMemberMap864 );
                                        
                                        addContext(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignPublicSectorEntitiesMemberContext863, contextElements, contextIdentifiers);
                                                  
                                            // create element JAXB Element
                    
                                            MonetaryItemType explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignPublicSectorEntitiesMemberDataType868 = new MonetaryItemType();
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignPublicSectorEntitiesMemberDataType868.setContextRef(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignPublicSectorEntitiesMemberContext863);
                                        
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignPublicSectorEntitiesMemberDataType868.setUnitRef(INR862);
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignPublicSectorEntitiesMemberDataType868.setDecimals("INF");
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignPublicSectorEntitiesMemberDataType868.setValue(new BigDecimal(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignPublicSectorEntitiesMemberValue865));
                                        
                                        
                                            JAXBElement<MonetaryItemType> explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignPublicSectorEntitiesMemberElement867 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignPublicSectorEntitiesMemberDataType868);
                                            bodyElements.add(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberForeignPublicSectorEntitiesMemberElement867);
                                    }
                                
                            
                        
                        
                        
                    
                        
                            
                            
                                
                                Unit INR869 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR869 = createUnitIfNotExist(INR869, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis,rbi-core:LeverageRatioExposureAxis - ExposureAmount
                            
                        
                            

                            
                                    Map explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberPrimaryDealersMemberMap871 = new HashMap<String, String>();
                                    
                                    
                                    explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberPrimaryDealersMemberMap871.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                    explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberPrimaryDealersMemberMap871.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:PrimaryDealersMember");   
                                
                                    String explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberPrimaryDealersMemberValue872 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberPrimaryDealersMemberMap871);
                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberPrimaryDealersMemberFieldDataValue873 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberPrimaryDealersMemberMap871, "", "", "xs:date($refPeriodEndDate)");

                                    explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberPrimaryDealersMemberValue872 = explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberPrimaryDealersMemberFieldDataValue873 == null ? "" : explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberPrimaryDealersMemberFieldDataValue873.getValue();
                                    
                                    if(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberPrimaryDealersMemberFieldDataValue873 != null ) {
                                        if(!explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberPrimaryDealersMemberFieldDataValue873.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberPrimaryDealersMemberFieldDataValue873.getStartDateValue();
                                        if(!explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberPrimaryDealersMemberFieldDataValue873.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberPrimaryDealersMemberFieldDataValue873.getEndDateValue();
                                        if(!explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberPrimaryDealersMemberFieldDataValue873.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberPrimaryDealersMemberFieldDataValue873.getInstantDateValue();
                                    }
                                    
                                    if(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberPrimaryDealersMemberValue872 != null && !"".equals(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberPrimaryDealersMemberValue872)) {
                                    
                                        
                                        
                                            Context explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberPrimaryDealersMemberContext870 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberPrimaryDealersMemberMap871 );
                                        
                                        addContext(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberPrimaryDealersMemberContext870, contextElements, contextIdentifiers);
                                                  
                                            // create element JAXB Element
                    
                                            MonetaryItemType explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberPrimaryDealersMemberDataType875 = new MonetaryItemType();
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberPrimaryDealersMemberDataType875.setContextRef(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberPrimaryDealersMemberContext870);
                                        
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberPrimaryDealersMemberDataType875.setUnitRef(INR869);
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberPrimaryDealersMemberDataType875.setDecimals("INF");
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberPrimaryDealersMemberDataType875.setValue(new BigDecimal(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberPrimaryDealersMemberValue872));
                                        
                                        
                                            JAXBElement<MonetaryItemType> explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberPrimaryDealersMemberElement874 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberPrimaryDealersMemberDataType875);
                                            bodyElements.add(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberPrimaryDealersMemberElement874);
                                    }
                                
                            
                        
                        
                        
                    
                        
                            
                            
                                
                                Unit INR876 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR876 = createUnitIfNotExist(INR876, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis,rbi-core:LeverageRatioExposureAxis - ExposureAmount
                            
                        
                            

                            
                                    Map explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberCorporateMemberMap878 = new HashMap<String, String>();
                                    
                                    
                                    explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberCorporateMemberMap878.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                    explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberCorporateMemberMap878.put("rbi-core:LeverageRatioExposureAxis", "in-rbi-rep:CorporateMember");   
                                
                                    String explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberCorporateMemberValue879 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberCorporateMemberMap878);
                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberCorporateMemberFieldDataValue880 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberCorporateMemberMap878, "", "", "xs:date($refPeriodEndDate)");

                                    explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberCorporateMemberValue879 = explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberCorporateMemberFieldDataValue880 == null ? "" : explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberCorporateMemberFieldDataValue880.getValue();
                                    
                                    if(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberCorporateMemberFieldDataValue880 != null ) {
                                        if(!explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberCorporateMemberFieldDataValue880.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberCorporateMemberFieldDataValue880.getStartDateValue();
                                        if(!explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberCorporateMemberFieldDataValue880.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberCorporateMemberFieldDataValue880.getEndDateValue();
                                        if(!explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberCorporateMemberFieldDataValue880.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberCorporateMemberFieldDataValue880.getInstantDateValue();
                                    }
                                    
                                    if(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberCorporateMemberValue879 != null && !"".equals(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberCorporateMemberValue879)) {
                                    
                                        
                                        
                                            Context explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberCorporateMemberContext877 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberCorporateMemberMap878 );
                                        
                                        addContext(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberCorporateMemberContext877, contextElements, contextIdentifiers);
                                                  
                                            // create element JAXB Element
                    
                                            MonetaryItemType explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberCorporateMemberDataType882 = new MonetaryItemType();
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberCorporateMemberDataType882.setContextRef(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberCorporateMemberContext877);
                                        
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberCorporateMemberDataType882.setUnitRef(INR876);
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberCorporateMemberDataType882.setDecimals("INF");
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberCorporateMemberDataType882.setValue(new BigDecimal(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberCorporateMemberValue879));
                                        
                                        
                                            JAXBElement<MonetaryItemType> explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberCorporateMemberElement881 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberCorporateMemberDataType882);
                                            bodyElements.add(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberCorporateMemberElement881);
                                    }
                                
                            
                        
                        
                        
                    
                        
                            
                            
                                
                                Unit INR883 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR883 = createUnitIfNotExist(INR883, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis,rbi-core:LeverageRatioExposureAxis - ExposureAmount
                            
                        
                            

                            
                                    Map explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCCPsMemberMap885 = new HashMap<String, String>();
                                    
                                    
                                    explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCCPsMemberMap885.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                    explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCCPsMemberMap885.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:ExposureToCCPsMember");   
                                
                                    String explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCCPsMemberValue886 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCCPsMemberMap885);
                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCCPsMemberFieldDataValue887 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCCPsMemberMap885, "", "", "xs:date($refPeriodEndDate)");

                                    explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCCPsMemberValue886 = explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCCPsMemberFieldDataValue887 == null ? "" : explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCCPsMemberFieldDataValue887.getValue();
                                    
                                    if(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCCPsMemberFieldDataValue887 != null ) {
                                        if(!explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCCPsMemberFieldDataValue887.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCCPsMemberFieldDataValue887.getStartDateValue();
                                        if(!explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCCPsMemberFieldDataValue887.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCCPsMemberFieldDataValue887.getEndDateValue();
                                        if(!explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCCPsMemberFieldDataValue887.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCCPsMemberFieldDataValue887.getInstantDateValue();
                                    }
                                    
                                    if(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCCPsMemberValue886 != null && !"".equals(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCCPsMemberValue886)) {
                                    
                                        
                                        
                                            Context explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCCPsMemberContext884 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCCPsMemberMap885 );
                                        
                                        addContext(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCCPsMemberContext884, contextElements, contextIdentifiers);
                                                  
                                            // create element JAXB Element
                    
                                            MonetaryItemType explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCCPsMemberDataType889 = new MonetaryItemType();
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCCPsMemberDataType889.setContextRef(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCCPsMemberContext884);
                                        
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCCPsMemberDataType889.setUnitRef(INR883);
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCCPsMemberDataType889.setDecimals("INF");
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCCPsMemberDataType889.setValue(new BigDecimal(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCCPsMemberValue886));
                                        
                                        
                                            JAXBElement<MonetaryItemType> explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCCPsMemberElement888 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCCPsMemberDataType889);
                                            bodyElements.add(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCCPsMemberElement888);
                                    }
                                
                            
                        
                        
                        
                    
                        
                            
                            
                                
                                Unit INR890 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR890 = createUnitIfNotExist(INR890, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis,rbi-core:LeverageRatioExposureAxis - ExposureAmount
                            
                        
                            

                            
                                    Map explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCapitalOfCCPsMemberMap892 = new HashMap<String, String>();
                                    
                                    
                                    explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCapitalOfCCPsMemberMap892.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                    explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCapitalOfCCPsMemberMap892.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:ExposureToCapitalOfCCPsMember");   
                                
                                    String explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCapitalOfCCPsMemberValue893 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCapitalOfCCPsMemberMap892);
                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCapitalOfCCPsMemberFieldDataValue894 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCapitalOfCCPsMemberMap892, "", "", "xs:date($refPeriodEndDate)");

                                    explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCapitalOfCCPsMemberValue893 = explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCapitalOfCCPsMemberFieldDataValue894 == null ? "" : explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCapitalOfCCPsMemberFieldDataValue894.getValue();
                                    
                                    if(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCapitalOfCCPsMemberFieldDataValue894 != null ) {
                                        if(!explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCapitalOfCCPsMemberFieldDataValue894.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCapitalOfCCPsMemberFieldDataValue894.getStartDateValue();
                                        if(!explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCapitalOfCCPsMemberFieldDataValue894.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCapitalOfCCPsMemberFieldDataValue894.getEndDateValue();
                                        if(!explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCapitalOfCCPsMemberFieldDataValue894.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCapitalOfCCPsMemberFieldDataValue894.getInstantDateValue();
                                    }
                                    
                                    if(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCapitalOfCCPsMemberValue893 != null && !"".equals(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCapitalOfCCPsMemberValue893)) {
                                    
                                        
                                        
                                            Context explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCapitalOfCCPsMemberContext891 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCapitalOfCCPsMemberMap892 );
                                        
                                        addContext(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCapitalOfCCPsMemberContext891, contextElements, contextIdentifiers);
                                                  
                                            // create element JAXB Element
                    
                                            MonetaryItemType explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCapitalOfCCPsMemberDataType896 = new MonetaryItemType();
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCapitalOfCCPsMemberDataType896.setContextRef(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCapitalOfCCPsMemberContext891);
                                        
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCapitalOfCCPsMemberDataType896.setUnitRef(INR890);
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCapitalOfCCPsMemberDataType896.setDecimals("INF");
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCapitalOfCCPsMemberDataType896.setValue(new BigDecimal(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCapitalOfCCPsMemberValue893));
                                        
                                        
                                            JAXBElement<MonetaryItemType> explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCapitalOfCCPsMemberElement895 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCapitalOfCCPsMemberDataType896);
                                            bodyElements.add(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToCapitalOfCCPsMemberElement895);
                                    }
                                
                            
                        
                        
                        
                    
                        
                            
                            
                                
                                Unit INR897 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR897 = createUnitIfNotExist(INR897, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis,rbi-core:LeverageRatioExposureAxis - ExposureAmount
                            
                        
                            

                            
                                    Map explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToDefaultFundContributionOfCCPsMemberMap899 = new HashMap<String, String>();
                                    
                                    
                                    explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToDefaultFundContributionOfCCPsMemberMap899.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                    explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToDefaultFundContributionOfCCPsMemberMap899.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:ExposureToDefaultFundContributionOfCCPsMember");   
                                
                                    String explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToDefaultFundContributionOfCCPsMemberValue900 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToDefaultFundContributionOfCCPsMemberMap899);
                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToDefaultFundContributionOfCCPsMemberFieldDataValue901 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToDefaultFundContributionOfCCPsMemberMap899, "", "", "xs:date($refPeriodEndDate)");

                                    explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToDefaultFundContributionOfCCPsMemberValue900 = explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToDefaultFundContributionOfCCPsMemberFieldDataValue901 == null ? "" : explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToDefaultFundContributionOfCCPsMemberFieldDataValue901.getValue();
                                    
                                    if(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToDefaultFundContributionOfCCPsMemberFieldDataValue901 != null ) {
                                        if(!explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToDefaultFundContributionOfCCPsMemberFieldDataValue901.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToDefaultFundContributionOfCCPsMemberFieldDataValue901.getStartDateValue();
                                        if(!explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToDefaultFundContributionOfCCPsMemberFieldDataValue901.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToDefaultFundContributionOfCCPsMemberFieldDataValue901.getEndDateValue();
                                        if(!explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToDefaultFundContributionOfCCPsMemberFieldDataValue901.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToDefaultFundContributionOfCCPsMemberFieldDataValue901.getInstantDateValue();
                                    }
                                    
                                    if(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToDefaultFundContributionOfCCPsMemberValue900 != null && !"".equals(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToDefaultFundContributionOfCCPsMemberValue900)) {
                                    
                                        
                                        
                                            Context explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToDefaultFundContributionOfCCPsMemberContext898 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToDefaultFundContributionOfCCPsMemberMap899 );
                                        
                                        addContext(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToDefaultFundContributionOfCCPsMemberContext898, contextElements, contextIdentifiers);
                                                  
                                            // create element JAXB Element
                    
                                            MonetaryItemType explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToDefaultFundContributionOfCCPsMemberDataType903 = new MonetaryItemType();
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToDefaultFundContributionOfCCPsMemberDataType903.setContextRef(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToDefaultFundContributionOfCCPsMemberContext898);
                                        
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToDefaultFundContributionOfCCPsMemberDataType903.setUnitRef(INR897);
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToDefaultFundContributionOfCCPsMemberDataType903.setDecimals("INF");
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToDefaultFundContributionOfCCPsMemberDataType903.setValue(new BigDecimal(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToDefaultFundContributionOfCCPsMemberValue900));
                                        
                                        
                                            JAXBElement<MonetaryItemType> explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToDefaultFundContributionOfCCPsMemberElement902 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToDefaultFundContributionOfCCPsMemberDataType903);
                                            bodyElements.add(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberExposureToDefaultFundContributionOfCCPsMemberElement902);
                                    }
                                
                            
                        
                        
                        
                    
                        
                            
                            
                                
                                Unit INR904 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR904 = createUnitIfNotExist(INR904, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis,rbi-core:LeverageRatioExposureAxis - ExposureAmount
                            
                        
                            

                            
                                    Map explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOtherExposureToCCPsMemberMap906 = new HashMap<String, String>();
                                    
                                    
                                    explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOtherExposureToCCPsMemberMap906.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                    explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOtherExposureToCCPsMemberMap906.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:OtherExposureToCCPsMember");   
                                
                                    String explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOtherExposureToCCPsMemberValue907 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOtherExposureToCCPsMemberMap906);
                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOtherExposureToCCPsMemberFieldDataValue908 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOtherExposureToCCPsMemberMap906, "", "", "xs:date($refPeriodEndDate)");

                                    explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOtherExposureToCCPsMemberValue907 = explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOtherExposureToCCPsMemberFieldDataValue908 == null ? "" : explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOtherExposureToCCPsMemberFieldDataValue908.getValue();
                                    
                                    if(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOtherExposureToCCPsMemberFieldDataValue908 != null ) {
                                        if(!explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOtherExposureToCCPsMemberFieldDataValue908.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOtherExposureToCCPsMemberFieldDataValue908.getStartDateValue();
                                        if(!explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOtherExposureToCCPsMemberFieldDataValue908.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOtherExposureToCCPsMemberFieldDataValue908.getEndDateValue();
                                        if(!explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOtherExposureToCCPsMemberFieldDataValue908.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOtherExposureToCCPsMemberFieldDataValue908.getInstantDateValue();
                                    }
                                    
                                    if(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOtherExposureToCCPsMemberValue907 != null && !"".equals(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOtherExposureToCCPsMemberValue907)) {
                                    
                                        
                                        
                                            Context explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOtherExposureToCCPsMemberContext905 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOtherExposureToCCPsMemberMap906 );
                                        
                                        addContext(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOtherExposureToCCPsMemberContext905, contextElements, contextIdentifiers);
                                                  
                                            // create element JAXB Element
                    
                                            MonetaryItemType explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOtherExposureToCCPsMemberDataType910 = new MonetaryItemType();
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOtherExposureToCCPsMemberDataType910.setContextRef(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOtherExposureToCCPsMemberContext905);
                                        
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOtherExposureToCCPsMemberDataType910.setUnitRef(INR904);
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOtherExposureToCCPsMemberDataType910.setDecimals("INF");
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOtherExposureToCCPsMemberDataType910.setValue(new BigDecimal(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOtherExposureToCCPsMemberValue907));
                                        
                                        
                                            JAXBElement<MonetaryItemType> explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOtherExposureToCCPsMemberElement909 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOtherExposureToCCPsMemberDataType910);
                                            bodyElements.add(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOtherExposureToCCPsMemberElement909);
                                    }
                                
                            
                        
                        
                        
                    
                        
                            
                            
                                
                                Unit INR911 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR911 = createUnitIfNotExist(INR911, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis,rbi-core:LeverageRatioExposureAxis - ExposureAmount
                            
                        
                            

                            
                                    Map explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberAllOtherExposuresMemberMap913 = new HashMap<String, String>();
                                    
                                    
                                    explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberAllOtherExposuresMemberMap913.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                    explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberAllOtherExposuresMemberMap913.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:AllOtherExposuresMember");   
                                
                                    String explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberAllOtherExposuresMemberValue914 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberAllOtherExposuresMemberMap913);
                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberAllOtherExposuresMemberFieldDataValue915 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberAllOtherExposuresMemberMap913, "", "", "xs:date($refPeriodEndDate)");

                                    explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberAllOtherExposuresMemberValue914 = explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberAllOtherExposuresMemberFieldDataValue915 == null ? "" : explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberAllOtherExposuresMemberFieldDataValue915.getValue();
                                    
                                    if(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberAllOtherExposuresMemberFieldDataValue915 != null ) {
                                        if(!explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberAllOtherExposuresMemberFieldDataValue915.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberAllOtherExposuresMemberFieldDataValue915.getStartDateValue();
                                        if(!explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberAllOtherExposuresMemberFieldDataValue915.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberAllOtherExposuresMemberFieldDataValue915.getEndDateValue();
                                        if(!explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberAllOtherExposuresMemberFieldDataValue915.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberAllOtherExposuresMemberFieldDataValue915.getInstantDateValue();
                                    }
                                    
                                    if(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberAllOtherExposuresMemberValue914 != null && !"".equals(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberAllOtherExposuresMemberValue914)) {
                                    
                                        
                                        
                                            Context explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberAllOtherExposuresMemberContext912 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberAllOtherExposuresMemberMap913 );
                                        
                                        addContext(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberAllOtherExposuresMemberContext912, contextElements, contextIdentifiers);
                                                  
                                            // create element JAXB Element
                    
                                            MonetaryItemType explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberAllOtherExposuresMemberDataType917 = new MonetaryItemType();
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberAllOtherExposuresMemberDataType917.setContextRef(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberAllOtherExposuresMemberContext912);
                                        
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberAllOtherExposuresMemberDataType917.setUnitRef(INR911);
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberAllOtherExposuresMemberDataType917.setDecimals("INF");
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberAllOtherExposuresMemberDataType917.setValue(new BigDecimal(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberAllOtherExposuresMemberValue914));
                                        
                                        
                                            JAXBElement<MonetaryItemType> explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberAllOtherExposuresMemberElement916 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberAllOtherExposuresMemberDataType917);
                                            bodyElements.add(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberAllOtherExposuresMemberElement916);
                                    }
                                
                            
                        
                        
                        
                    
                        
                            
                            
                                
                                Unit INR918 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR918 = createUnitIfNotExist(INR918, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis,rbi-core:LeverageRatioExposureAxis - ExposureAmount
                            
                        
                            

                            
                                    Map explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberMap920 = new HashMap<String, String>();
                                    
                                    
                                    explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberMap920.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                    explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberMap920.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:BalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMember");   
                                
                                    String explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberValue921 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberMap920);
                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberFieldDataValue922 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberMap920, "", "", "xs:date($refPeriodEndDate)");

                                    explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberValue921 = explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberFieldDataValue922 == null ? "" : explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberFieldDataValue922.getValue();
                                    
                                    if(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberFieldDataValue922 != null ) {
                                        if(!explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberFieldDataValue922.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberFieldDataValue922.getStartDateValue();
                                        if(!explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberFieldDataValue922.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberFieldDataValue922.getEndDateValue();
                                        if(!explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberFieldDataValue922.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberFieldDataValue922.getInstantDateValue();
                                    }
                                    
                                    if(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberValue921 != null && !"".equals(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberValue921)) {
                                    
                                        
                                        
                                            Context explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberContext919 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberMap920 );
                                        
                                        addContext(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberContext919, contextElements, contextIdentifiers);
                                                  
                                            // create element JAXB Element
                    
                                            MonetaryItemType explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberDataType924 = new MonetaryItemType();
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberDataType924.setContextRef(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberContext919);
                                        
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberDataType924.setUnitRef(INR918);
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberDataType924.setDecimals("INF");
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberDataType924.setValue(new BigDecimal(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberValue921));
                                        
                                        
                                            JAXBElement<MonetaryItemType> explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberElement923 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberDataType924);
                                            bodyElements.add(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberBalanceSheetAssetsDeductedFromTier1CapitalAndNotReckonedForExposureMeasureMemberElement923);
                                    }
                                
                            
                        
                        
                        
                    
                        
                            
                            
                                
                                Unit INR925 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR925 = createUnitIfNotExist(INR925, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis,rbi-core:LeverageRatioExposureAxis - ExposureAmount
                            
                        
                            

                            
                                    Map explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberFiduciaryAssetsMemberMap927 = new HashMap<String, String>();
                                    
                                    
                                    explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberFiduciaryAssetsMemberMap927.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                    explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberFiduciaryAssetsMemberMap927.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:FiduciaryAssetsMember");   
                                
                                    String explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberFiduciaryAssetsMemberValue928 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberFiduciaryAssetsMemberMap927);
                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberFiduciaryAssetsMemberFieldDataValue929 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberFiduciaryAssetsMemberMap927, "", "", "xs:date($refPeriodEndDate)");

                                    explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberFiduciaryAssetsMemberValue928 = explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberFiduciaryAssetsMemberFieldDataValue929 == null ? "" : explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberFiduciaryAssetsMemberFieldDataValue929.getValue();
                                    
                                    if(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberFiduciaryAssetsMemberFieldDataValue929 != null ) {
                                        if(!explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberFiduciaryAssetsMemberFieldDataValue929.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberFiduciaryAssetsMemberFieldDataValue929.getStartDateValue();
                                        if(!explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberFiduciaryAssetsMemberFieldDataValue929.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberFiduciaryAssetsMemberFieldDataValue929.getEndDateValue();
                                        if(!explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberFiduciaryAssetsMemberFieldDataValue929.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberFiduciaryAssetsMemberFieldDataValue929.getInstantDateValue();
                                    }
                                    
                                    if(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberFiduciaryAssetsMemberValue928 != null && !"".equals(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberFiduciaryAssetsMemberValue928)) {
                                    
                                        
                                        
                                            Context explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberFiduciaryAssetsMemberContext926 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberFiduciaryAssetsMemberMap927 );
                                        
                                        addContext(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberFiduciaryAssetsMemberContext926, contextElements, contextIdentifiers);
                                                  
                                            // create element JAXB Element
                    
                                            MonetaryItemType explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberFiduciaryAssetsMemberDataType931 = new MonetaryItemType();
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberFiduciaryAssetsMemberDataType931.setContextRef(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberFiduciaryAssetsMemberContext926);
                                        
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberFiduciaryAssetsMemberDataType931.setUnitRef(INR925);
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberFiduciaryAssetsMemberDataType931.setDecimals("INF");
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberFiduciaryAssetsMemberDataType931.setValue(new BigDecimal(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberFiduciaryAssetsMemberValue928));
                                        
                                        
                                            JAXBElement<MonetaryItemType> explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberFiduciaryAssetsMemberElement930 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberFiduciaryAssetsMemberDataType931);
                                            bodyElements.add(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberFiduciaryAssetsMemberElement930);
                                    }
                                
                            
                        
                        
                        
                    
                        
                            
                            
                                
                                Unit INR932 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR932 = createUnitIfNotExist(INR932, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis,rbi-core:LeverageRatioExposureAxis - ExposureAmount
                            
                        
                            

                            
                                    Map explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberMap934 = new HashMap<String, String>();
                                    
                                    
                                    explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberMap934.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                    explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberMap934.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:OnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMember");   
                                
                                    String explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberValue935 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberMap934);
                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberFieldDataValue936 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberMap934, "", "", "xs:date($refPeriodEndDate)");

                                    explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberValue935 = explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberFieldDataValue936 == null ? "" : explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberFieldDataValue936.getValue();
                                    
                                    if(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberFieldDataValue936 != null ) {
                                        if(!explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberFieldDataValue936.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberFieldDataValue936.getStartDateValue();
                                        if(!explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberFieldDataValue936.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberFieldDataValue936.getEndDateValue();
                                        if(!explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberFieldDataValue936.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberFieldDataValue936.getInstantDateValue();
                                    }
                                    
                                    if(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberValue935 != null && !"".equals(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberValue935)) {
                                    
                                        
                                        
                                            Context explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberContext933 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberMap934 );
                                        
                                        addContext(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberContext933, contextElements, contextIdentifiers);
                                                  
                                            // create element JAXB Element
                    
                                            MonetaryItemType explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberDataType938 = new MonetaryItemType();
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberDataType938.setContextRef(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberContext933);
                                        
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberDataType938.setUnitRef(INR932);
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberDataType938.setDecimals("INF");
                                            explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberDataType938.setValue(new BigDecimal(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberValue935));
                                        
                                        
                                            JAXBElement<MonetaryItemType> explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberElement937 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberDataType938);
                                            bodyElements.add(explictMember2DBSLeverageRatioConsolidated_Layout1ExposureAmountConsolidatedMemberOnBalanceSheetExposureExcludingDerivativesAndSFTsButIncludingCollateralMemberElement937);
                                    }
                                
                            
                        
                        
                        
                    
                    
                    return "";
                    }

                
                    
                
                // if typemembers exist
                
                
                
                // create variable for subclass DBSLeverageRatioConsolidated_Layout2 if any typeMembers then List or Single
                //DBSLeverageRatioConsolidated_Layout2 dBSLeverageRatioConsolidated_Layout2 = mainReportData.getDBSLeverageRatioConsolidated_Layout2();
                
                    private String dBSLeverageRatioConsolidated_Layout2Method(DBSLeverageRatioConsolidated_Layout2 dBSLeverageRatioConsolidated_Layout2, List<String> contextIdentifiers,  List<Context> contextElements, List<Object> bodyElements, List<String> unitIdentifiers, List<Unit> unitElements, String bankCode, String startDateDefault, String endDateDefault, String periodDateDefault)
                
                    {
                        String startDate = startDateDefault;
                        String endDate = endDateDefault;
                        String periodDate = periodDateDefault;
                    DBSLeverageRatioConsolidated_Layout2 field = dBSLeverageRatioConsolidated_Layout2;
                    
                    
                        
                        
                            
                                
                                Unit INR939 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR939 = createUnitIfNotExist(INR939, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - NotionalPrincipalAmount
                            
                                Map zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountMap943 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountMap943.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountMap943.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:OffBalanceSheetItemsWith10PercentCreditConversionFactorMember");
                                    
                                    
                                    String zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountValue941 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountMap943);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountFieldDataValue942 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountMap943, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountValue941 = zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountFieldDataValue942 == null ? "" : zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountFieldDataValue942.getValue();
                                    if(zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountFieldDataValue942 != null ) {
                                        if(!zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountFieldDataValue942.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountFieldDataValue942.getStartDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountFieldDataValue942.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountFieldDataValue942.getEndDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountFieldDataValue942.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountFieldDataValue942.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountContext940 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountMap943 );
                                        
                                
                                if(zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountValue941 != null && !"".equals(zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountValue941)) {
                                    
                                    addContext(DBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountContext940, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType notionalPrincipalAmountValue944 = new MonetaryItemType();
                                    notionalPrincipalAmountValue944.setContextRef(DBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountContext940);
                                    
                                    notionalPrincipalAmountValue944.setUnitRef(INR939);
                                    notionalPrincipalAmountValue944.setDecimals("INF");
                                    notionalPrincipalAmountValue944.setValue(new BigDecimal(zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountValue941));
                                    
                                    
                                    JAXBElement<MonetaryItemType> notionalPrincipalAmountElement945 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(notionalPrincipalAmountValue944);
                                    bodyElements.add(notionalPrincipalAmountElement945);
                                
                            }
                        
                            
                                
                                Unit INR946 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR946 = createUnitIfNotExist(INR946, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - ExposureAmount
                            
                                Map zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountMap950 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountMap950.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountMap950.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:OffBalanceSheetItemsWith10PercentCreditConversionFactorMember");
                                    
                                    
                                    String zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountValue948 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountMap950);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountFieldDataValue949 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountMap950, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountValue948 = zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountFieldDataValue949 == null ? "" : zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountFieldDataValue949.getValue();
                                    if(zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountFieldDataValue949 != null ) {
                                        if(!zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountFieldDataValue949.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountFieldDataValue949.getStartDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountFieldDataValue949.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountFieldDataValue949.getEndDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountFieldDataValue949.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountFieldDataValue949.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioConsolidated_Layout2ExposureAmountContext947 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountMap950 );
                                        
                                
                                if(zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountValue948 != null && !"".equals(zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountValue948)) {
                                    
                                    addContext(DBSLeverageRatioConsolidated_Layout2ExposureAmountContext947, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType exposureAmountValue951 = new MonetaryItemType();
                                    exposureAmountValue951.setContextRef(DBSLeverageRatioConsolidated_Layout2ExposureAmountContext947);
                                    
                                    exposureAmountValue951.setUnitRef(INR946);
                                    exposureAmountValue951.setDecimals("INF");
                                    exposureAmountValue951.setValue(new BigDecimal(zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountValue948));
                                    
                                    
                                    JAXBElement<MonetaryItemType> exposureAmountElement952 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(exposureAmountValue951);
                                    bodyElements.add(exposureAmountElement952);
                                
                            }
                        
                            
                                
                                Unit INR953 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR953 = createUnitIfNotExist(INR953, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - NotionalPrincipalAmount
                            
                                Map zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountMap957 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountMap957.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountMap957.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:UnconditionallyCancellableCreditCardsCommitmentsMember");
                                    
                                    
                                    String zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountValue955 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountMap957);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountFieldDataValue956 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountMap957, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountValue955 = zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountFieldDataValue956 == null ? "" : zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountFieldDataValue956.getValue();
                                    if(zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountFieldDataValue956 != null ) {
                                        if(!zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountFieldDataValue956.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountFieldDataValue956.getStartDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountFieldDataValue956.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountFieldDataValue956.getEndDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountFieldDataValue956.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountFieldDataValue956.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountContext954 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountMap957 );
                                        
                                
                                if(zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountValue955 != null && !"".equals(zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountValue955)) {
                                    
                                    addContext(DBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountContext954, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType notionalPrincipalAmountValue958 = new MonetaryItemType();
                                    notionalPrincipalAmountValue958.setContextRef(DBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountContext954);
                                    
                                    notionalPrincipalAmountValue958.setUnitRef(INR953);
                                    notionalPrincipalAmountValue958.setDecimals("INF");
                                    notionalPrincipalAmountValue958.setValue(new BigDecimal(zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountValue955));
                                    
                                    
                                    JAXBElement<MonetaryItemType> notionalPrincipalAmountElement959 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(notionalPrincipalAmountValue958);
                                    bodyElements.add(notionalPrincipalAmountElement959);
                                
                            }
                        
                            
                                
                                Unit pure960 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                                pure960 = createUnitIfNotExist(pure960, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                                
                            
                            // - CreditConversionFactor
                            
                                Map zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorMap964 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorMap964.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorMap964.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:UnconditionallyCancellableCreditCardsCommitmentsMember");
                                    
                                    
                                    String zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorValue962 = DBS06ReportUtil.retrieveValueForElement(field.getCreditConversionFactor(), zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorMap964);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorFieldDataValue963 = DBS06ReportUtil.retrieveFieldDataForElement(field.getCreditConversionFactor(), zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorMap964, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorValue962 = zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorFieldDataValue963 == null ? "" : zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorFieldDataValue963.getValue();
                                    if(zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorFieldDataValue963 != null ) {
                                        if(!zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorFieldDataValue963.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorFieldDataValue963.getStartDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorFieldDataValue963.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorFieldDataValue963.getEndDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorFieldDataValue963.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorFieldDataValue963.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioConsolidated_Layout2CreditConversionFactorContext961 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorMap964 );
                                        
                                
                                if(zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorValue962 != null && !"".equals(zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorValue962)) {
                                    
                                    addContext(DBSLeverageRatioConsolidated_Layout2CreditConversionFactorContext961, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    PercentItemType creditConversionFactorValue965 = new PercentItemType();
                                    creditConversionFactorValue965.setContextRef(DBSLeverageRatioConsolidated_Layout2CreditConversionFactorContext961);
                                    
                                    creditConversionFactorValue965.setUnitRef(pure960);
                                    creditConversionFactorValue965.setDecimals("INF");
                                    creditConversionFactorValue965.setValue(new BigDecimal(zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorValue962));
                                    
                                    
                                    JAXBElement<PercentItemType> creditConversionFactorElement966 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createCreditConversionFactor(creditConversionFactorValue965);
                                    bodyElements.add(creditConversionFactorElement966);
                                
                            }
                        
                            
                                
                                Unit INR967 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR967 = createUnitIfNotExist(INR967, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - ExposureAmount
                            
                                Map zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountMap971 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountMap971.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountMap971.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:UnconditionallyCancellableCreditCardsCommitmentsMember");
                                    
                                    
                                    String zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountValue969 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountMap971);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountFieldDataValue970 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountMap971, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountValue969 = zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountFieldDataValue970 == null ? "" : zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountFieldDataValue970.getValue();
                                    if(zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountFieldDataValue970 != null ) {
                                        if(!zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountFieldDataValue970.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountFieldDataValue970.getStartDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountFieldDataValue970.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountFieldDataValue970.getEndDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountFieldDataValue970.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountFieldDataValue970.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioConsolidated_Layout2ExposureAmountContext968 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountMap971 );
                                        
                                
                                if(zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountValue969 != null && !"".equals(zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountValue969)) {
                                    
                                    addContext(DBSLeverageRatioConsolidated_Layout2ExposureAmountContext968, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType exposureAmountValue972 = new MonetaryItemType();
                                    exposureAmountValue972.setContextRef(DBSLeverageRatioConsolidated_Layout2ExposureAmountContext968);
                                    
                                    exposureAmountValue972.setUnitRef(INR967);
                                    exposureAmountValue972.setDecimals("INF");
                                    exposureAmountValue972.setValue(new BigDecimal(zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountValue969));
                                    
                                    
                                    JAXBElement<MonetaryItemType> exposureAmountElement973 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(exposureAmountValue972);
                                    bodyElements.add(exposureAmountElement973);
                                
                            }
                        
                            
                                
                                Unit INR974 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR974 = createUnitIfNotExist(INR974, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - NotionalPrincipalAmount
                            
                                Map zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountMap978 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountMap978.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountMap978.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:OtherUnconditionallyCancellableCommitmentsMember");
                                    
                                    
                                    String zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountValue976 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountMap978);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountFieldDataValue977 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountMap978, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountValue976 = zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountFieldDataValue977 == null ? "" : zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountFieldDataValue977.getValue();
                                    if(zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountFieldDataValue977 != null ) {
                                        if(!zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountFieldDataValue977.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountFieldDataValue977.getStartDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountFieldDataValue977.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountFieldDataValue977.getEndDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountFieldDataValue977.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountFieldDataValue977.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountContext975 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountMap978 );
                                        
                                
                                if(zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountValue976 != null && !"".equals(zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountValue976)) {
                                    
                                    addContext(DBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountContext975, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType notionalPrincipalAmountValue979 = new MonetaryItemType();
                                    notionalPrincipalAmountValue979.setContextRef(DBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountContext975);
                                    
                                    notionalPrincipalAmountValue979.setUnitRef(INR974);
                                    notionalPrincipalAmountValue979.setDecimals("INF");
                                    notionalPrincipalAmountValue979.setValue(new BigDecimal(zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountValue976));
                                    
                                    
                                    JAXBElement<MonetaryItemType> notionalPrincipalAmountElement980 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(notionalPrincipalAmountValue979);
                                    bodyElements.add(notionalPrincipalAmountElement980);
                                
                            }
                        
                            
                                
                                Unit pure981 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                                pure981 = createUnitIfNotExist(pure981, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                                
                            
                            // - CreditConversionFactor
                            
                                Map zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorMap985 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorMap985.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorMap985.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:OtherUnconditionallyCancellableCommitmentsMember");
                                    
                                    
                                    String zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorValue983 = DBS06ReportUtil.retrieveValueForElement(field.getCreditConversionFactor(), zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorMap985);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorFieldDataValue984 = DBS06ReportUtil.retrieveFieldDataForElement(field.getCreditConversionFactor(), zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorMap985, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorValue983 = zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorFieldDataValue984 == null ? "" : zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorFieldDataValue984.getValue();
                                    if(zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorFieldDataValue984 != null ) {
                                        if(!zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorFieldDataValue984.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorFieldDataValue984.getStartDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorFieldDataValue984.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorFieldDataValue984.getEndDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorFieldDataValue984.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorFieldDataValue984.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioConsolidated_Layout2CreditConversionFactorContext982 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorMap985 );
                                        
                                
                                if(zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorValue983 != null && !"".equals(zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorValue983)) {
                                    
                                    addContext(DBSLeverageRatioConsolidated_Layout2CreditConversionFactorContext982, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    PercentItemType creditConversionFactorValue986 = new PercentItemType();
                                    creditConversionFactorValue986.setContextRef(DBSLeverageRatioConsolidated_Layout2CreditConversionFactorContext982);
                                    
                                    creditConversionFactorValue986.setUnitRef(pure981);
                                    creditConversionFactorValue986.setDecimals("INF");
                                    creditConversionFactorValue986.setValue(new BigDecimal(zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorValue983));
                                    
                                    
                                    JAXBElement<PercentItemType> creditConversionFactorElement987 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createCreditConversionFactor(creditConversionFactorValue986);
                                    bodyElements.add(creditConversionFactorElement987);
                                
                            }
                        
                            
                                
                                Unit INR988 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR988 = createUnitIfNotExist(INR988, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - ExposureAmount
                            
                                Map zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountMap992 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountMap992.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountMap992.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:OtherUnconditionallyCancellableCommitmentsMember");
                                    
                                    
                                    String zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountValue990 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountMap992);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountFieldDataValue991 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountMap992, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountValue990 = zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountFieldDataValue991 == null ? "" : zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountFieldDataValue991.getValue();
                                    if(zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountFieldDataValue991 != null ) {
                                        if(!zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountFieldDataValue991.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountFieldDataValue991.getStartDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountFieldDataValue991.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountFieldDataValue991.getEndDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountFieldDataValue991.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountFieldDataValue991.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioConsolidated_Layout2ExposureAmountContext989 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountMap992 );
                                        
                                
                                if(zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountValue990 != null && !"".equals(zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountValue990)) {
                                    
                                    addContext(DBSLeverageRatioConsolidated_Layout2ExposureAmountContext989, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType exposureAmountValue993 = new MonetaryItemType();
                                    exposureAmountValue993.setContextRef(DBSLeverageRatioConsolidated_Layout2ExposureAmountContext989);
                                    
                                    exposureAmountValue993.setUnitRef(INR988);
                                    exposureAmountValue993.setDecimals("INF");
                                    exposureAmountValue993.setValue(new BigDecimal(zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountValue990));
                                    
                                    
                                    JAXBElement<MonetaryItemType> exposureAmountElement994 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(exposureAmountValue993);
                                    bodyElements.add(exposureAmountElement994);
                                
                            }
                        
                            
                                
                                Unit INR995 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR995 = createUnitIfNotExist(INR995, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - NotionalPrincipalAmount
                            
                                Map zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountMap999 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountMap999.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountMap999.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:OtherOffBalanceSheetItemsWith10PercentCreditConversionFactorMember");
                                    
                                    
                                    String zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountValue997 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountMap999);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountFieldDataValue998 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountMap999, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountValue997 = zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountFieldDataValue998 == null ? "" : zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountFieldDataValue998.getValue();
                                    if(zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountFieldDataValue998 != null ) {
                                        if(!zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountFieldDataValue998.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountFieldDataValue998.getStartDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountFieldDataValue998.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountFieldDataValue998.getEndDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountFieldDataValue998.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountFieldDataValue998.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountContext996 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountMap999 );
                                        
                                
                                if(zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountValue997 != null && !"".equals(zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountValue997)) {
                                    
                                    addContext(DBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountContext996, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType notionalPrincipalAmountValue1000 = new MonetaryItemType();
                                    notionalPrincipalAmountValue1000.setContextRef(DBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountContext996);
                                    
                                    notionalPrincipalAmountValue1000.setUnitRef(INR995);
                                    notionalPrincipalAmountValue1000.setDecimals("INF");
                                    notionalPrincipalAmountValue1000.setValue(new BigDecimal(zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountValue997));
                                    
                                    
                                    JAXBElement<MonetaryItemType> notionalPrincipalAmountElement1001 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(notionalPrincipalAmountValue1000);
                                    bodyElements.add(notionalPrincipalAmountElement1001);
                                
                            }
                        
                            
                                
                                Unit pure1002 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                                pure1002 = createUnitIfNotExist(pure1002, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                                
                            
                            // - CreditConversionFactor
                            
                                Map zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorMap1006 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorMap1006.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorMap1006.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:OtherOffBalanceSheetItemsWith10PercentCreditConversionFactorMember");
                                    
                                    
                                    String zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorValue1004 = DBS06ReportUtil.retrieveValueForElement(field.getCreditConversionFactor(), zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorMap1006);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorFieldDataValue1005 = DBS06ReportUtil.retrieveFieldDataForElement(field.getCreditConversionFactor(), zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorMap1006, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorValue1004 = zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorFieldDataValue1005 == null ? "" : zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorFieldDataValue1005.getValue();
                                    if(zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorFieldDataValue1005 != null ) {
                                        if(!zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorFieldDataValue1005.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorFieldDataValue1005.getStartDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorFieldDataValue1005.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorFieldDataValue1005.getEndDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorFieldDataValue1005.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorFieldDataValue1005.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioConsolidated_Layout2CreditConversionFactorContext1003 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorMap1006 );
                                        
                                
                                if(zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorValue1004 != null && !"".equals(zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorValue1004)) {
                                    
                                    addContext(DBSLeverageRatioConsolidated_Layout2CreditConversionFactorContext1003, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    PercentItemType creditConversionFactorValue1007 = new PercentItemType();
                                    creditConversionFactorValue1007.setContextRef(DBSLeverageRatioConsolidated_Layout2CreditConversionFactorContext1003);
                                    
                                    creditConversionFactorValue1007.setUnitRef(pure1002);
                                    creditConversionFactorValue1007.setDecimals("INF");
                                    creditConversionFactorValue1007.setValue(new BigDecimal(zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorValue1004));
                                    
                                    
                                    JAXBElement<PercentItemType> creditConversionFactorElement1008 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createCreditConversionFactor(creditConversionFactorValue1007);
                                    bodyElements.add(creditConversionFactorElement1008);
                                
                            }
                        
                            
                                
                                Unit INR1009 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1009 = createUnitIfNotExist(INR1009, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - ExposureAmount
                            
                                Map zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountMap1013 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountMap1013.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountMap1013.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:OtherOffBalanceSheetItemsWith10PercentCreditConversionFactorMember");
                                    
                                    
                                    String zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountValue1011 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountMap1013);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountFieldDataValue1012 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountMap1013, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountValue1011 = zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountFieldDataValue1012 == null ? "" : zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountFieldDataValue1012.getValue();
                                    if(zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountFieldDataValue1012 != null ) {
                                        if(!zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountFieldDataValue1012.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountFieldDataValue1012.getStartDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountFieldDataValue1012.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountFieldDataValue1012.getEndDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountFieldDataValue1012.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountFieldDataValue1012.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioConsolidated_Layout2ExposureAmountContext1010 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountMap1013 );
                                        
                                
                                if(zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountValue1011 != null && !"".equals(zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountValue1011)) {
                                    
                                    addContext(DBSLeverageRatioConsolidated_Layout2ExposureAmountContext1010, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType exposureAmountValue1014 = new MonetaryItemType();
                                    exposureAmountValue1014.setContextRef(DBSLeverageRatioConsolidated_Layout2ExposureAmountContext1010);
                                    
                                    exposureAmountValue1014.setUnitRef(INR1009);
                                    exposureAmountValue1014.setDecimals("INF");
                                    exposureAmountValue1014.setValue(new BigDecimal(zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountValue1011));
                                    
                                    
                                    JAXBElement<MonetaryItemType> exposureAmountElement1015 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(exposureAmountValue1014);
                                    bodyElements.add(exposureAmountElement1015);
                                
                            }
                        
                            
                                
                                Unit INR1016 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1016 = createUnitIfNotExist(INR1016, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - NotionalPrincipalAmount
                            
                                Map zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountMap1020 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountMap1020.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountMap1020.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:OffBalanceSheetItemsWith20PercentCreditConversionFactorMember");
                                    
                                    
                                    String zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountValue1018 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountMap1020);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountFieldDataValue1019 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountMap1020, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountValue1018 = zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountFieldDataValue1019 == null ? "" : zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountFieldDataValue1019.getValue();
                                    if(zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountFieldDataValue1019 != null ) {
                                        if(!zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountFieldDataValue1019.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountFieldDataValue1019.getStartDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountFieldDataValue1019.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountFieldDataValue1019.getEndDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountFieldDataValue1019.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountFieldDataValue1019.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountContext1017 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountMap1020 );
                                        
                                
                                if(zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountValue1018 != null && !"".equals(zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountValue1018)) {
                                    
                                    addContext(DBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountContext1017, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType notionalPrincipalAmountValue1021 = new MonetaryItemType();
                                    notionalPrincipalAmountValue1021.setContextRef(DBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountContext1017);
                                    
                                    notionalPrincipalAmountValue1021.setUnitRef(INR1016);
                                    notionalPrincipalAmountValue1021.setDecimals("INF");
                                    notionalPrincipalAmountValue1021.setValue(new BigDecimal(zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountValue1018));
                                    
                                    
                                    JAXBElement<MonetaryItemType> notionalPrincipalAmountElement1022 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(notionalPrincipalAmountValue1021);
                                    bodyElements.add(notionalPrincipalAmountElement1022);
                                
                            }
                        
                            
                                
                                Unit pure1023 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                                pure1023 = createUnitIfNotExist(pure1023, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                                
                            
                            // - CreditConversionFactor
                            
                                Map zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorMap1027 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorMap1027.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorMap1027.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:OffBalanceSheetItemsWith20PercentCreditConversionFactorMember");
                                    
                                    
                                    String zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorValue1025 = DBS06ReportUtil.retrieveValueForElement(field.getCreditConversionFactor(), zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorMap1027);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorFieldDataValue1026 = DBS06ReportUtil.retrieveFieldDataForElement(field.getCreditConversionFactor(), zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorMap1027, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorValue1025 = zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorFieldDataValue1026 == null ? "" : zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorFieldDataValue1026.getValue();
                                    if(zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorFieldDataValue1026 != null ) {
                                        if(!zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorFieldDataValue1026.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorFieldDataValue1026.getStartDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorFieldDataValue1026.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorFieldDataValue1026.getEndDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorFieldDataValue1026.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorFieldDataValue1026.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioConsolidated_Layout2CreditConversionFactorContext1024 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorMap1027 );
                                        
                                
                                if(zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorValue1025 != null && !"".equals(zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorValue1025)) {
                                    
                                    addContext(DBSLeverageRatioConsolidated_Layout2CreditConversionFactorContext1024, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    PercentItemType creditConversionFactorValue1028 = new PercentItemType();
                                    creditConversionFactorValue1028.setContextRef(DBSLeverageRatioConsolidated_Layout2CreditConversionFactorContext1024);
                                    
                                    creditConversionFactorValue1028.setUnitRef(pure1023);
                                    creditConversionFactorValue1028.setDecimals("INF");
                                    creditConversionFactorValue1028.setValue(new BigDecimal(zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorValue1025));
                                    
                                    
                                    JAXBElement<PercentItemType> creditConversionFactorElement1029 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createCreditConversionFactor(creditConversionFactorValue1028);
                                    bodyElements.add(creditConversionFactorElement1029);
                                
                            }
                        
                            
                                
                                Unit INR1030 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1030 = createUnitIfNotExist(INR1030, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - ExposureAmount
                            
                                Map zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountMap1034 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountMap1034.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountMap1034.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:OffBalanceSheetItemsWith20PercentCreditConversionFactorMember");
                                    
                                    
                                    String zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountValue1032 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountMap1034);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountFieldDataValue1033 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountMap1034, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountValue1032 = zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountFieldDataValue1033 == null ? "" : zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountFieldDataValue1033.getValue();
                                    if(zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountFieldDataValue1033 != null ) {
                                        if(!zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountFieldDataValue1033.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountFieldDataValue1033.getStartDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountFieldDataValue1033.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountFieldDataValue1033.getEndDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountFieldDataValue1033.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountFieldDataValue1033.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioConsolidated_Layout2ExposureAmountContext1031 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountMap1034 );
                                        
                                
                                if(zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountValue1032 != null && !"".equals(zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountValue1032)) {
                                    
                                    addContext(DBSLeverageRatioConsolidated_Layout2ExposureAmountContext1031, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType exposureAmountValue1035 = new MonetaryItemType();
                                    exposureAmountValue1035.setContextRef(DBSLeverageRatioConsolidated_Layout2ExposureAmountContext1031);
                                    
                                    exposureAmountValue1035.setUnitRef(INR1030);
                                    exposureAmountValue1035.setDecimals("INF");
                                    exposureAmountValue1035.setValue(new BigDecimal(zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountValue1032));
                                    
                                    
                                    JAXBElement<MonetaryItemType> exposureAmountElement1036 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(exposureAmountValue1035);
                                    bodyElements.add(exposureAmountElement1036);
                                
                            }
                        
                            
                                
                                Unit INR1037 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1037 = createUnitIfNotExist(INR1037, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - NotionalPrincipalAmount
                            
                                Map zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountMap1041 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountMap1041.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountMap1041.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:OffBalanceSheetItemsWith50PercentCreditConversionFactorMember");
                                    
                                    
                                    String zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountValue1039 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountMap1041);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountFieldDataValue1040 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountMap1041, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountValue1039 = zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountFieldDataValue1040 == null ? "" : zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountFieldDataValue1040.getValue();
                                    if(zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountFieldDataValue1040 != null ) {
                                        if(!zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountFieldDataValue1040.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountFieldDataValue1040.getStartDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountFieldDataValue1040.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountFieldDataValue1040.getEndDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountFieldDataValue1040.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountFieldDataValue1040.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountContext1038 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountMap1041 );
                                        
                                
                                if(zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountValue1039 != null && !"".equals(zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountValue1039)) {
                                    
                                    addContext(DBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountContext1038, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType notionalPrincipalAmountValue1042 = new MonetaryItemType();
                                    notionalPrincipalAmountValue1042.setContextRef(DBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountContext1038);
                                    
                                    notionalPrincipalAmountValue1042.setUnitRef(INR1037);
                                    notionalPrincipalAmountValue1042.setDecimals("INF");
                                    notionalPrincipalAmountValue1042.setValue(new BigDecimal(zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountValue1039));
                                    
                                    
                                    JAXBElement<MonetaryItemType> notionalPrincipalAmountElement1043 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(notionalPrincipalAmountValue1042);
                                    bodyElements.add(notionalPrincipalAmountElement1043);
                                
                            }
                        
                            
                                
                                Unit pure1044 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                                pure1044 = createUnitIfNotExist(pure1044, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                                
                            
                            // - CreditConversionFactor
                            
                                Map zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorMap1048 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorMap1048.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorMap1048.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:OffBalanceSheetItemsWith50PercentCreditConversionFactorMember");
                                    
                                    
                                    String zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorValue1046 = DBS06ReportUtil.retrieveValueForElement(field.getCreditConversionFactor(), zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorMap1048);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorFieldDataValue1047 = DBS06ReportUtil.retrieveFieldDataForElement(field.getCreditConversionFactor(), zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorMap1048, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorValue1046 = zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorFieldDataValue1047 == null ? "" : zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorFieldDataValue1047.getValue();
                                    if(zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorFieldDataValue1047 != null ) {
                                        if(!zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorFieldDataValue1047.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorFieldDataValue1047.getStartDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorFieldDataValue1047.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorFieldDataValue1047.getEndDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorFieldDataValue1047.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorFieldDataValue1047.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioConsolidated_Layout2CreditConversionFactorContext1045 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorMap1048 );
                                        
                                
                                if(zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorValue1046 != null && !"".equals(zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorValue1046)) {
                                    
                                    addContext(DBSLeverageRatioConsolidated_Layout2CreditConversionFactorContext1045, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    PercentItemType creditConversionFactorValue1049 = new PercentItemType();
                                    creditConversionFactorValue1049.setContextRef(DBSLeverageRatioConsolidated_Layout2CreditConversionFactorContext1045);
                                    
                                    creditConversionFactorValue1049.setUnitRef(pure1044);
                                    creditConversionFactorValue1049.setDecimals("INF");
                                    creditConversionFactorValue1049.setValue(new BigDecimal(zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorValue1046));
                                    
                                    
                                    JAXBElement<PercentItemType> creditConversionFactorElement1050 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createCreditConversionFactor(creditConversionFactorValue1049);
                                    bodyElements.add(creditConversionFactorElement1050);
                                
                            }
                        
                            
                                
                                Unit INR1051 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1051 = createUnitIfNotExist(INR1051, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - ExposureAmount
                            
                                Map zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountMap1055 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountMap1055.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountMap1055.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:OffBalanceSheetItemsWith50PercentCreditConversionFactorMember");
                                    
                                    
                                    String zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountValue1053 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountMap1055);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountFieldDataValue1054 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountMap1055, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountValue1053 = zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountFieldDataValue1054 == null ? "" : zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountFieldDataValue1054.getValue();
                                    if(zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountFieldDataValue1054 != null ) {
                                        if(!zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountFieldDataValue1054.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountFieldDataValue1054.getStartDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountFieldDataValue1054.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountFieldDataValue1054.getEndDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountFieldDataValue1054.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountFieldDataValue1054.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioConsolidated_Layout2ExposureAmountContext1052 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountMap1055 );
                                        
                                
                                if(zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountValue1053 != null && !"".equals(zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountValue1053)) {
                                    
                                    addContext(DBSLeverageRatioConsolidated_Layout2ExposureAmountContext1052, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType exposureAmountValue1056 = new MonetaryItemType();
                                    exposureAmountValue1056.setContextRef(DBSLeverageRatioConsolidated_Layout2ExposureAmountContext1052);
                                    
                                    exposureAmountValue1056.setUnitRef(INR1051);
                                    exposureAmountValue1056.setDecimals("INF");
                                    exposureAmountValue1056.setValue(new BigDecimal(zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountValue1053));
                                    
                                    
                                    JAXBElement<MonetaryItemType> exposureAmountElement1057 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(exposureAmountValue1056);
                                    bodyElements.add(exposureAmountElement1057);
                                
                            }
                        
                            
                                
                                Unit INR1058 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1058 = createUnitIfNotExist(INR1058, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - NotionalPrincipalAmount
                            
                                Map zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountMap1062 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountMap1062.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountMap1062.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:OffBalanceSheetItemsWith100PercentCreditConversionFactorMember");
                                    
                                    
                                    String zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountValue1060 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountMap1062);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountFieldDataValue1061 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountMap1062, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountValue1060 = zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountFieldDataValue1061 == null ? "" : zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountFieldDataValue1061.getValue();
                                    if(zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountFieldDataValue1061 != null ) {
                                        if(!zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountFieldDataValue1061.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountFieldDataValue1061.getStartDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountFieldDataValue1061.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountFieldDataValue1061.getEndDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountFieldDataValue1061.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountFieldDataValue1061.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountContext1059 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountMap1062 );
                                        
                                
                                if(zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountValue1060 != null && !"".equals(zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountValue1060)) {
                                    
                                    addContext(DBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountContext1059, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType notionalPrincipalAmountValue1063 = new MonetaryItemType();
                                    notionalPrincipalAmountValue1063.setContextRef(DBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountContext1059);
                                    
                                    notionalPrincipalAmountValue1063.setUnitRef(INR1058);
                                    notionalPrincipalAmountValue1063.setDecimals("INF");
                                    notionalPrincipalAmountValue1063.setValue(new BigDecimal(zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountValue1060));
                                    
                                    
                                    JAXBElement<MonetaryItemType> notionalPrincipalAmountElement1064 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(notionalPrincipalAmountValue1063);
                                    bodyElements.add(notionalPrincipalAmountElement1064);
                                
                            }
                        
                            
                                
                                Unit pure1065 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                                pure1065 = createUnitIfNotExist(pure1065, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                                
                            
                            // - CreditConversionFactor
                            
                                Map zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorMap1069 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorMap1069.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorMap1069.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:OffBalanceSheetItemsWith100PercentCreditConversionFactorMember");
                                    
                                    
                                    String zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorValue1067 = DBS06ReportUtil.retrieveValueForElement(field.getCreditConversionFactor(), zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorMap1069);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorFieldDataValue1068 = DBS06ReportUtil.retrieveFieldDataForElement(field.getCreditConversionFactor(), zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorMap1069, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorValue1067 = zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorFieldDataValue1068 == null ? "" : zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorFieldDataValue1068.getValue();
                                    if(zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorFieldDataValue1068 != null ) {
                                        if(!zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorFieldDataValue1068.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorFieldDataValue1068.getStartDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorFieldDataValue1068.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorFieldDataValue1068.getEndDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorFieldDataValue1068.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorFieldDataValue1068.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioConsolidated_Layout2CreditConversionFactorContext1066 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorMap1069 );
                                        
                                
                                if(zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorValue1067 != null && !"".equals(zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorValue1067)) {
                                    
                                    addContext(DBSLeverageRatioConsolidated_Layout2CreditConversionFactorContext1066, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    PercentItemType creditConversionFactorValue1070 = new PercentItemType();
                                    creditConversionFactorValue1070.setContextRef(DBSLeverageRatioConsolidated_Layout2CreditConversionFactorContext1066);
                                    
                                    creditConversionFactorValue1070.setUnitRef(pure1065);
                                    creditConversionFactorValue1070.setDecimals("INF");
                                    creditConversionFactorValue1070.setValue(new BigDecimal(zeroDBSLeverageRatioConsolidated_Layout2CreditConversionFactorValue1067));
                                    
                                    
                                    JAXBElement<PercentItemType> creditConversionFactorElement1071 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createCreditConversionFactor(creditConversionFactorValue1070);
                                    bodyElements.add(creditConversionFactorElement1071);
                                
                            }
                        
                            
                                
                                Unit INR1072 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1072 = createUnitIfNotExist(INR1072, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - ExposureAmount
                            
                                Map zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountMap1076 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountMap1076.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountMap1076.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:OffBalanceSheetItemsWith100PercentCreditConversionFactorMember");
                                    
                                    
                                    String zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountValue1074 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountMap1076);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountFieldDataValue1075 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountMap1076, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountValue1074 = zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountFieldDataValue1075 == null ? "" : zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountFieldDataValue1075.getValue();
                                    if(zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountFieldDataValue1075 != null ) {
                                        if(!zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountFieldDataValue1075.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountFieldDataValue1075.getStartDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountFieldDataValue1075.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountFieldDataValue1075.getEndDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountFieldDataValue1075.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountFieldDataValue1075.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioConsolidated_Layout2ExposureAmountContext1073 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountMap1076 );
                                        
                                
                                if(zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountValue1074 != null && !"".equals(zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountValue1074)) {
                                    
                                    addContext(DBSLeverageRatioConsolidated_Layout2ExposureAmountContext1073, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType exposureAmountValue1077 = new MonetaryItemType();
                                    exposureAmountValue1077.setContextRef(DBSLeverageRatioConsolidated_Layout2ExposureAmountContext1073);
                                    
                                    exposureAmountValue1077.setUnitRef(INR1072);
                                    exposureAmountValue1077.setDecimals("INF");
                                    exposureAmountValue1077.setValue(new BigDecimal(zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountValue1074));
                                    
                                    
                                    JAXBElement<MonetaryItemType> exposureAmountElement1078 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(exposureAmountValue1077);
                                    bodyElements.add(exposureAmountElement1078);
                                
                            }
                        
                            
                                
                                Unit INR1079 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1079 = createUnitIfNotExist(INR1079, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - NotionalPrincipalAmount
                            
                                Map zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountMap1083 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountMap1083.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountMap1083.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:OffBalanceSheetExposureItemMember");
                                    
                                    
                                    String zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountValue1081 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountMap1083);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountFieldDataValue1082 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountMap1083, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountValue1081 = zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountFieldDataValue1082 == null ? "" : zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountFieldDataValue1082.getValue();
                                    if(zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountFieldDataValue1082 != null ) {
                                        if(!zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountFieldDataValue1082.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountFieldDataValue1082.getStartDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountFieldDataValue1082.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountFieldDataValue1082.getEndDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountFieldDataValue1082.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountFieldDataValue1082.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountContext1080 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountMap1083 );
                                        
                                
                                if(zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountValue1081 != null && !"".equals(zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountValue1081)) {
                                    
                                    addContext(DBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountContext1080, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType notionalPrincipalAmountValue1084 = new MonetaryItemType();
                                    notionalPrincipalAmountValue1084.setContextRef(DBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountContext1080);
                                    
                                    notionalPrincipalAmountValue1084.setUnitRef(INR1079);
                                    notionalPrincipalAmountValue1084.setDecimals("INF");
                                    notionalPrincipalAmountValue1084.setValue(new BigDecimal(zeroDBSLeverageRatioConsolidated_Layout2NotionalPrincipalAmountValue1081));
                                    
                                    
                                    JAXBElement<MonetaryItemType> notionalPrincipalAmountElement1085 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(notionalPrincipalAmountValue1084);
                                    bodyElements.add(notionalPrincipalAmountElement1085);
                                
                            }
                        
                            
                                
                                Unit INR1086 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1086 = createUnitIfNotExist(INR1086, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - ExposureAmount
                            
                                Map zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountMap1090 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountMap1090.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountMap1090.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:OffBalanceSheetExposureItemMember");
                                    
                                    
                                    String zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountValue1088 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountMap1090);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountFieldDataValue1089 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountMap1090, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountValue1088 = zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountFieldDataValue1089 == null ? "" : zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountFieldDataValue1089.getValue();
                                    if(zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountFieldDataValue1089 != null ) {
                                        if(!zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountFieldDataValue1089.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountFieldDataValue1089.getStartDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountFieldDataValue1089.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountFieldDataValue1089.getEndDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountFieldDataValue1089.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountFieldDataValue1089.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioConsolidated_Layout2ExposureAmountContext1087 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountMap1090 );
                                        
                                
                                if(zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountValue1088 != null && !"".equals(zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountValue1088)) {
                                    
                                    addContext(DBSLeverageRatioConsolidated_Layout2ExposureAmountContext1087, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType exposureAmountValue1091 = new MonetaryItemType();
                                    exposureAmountValue1091.setContextRef(DBSLeverageRatioConsolidated_Layout2ExposureAmountContext1087);
                                    
                                    exposureAmountValue1091.setUnitRef(INR1086);
                                    exposureAmountValue1091.setDecimals("INF");
                                    exposureAmountValue1091.setValue(new BigDecimal(zeroDBSLeverageRatioConsolidated_Layout2ExposureAmountValue1088));
                                    
                                    
                                    JAXBElement<MonetaryItemType> exposureAmountElement1092 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(exposureAmountValue1091);
                                    bodyElements.add(exposureAmountElement1092);
                                
                            }
                        
                        
                    
                    
            
                    
                    
                    
                    return "";
                    }

                
                    
                
                // if typemembers exist
                
                
                
                // create variable for subclass DBSLeverageRatioConsolidated_Layout3 if any typeMembers then List or Single
                //DBSLeverageRatioConsolidated_Layout3 dBSLeverageRatioConsolidated_Layout3 = mainReportData.getDBSLeverageRatioConsolidated_Layout3();
                
                    private String dBSLeverageRatioConsolidated_Layout3Method(DBSLeverageRatioConsolidated_Layout3 dBSLeverageRatioConsolidated_Layout3, List<String> contextIdentifiers,  List<Context> contextElements, List<Object> bodyElements, List<String> unitIdentifiers, List<Unit> unitElements, String bankCode, String startDateDefault, String endDateDefault, String periodDateDefault)
                
                    {
                        String startDate = startDateDefault;
                        String endDate = endDateDefault;
                        String periodDate = periodDateDefault;
                    DBSLeverageRatioConsolidated_Layout3 field = dBSLeverageRatioConsolidated_Layout3;
                    
                    
                        
                        
                            
                                
                                Unit INR1093 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1093 = createUnitIfNotExist(INR1093, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - NotionalPrincipalAmount
                            
                                Map zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountMap1097 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountMap1097.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountMap1097.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:CreditDerivativesProtectionSoldMember");
                                    
                                    
                                    String zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountValue1095 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountMap1097);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1096 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountMap1097, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountValue1095 = zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1096 == null ? "" : zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1096.getValue();
                                    if(zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1096 != null ) {
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1096.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1096.getStartDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1096.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1096.getEndDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1096.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1096.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountContext1094 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountMap1097 );
                                        
                                
                                if(zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountValue1095 != null && !"".equals(zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountValue1095)) {
                                    
                                    addContext(DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountContext1094, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType notionalPrincipalAmountValue1098 = new MonetaryItemType();
                                    notionalPrincipalAmountValue1098.setContextRef(DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountContext1094);
                                    
                                    notionalPrincipalAmountValue1098.setUnitRef(INR1093);
                                    notionalPrincipalAmountValue1098.setDecimals("INF");
                                    notionalPrincipalAmountValue1098.setValue(new BigDecimal(zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountValue1095));
                                    
                                    
                                    JAXBElement<MonetaryItemType> notionalPrincipalAmountElement1099 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(notionalPrincipalAmountValue1098);
                                    bodyElements.add(notionalPrincipalAmountElement1099);
                                
                            }
                        
                            
                                
                                Unit INR1100 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1100 = createUnitIfNotExist(INR1100, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - ReplacementCost
                            
                                Map zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostMap1104 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostMap1104.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostMap1104.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:CreditDerivativesProtectionSoldMember");
                                    
                                    
                                    String zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostValue1102 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostMap1104);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1103 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostMap1104, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostValue1102 = zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1103 == null ? "" : zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1103.getValue();
                                    if(zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1103 != null ) {
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1103.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1103.getStartDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1103.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1103.getEndDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1103.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1103.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioConsolidated_Layout3ReplacementCostContext1101 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostMap1104 );
                                        
                                
                                if(zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostValue1102 != null && !"".equals(zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostValue1102)) {
                                    
                                    addContext(DBSLeverageRatioConsolidated_Layout3ReplacementCostContext1101, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType replacementCostValue1105 = new MonetaryItemType();
                                    replacementCostValue1105.setContextRef(DBSLeverageRatioConsolidated_Layout3ReplacementCostContext1101);
                                    
                                    replacementCostValue1105.setUnitRef(INR1100);
                                    replacementCostValue1105.setDecimals("INF");
                                    replacementCostValue1105.setValue(new BigDecimal(zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostValue1102));
                                    
                                    
                                    JAXBElement<MonetaryItemType> replacementCostElement1106 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(replacementCostValue1105);
                                    bodyElements.add(replacementCostElement1106);
                                
                            }
                        
                            
                                
                                Unit INR1107 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1107 = createUnitIfNotExist(INR1107, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - PotentialFutureExposure
                            
                                Map zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureMap1111 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureMap1111.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureMap1111.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:CreditDerivativesProtectionSoldMember");
                                    
                                    
                                    String zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureValue1109 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureMap1111);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureFieldDataValue1110 = DBS06ReportUtil.retrieveFieldDataForElement(field.getPotentialFutureExposure(), zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureMap1111, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureValue1109 = zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureFieldDataValue1110 == null ? "" : zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureFieldDataValue1110.getValue();
                                    if(zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureFieldDataValue1110 != null ) {
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureFieldDataValue1110.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureFieldDataValue1110.getStartDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureFieldDataValue1110.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureFieldDataValue1110.getEndDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureFieldDataValue1110.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureFieldDataValue1110.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureContext1108 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureMap1111 );
                                        
                                
                                if(zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureValue1109 != null && !"".equals(zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureValue1109)) {
                                    
                                    addContext(DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureContext1108, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType potentialFutureExposureValue1112 = new MonetaryItemType();
                                    potentialFutureExposureValue1112.setContextRef(DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureContext1108);
                                    
                                    potentialFutureExposureValue1112.setUnitRef(INR1107);
                                    potentialFutureExposureValue1112.setDecimals("INF");
                                    potentialFutureExposureValue1112.setValue(new BigDecimal(zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureValue1109));
                                    
                                    
                                    JAXBElement<MonetaryItemType> potentialFutureExposureElement1113 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createPotentialFutureExposure(potentialFutureExposureValue1112);
                                    bodyElements.add(potentialFutureExposureElement1113);
                                
                            }
                        
                            
                                
                                Unit INR1114 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1114 = createUnitIfNotExist(INR1114, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - NotionalPrincipalAmount
                            
                                Map zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountMap1118 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountMap1118.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountMap1118.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:CreditDerivativesProtectionBoughtMember");
                                    
                                    
                                    String zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountValue1116 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountMap1118);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1117 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountMap1118, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountValue1116 = zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1117 == null ? "" : zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1117.getValue();
                                    if(zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1117 != null ) {
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1117.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1117.getStartDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1117.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1117.getEndDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1117.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1117.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountContext1115 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountMap1118 );
                                        
                                
                                if(zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountValue1116 != null && !"".equals(zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountValue1116)) {
                                    
                                    addContext(DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountContext1115, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType notionalPrincipalAmountValue1119 = new MonetaryItemType();
                                    notionalPrincipalAmountValue1119.setContextRef(DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountContext1115);
                                    
                                    notionalPrincipalAmountValue1119.setUnitRef(INR1114);
                                    notionalPrincipalAmountValue1119.setDecimals("INF");
                                    notionalPrincipalAmountValue1119.setValue(new BigDecimal(zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountValue1116));
                                    
                                    
                                    JAXBElement<MonetaryItemType> notionalPrincipalAmountElement1120 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(notionalPrincipalAmountValue1119);
                                    bodyElements.add(notionalPrincipalAmountElement1120);
                                
                            }
                        
                            
                                
                                Unit INR1121 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1121 = createUnitIfNotExist(INR1121, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - ReplacementCost
                            
                                Map zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostMap1125 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostMap1125.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostMap1125.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:CreditDerivativesProtectionBoughtMember");
                                    
                                    
                                    String zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostValue1123 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostMap1125);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1124 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostMap1125, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostValue1123 = zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1124 == null ? "" : zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1124.getValue();
                                    if(zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1124 != null ) {
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1124.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1124.getStartDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1124.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1124.getEndDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1124.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1124.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioConsolidated_Layout3ReplacementCostContext1122 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostMap1125 );
                                        
                                
                                if(zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostValue1123 != null && !"".equals(zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostValue1123)) {
                                    
                                    addContext(DBSLeverageRatioConsolidated_Layout3ReplacementCostContext1122, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType replacementCostValue1126 = new MonetaryItemType();
                                    replacementCostValue1126.setContextRef(DBSLeverageRatioConsolidated_Layout3ReplacementCostContext1122);
                                    
                                    replacementCostValue1126.setUnitRef(INR1121);
                                    replacementCostValue1126.setDecimals("INF");
                                    replacementCostValue1126.setValue(new BigDecimal(zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostValue1123));
                                    
                                    
                                    JAXBElement<MonetaryItemType> replacementCostElement1127 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(replacementCostValue1126);
                                    bodyElements.add(replacementCostElement1127);
                                
                            }
                        
                            
                                
                                Unit INR1128 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1128 = createUnitIfNotExist(INR1128, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - PotentialFutureExposure
                            
                                Map zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureMap1132 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureMap1132.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureMap1132.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:CreditDerivativesProtectionBoughtMember");
                                    
                                    
                                    String zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureValue1130 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureMap1132);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureFieldDataValue1131 = DBS06ReportUtil.retrieveFieldDataForElement(field.getPotentialFutureExposure(), zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureMap1132, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureValue1130 = zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureFieldDataValue1131 == null ? "" : zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureFieldDataValue1131.getValue();
                                    if(zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureFieldDataValue1131 != null ) {
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureFieldDataValue1131.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureFieldDataValue1131.getStartDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureFieldDataValue1131.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureFieldDataValue1131.getEndDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureFieldDataValue1131.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureFieldDataValue1131.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureContext1129 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureMap1132 );
                                        
                                
                                if(zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureValue1130 != null && !"".equals(zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureValue1130)) {
                                    
                                    addContext(DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureContext1129, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType potentialFutureExposureValue1133 = new MonetaryItemType();
                                    potentialFutureExposureValue1133.setContextRef(DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureContext1129);
                                    
                                    potentialFutureExposureValue1133.setUnitRef(INR1128);
                                    potentialFutureExposureValue1133.setDecimals("INF");
                                    potentialFutureExposureValue1133.setValue(new BigDecimal(zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureValue1130));
                                    
                                    
                                    JAXBElement<MonetaryItemType> potentialFutureExposureElement1134 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createPotentialFutureExposure(potentialFutureExposureValue1133);
                                    bodyElements.add(potentialFutureExposureElement1134);
                                
                            }
                        
                            
                                
                                Unit INR1135 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1135 = createUnitIfNotExist(INR1135, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - NotionalPrincipalAmount
                            
                                Map zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountMap1139 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountMap1139.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountMap1139.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:FinancialDerivativesMember");
                                    
                                    
                                    String zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountValue1137 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountMap1139);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1138 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountMap1139, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountValue1137 = zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1138 == null ? "" : zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1138.getValue();
                                    if(zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1138 != null ) {
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1138.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1138.getStartDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1138.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1138.getEndDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1138.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1138.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountContext1136 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountMap1139 );
                                        
                                
                                if(zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountValue1137 != null && !"".equals(zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountValue1137)) {
                                    
                                    addContext(DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountContext1136, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType notionalPrincipalAmountValue1140 = new MonetaryItemType();
                                    notionalPrincipalAmountValue1140.setContextRef(DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountContext1136);
                                    
                                    notionalPrincipalAmountValue1140.setUnitRef(INR1135);
                                    notionalPrincipalAmountValue1140.setDecimals("INF");
                                    notionalPrincipalAmountValue1140.setValue(new BigDecimal(zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountValue1137));
                                    
                                    
                                    JAXBElement<MonetaryItemType> notionalPrincipalAmountElement1141 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(notionalPrincipalAmountValue1140);
                                    bodyElements.add(notionalPrincipalAmountElement1141);
                                
                            }
                        
                            
                                
                                Unit INR1142 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1142 = createUnitIfNotExist(INR1142, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - ReplacementCost
                            
                                Map zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostMap1146 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostMap1146.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostMap1146.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:FinancialDerivativesMember");
                                    
                                    
                                    String zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostValue1144 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostMap1146);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1145 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostMap1146, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostValue1144 = zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1145 == null ? "" : zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1145.getValue();
                                    if(zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1145 != null ) {
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1145.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1145.getStartDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1145.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1145.getEndDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1145.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1145.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioConsolidated_Layout3ReplacementCostContext1143 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostMap1146 );
                                        
                                
                                if(zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostValue1144 != null && !"".equals(zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostValue1144)) {
                                    
                                    addContext(DBSLeverageRatioConsolidated_Layout3ReplacementCostContext1143, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType replacementCostValue1147 = new MonetaryItemType();
                                    replacementCostValue1147.setContextRef(DBSLeverageRatioConsolidated_Layout3ReplacementCostContext1143);
                                    
                                    replacementCostValue1147.setUnitRef(INR1142);
                                    replacementCostValue1147.setDecimals("INF");
                                    replacementCostValue1147.setValue(new BigDecimal(zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostValue1144));
                                    
                                    
                                    JAXBElement<MonetaryItemType> replacementCostElement1148 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(replacementCostValue1147);
                                    bodyElements.add(replacementCostElement1148);
                                
                            }
                        
                            
                                
                                Unit INR1149 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1149 = createUnitIfNotExist(INR1149, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - PotentialFutureExposure
                            
                                Map zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureMap1153 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureMap1153.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureMap1153.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:FinancialDerivativesMember");
                                    
                                    
                                    String zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureValue1151 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureMap1153);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureFieldDataValue1152 = DBS06ReportUtil.retrieveFieldDataForElement(field.getPotentialFutureExposure(), zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureMap1153, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureValue1151 = zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureFieldDataValue1152 == null ? "" : zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureFieldDataValue1152.getValue();
                                    if(zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureFieldDataValue1152 != null ) {
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureFieldDataValue1152.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureFieldDataValue1152.getStartDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureFieldDataValue1152.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureFieldDataValue1152.getEndDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureFieldDataValue1152.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureFieldDataValue1152.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureContext1150 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureMap1153 );
                                        
                                
                                if(zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureValue1151 != null && !"".equals(zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureValue1151)) {
                                    
                                    addContext(DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureContext1150, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType potentialFutureExposureValue1154 = new MonetaryItemType();
                                    potentialFutureExposureValue1154.setContextRef(DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureContext1150);
                                    
                                    potentialFutureExposureValue1154.setUnitRef(INR1149);
                                    potentialFutureExposureValue1154.setDecimals("INF");
                                    potentialFutureExposureValue1154.setValue(new BigDecimal(zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureValue1151));
                                    
                                    
                                    JAXBElement<MonetaryItemType> potentialFutureExposureElement1155 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createPotentialFutureExposure(potentialFutureExposureValue1154);
                                    bodyElements.add(potentialFutureExposureElement1155);
                                
                            }
                        
                            
                                
                                Unit INR1156 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1156 = createUnitIfNotExist(INR1156, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - NotionalPrincipalAmount
                            
                                Map zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountMap1160 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountMap1160.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountMap1160.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:AggregateOfCreditAndFinancialDerivativesMember");
                                    
                                    
                                    String zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountValue1158 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountMap1160);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1159 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountMap1160, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountValue1158 = zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1159 == null ? "" : zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1159.getValue();
                                    if(zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1159 != null ) {
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1159.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1159.getStartDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1159.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1159.getEndDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1159.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1159.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountContext1157 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountMap1160 );
                                        
                                
                                if(zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountValue1158 != null && !"".equals(zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountValue1158)) {
                                    
                                    addContext(DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountContext1157, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType notionalPrincipalAmountValue1161 = new MonetaryItemType();
                                    notionalPrincipalAmountValue1161.setContextRef(DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountContext1157);
                                    
                                    notionalPrincipalAmountValue1161.setUnitRef(INR1156);
                                    notionalPrincipalAmountValue1161.setDecimals("INF");
                                    notionalPrincipalAmountValue1161.setValue(new BigDecimal(zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountValue1158));
                                    
                                    
                                    JAXBElement<MonetaryItemType> notionalPrincipalAmountElement1162 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(notionalPrincipalAmountValue1161);
                                    bodyElements.add(notionalPrincipalAmountElement1162);
                                
                            }
                        
                            
                                
                                Unit INR1163 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1163 = createUnitIfNotExist(INR1163, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - ReplacementCost
                            
                                Map zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostMap1167 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostMap1167.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostMap1167.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:AggregateOfCreditAndFinancialDerivativesMember");
                                    
                                    
                                    String zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostValue1165 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostMap1167);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1166 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostMap1167, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostValue1165 = zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1166 == null ? "" : zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1166.getValue();
                                    if(zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1166 != null ) {
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1166.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1166.getStartDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1166.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1166.getEndDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1166.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1166.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioConsolidated_Layout3ReplacementCostContext1164 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostMap1167 );
                                        
                                
                                if(zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostValue1165 != null && !"".equals(zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostValue1165)) {
                                    
                                    addContext(DBSLeverageRatioConsolidated_Layout3ReplacementCostContext1164, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType replacementCostValue1168 = new MonetaryItemType();
                                    replacementCostValue1168.setContextRef(DBSLeverageRatioConsolidated_Layout3ReplacementCostContext1164);
                                    
                                    replacementCostValue1168.setUnitRef(INR1163);
                                    replacementCostValue1168.setDecimals("INF");
                                    replacementCostValue1168.setValue(new BigDecimal(zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostValue1165));
                                    
                                    
                                    JAXBElement<MonetaryItemType> replacementCostElement1169 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(replacementCostValue1168);
                                    bodyElements.add(replacementCostElement1169);
                                
                            }
                        
                            
                                
                                Unit INR1170 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1170 = createUnitIfNotExist(INR1170, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - PotentialFutureExposure
                            
                                Map zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureMap1174 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureMap1174.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureMap1174.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:AggregateOfCreditAndFinancialDerivativesMember");
                                    
                                    
                                    String zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureValue1172 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureMap1174);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureFieldDataValue1173 = DBS06ReportUtil.retrieveFieldDataForElement(field.getPotentialFutureExposure(), zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureMap1174, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureValue1172 = zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureFieldDataValue1173 == null ? "" : zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureFieldDataValue1173.getValue();
                                    if(zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureFieldDataValue1173 != null ) {
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureFieldDataValue1173.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureFieldDataValue1173.getStartDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureFieldDataValue1173.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureFieldDataValue1173.getEndDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureFieldDataValue1173.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureFieldDataValue1173.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureContext1171 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureMap1174 );
                                        
                                
                                if(zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureValue1172 != null && !"".equals(zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureValue1172)) {
                                    
                                    addContext(DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureContext1171, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType potentialFutureExposureValue1175 = new MonetaryItemType();
                                    potentialFutureExposureValue1175.setContextRef(DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureContext1171);
                                    
                                    potentialFutureExposureValue1175.setUnitRef(INR1170);
                                    potentialFutureExposureValue1175.setDecimals("INF");
                                    potentialFutureExposureValue1175.setValue(new BigDecimal(zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureValue1172));
                                    
                                    
                                    JAXBElement<MonetaryItemType> potentialFutureExposureElement1176 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createPotentialFutureExposure(potentialFutureExposureValue1175);
                                    bodyElements.add(potentialFutureExposureElement1176);
                                
                            }
                        
                            
                                
                                Unit INR1177 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1177 = createUnitIfNotExist(INR1177, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - NotionalPrincipalAmount
                            
                                Map zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountMap1181 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountMap1181.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountMap1181.put("in-rbi-rep:ExposureClassAxis", "rbi-core:ExposureToQCCPsMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountMap1181.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:AggregateOfCreditAndFinancialDerivativesMember");
                                    
                                    
                                    String zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountValue1179 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountMap1181);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1180 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountMap1181, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountValue1179 = zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1180 == null ? "" : zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1180.getValue();
                                    if(zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1180 != null ) {
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1180.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1180.getStartDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1180.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1180.getEndDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1180.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1180.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountContext1178 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountMap1181 );
                                        
                                
                                if(zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountValue1179 != null && !"".equals(zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountValue1179)) {
                                    
                                    addContext(DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountContext1178, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType notionalPrincipalAmountValue1182 = new MonetaryItemType();
                                    notionalPrincipalAmountValue1182.setContextRef(DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountContext1178);
                                    
                                    notionalPrincipalAmountValue1182.setUnitRef(INR1177);
                                    notionalPrincipalAmountValue1182.setDecimals("INF");
                                    notionalPrincipalAmountValue1182.setValue(new BigDecimal(zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountValue1179));
                                    
                                    
                                    JAXBElement<MonetaryItemType> notionalPrincipalAmountElement1183 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(notionalPrincipalAmountValue1182);
                                    bodyElements.add(notionalPrincipalAmountElement1183);
                                
                            }
                        
                            
                                
                                Unit INR1184 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1184 = createUnitIfNotExist(INR1184, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - ReplacementCost
                            
                                Map zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostMap1188 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostMap1188.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostMap1188.put("in-rbi-rep:ExposureClassAxis", "rbi-core:ExposureToQCCPsMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostMap1188.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:AggregateOfCreditAndFinancialDerivativesMember");
                                    
                                    
                                    String zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostValue1186 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostMap1188);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1187 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostMap1188, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostValue1186 = zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1187 == null ? "" : zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1187.getValue();
                                    if(zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1187 != null ) {
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1187.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1187.getStartDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1187.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1187.getEndDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1187.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1187.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioConsolidated_Layout3ReplacementCostContext1185 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostMap1188 );
                                        
                                
                                if(zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostValue1186 != null && !"".equals(zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostValue1186)) {
                                    
                                    addContext(DBSLeverageRatioConsolidated_Layout3ReplacementCostContext1185, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType replacementCostValue1189 = new MonetaryItemType();
                                    replacementCostValue1189.setContextRef(DBSLeverageRatioConsolidated_Layout3ReplacementCostContext1185);
                                    
                                    replacementCostValue1189.setUnitRef(INR1184);
                                    replacementCostValue1189.setDecimals("INF");
                                    replacementCostValue1189.setValue(new BigDecimal(zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostValue1186));
                                    
                                    
                                    JAXBElement<MonetaryItemType> replacementCostElement1190 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(replacementCostValue1189);
                                    bodyElements.add(replacementCostElement1190);
                                
                            }
                        
                            
                                
                                Unit INR1191 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1191 = createUnitIfNotExist(INR1191, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - PotentialFutureExposure
                            
                                Map zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureMap1195 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureMap1195.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureMap1195.put("in-rbi-rep:ExposureClassAxis", "rbi-core:ExposureToQCCPsMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureMap1195.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:AggregateOfCreditAndFinancialDerivativesMember");
                                    
                                    
                                    String zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureValue1193 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureMap1195);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureFieldDataValue1194 = DBS06ReportUtil.retrieveFieldDataForElement(field.getPotentialFutureExposure(), zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureMap1195, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureValue1193 = zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureFieldDataValue1194 == null ? "" : zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureFieldDataValue1194.getValue();
                                    if(zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureFieldDataValue1194 != null ) {
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureFieldDataValue1194.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureFieldDataValue1194.getStartDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureFieldDataValue1194.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureFieldDataValue1194.getEndDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureFieldDataValue1194.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureFieldDataValue1194.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureContext1192 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureMap1195 );
                                        
                                
                                if(zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureValue1193 != null && !"".equals(zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureValue1193)) {
                                    
                                    addContext(DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureContext1192, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType potentialFutureExposureValue1196 = new MonetaryItemType();
                                    potentialFutureExposureValue1196.setContextRef(DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureContext1192);
                                    
                                    potentialFutureExposureValue1196.setUnitRef(INR1191);
                                    potentialFutureExposureValue1196.setDecimals("INF");
                                    potentialFutureExposureValue1196.setValue(new BigDecimal(zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureValue1193));
                                    
                                    
                                    JAXBElement<MonetaryItemType> potentialFutureExposureElement1197 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createPotentialFutureExposure(potentialFutureExposureValue1196);
                                    bodyElements.add(potentialFutureExposureElement1197);
                                
                            }
                        
                            
                                
                                Unit INR1198 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1198 = createUnitIfNotExist(INR1198, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - NotionalPrincipalAmount
                            
                                Map zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountMap1202 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountMap1202.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountMap1202.put("in-rbi-rep:ExposureClassAxis", "rbi-core:ExposureToNonQCCPsMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountMap1202.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:AggregateOfCreditAndFinancialDerivativesMember");
                                    
                                    
                                    String zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountValue1200 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountMap1202);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1201 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountMap1202, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountValue1200 = zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1201 == null ? "" : zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1201.getValue();
                                    if(zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1201 != null ) {
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1201.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1201.getStartDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1201.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1201.getEndDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1201.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1201.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountContext1199 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountMap1202 );
                                        
                                
                                if(zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountValue1200 != null && !"".equals(zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountValue1200)) {
                                    
                                    addContext(DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountContext1199, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType notionalPrincipalAmountValue1203 = new MonetaryItemType();
                                    notionalPrincipalAmountValue1203.setContextRef(DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountContext1199);
                                    
                                    notionalPrincipalAmountValue1203.setUnitRef(INR1198);
                                    notionalPrincipalAmountValue1203.setDecimals("INF");
                                    notionalPrincipalAmountValue1203.setValue(new BigDecimal(zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountValue1200));
                                    
                                    
                                    JAXBElement<MonetaryItemType> notionalPrincipalAmountElement1204 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(notionalPrincipalAmountValue1203);
                                    bodyElements.add(notionalPrincipalAmountElement1204);
                                
                            }
                        
                            
                                
                                Unit INR1205 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1205 = createUnitIfNotExist(INR1205, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - ReplacementCost
                            
                                Map zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostMap1209 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostMap1209.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostMap1209.put("in-rbi-rep:ExposureClassAxis", "rbi-core:ExposureToNonQCCPsMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostMap1209.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:AggregateOfCreditAndFinancialDerivativesMember");
                                    
                                    
                                    String zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostValue1207 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostMap1209);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1208 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostMap1209, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostValue1207 = zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1208 == null ? "" : zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1208.getValue();
                                    if(zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1208 != null ) {
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1208.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1208.getStartDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1208.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1208.getEndDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1208.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1208.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioConsolidated_Layout3ReplacementCostContext1206 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostMap1209 );
                                        
                                
                                if(zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostValue1207 != null && !"".equals(zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostValue1207)) {
                                    
                                    addContext(DBSLeverageRatioConsolidated_Layout3ReplacementCostContext1206, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType replacementCostValue1210 = new MonetaryItemType();
                                    replacementCostValue1210.setContextRef(DBSLeverageRatioConsolidated_Layout3ReplacementCostContext1206);
                                    
                                    replacementCostValue1210.setUnitRef(INR1205);
                                    replacementCostValue1210.setDecimals("INF");
                                    replacementCostValue1210.setValue(new BigDecimal(zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostValue1207));
                                    
                                    
                                    JAXBElement<MonetaryItemType> replacementCostElement1211 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(replacementCostValue1210);
                                    bodyElements.add(replacementCostElement1211);
                                
                            }
                        
                            
                                
                                Unit INR1212 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1212 = createUnitIfNotExist(INR1212, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - PotentialFutureExposure
                            
                                Map zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureMap1216 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureMap1216.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureMap1216.put("in-rbi-rep:ExposureClassAxis", "rbi-core:ExposureToNonQCCPsMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureMap1216.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:AggregateOfCreditAndFinancialDerivativesMember");
                                    
                                    
                                    String zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureValue1214 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureMap1216);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureFieldDataValue1215 = DBS06ReportUtil.retrieveFieldDataForElement(field.getPotentialFutureExposure(), zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureMap1216, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureValue1214 = zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureFieldDataValue1215 == null ? "" : zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureFieldDataValue1215.getValue();
                                    if(zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureFieldDataValue1215 != null ) {
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureFieldDataValue1215.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureFieldDataValue1215.getStartDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureFieldDataValue1215.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureFieldDataValue1215.getEndDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureFieldDataValue1215.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureFieldDataValue1215.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureContext1213 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureMap1216 );
                                        
                                
                                if(zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureValue1214 != null && !"".equals(zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureValue1214)) {
                                    
                                    addContext(DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureContext1213, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType potentialFutureExposureValue1217 = new MonetaryItemType();
                                    potentialFutureExposureValue1217.setContextRef(DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureContext1213);
                                    
                                    potentialFutureExposureValue1217.setUnitRef(INR1212);
                                    potentialFutureExposureValue1217.setDecimals("INF");
                                    potentialFutureExposureValue1217.setValue(new BigDecimal(zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureValue1214));
                                    
                                    
                                    JAXBElement<MonetaryItemType> potentialFutureExposureElement1218 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createPotentialFutureExposure(potentialFutureExposureValue1217);
                                    bodyElements.add(potentialFutureExposureElement1218);
                                
                            }
                        
                            
                                
                                Unit INR1219 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1219 = createUnitIfNotExist(INR1219, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - NotionalPrincipalAmount
                            
                                Map zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountMap1223 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountMap1223.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountMap1223.put("in-rbi-rep:ExposureClassAxis", "rbi-core:ExposureDueToNonCentrallyClearedDerivativesMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountMap1223.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:AggregateOfCreditAndFinancialDerivativesMember");
                                    
                                    
                                    String zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountValue1221 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountMap1223);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1222 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountMap1223, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountValue1221 = zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1222 == null ? "" : zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1222.getValue();
                                    if(zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1222 != null ) {
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1222.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1222.getStartDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1222.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1222.getEndDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1222.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1222.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountContext1220 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountMap1223 );
                                        
                                
                                if(zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountValue1221 != null && !"".equals(zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountValue1221)) {
                                    
                                    addContext(DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountContext1220, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType notionalPrincipalAmountValue1224 = new MonetaryItemType();
                                    notionalPrincipalAmountValue1224.setContextRef(DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountContext1220);
                                    
                                    notionalPrincipalAmountValue1224.setUnitRef(INR1219);
                                    notionalPrincipalAmountValue1224.setDecimals("INF");
                                    notionalPrincipalAmountValue1224.setValue(new BigDecimal(zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountValue1221));
                                    
                                    
                                    JAXBElement<MonetaryItemType> notionalPrincipalAmountElement1225 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(notionalPrincipalAmountValue1224);
                                    bodyElements.add(notionalPrincipalAmountElement1225);
                                
                            }
                        
                            
                                
                                Unit INR1226 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1226 = createUnitIfNotExist(INR1226, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - ReplacementCost
                            
                                Map zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostMap1230 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostMap1230.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostMap1230.put("in-rbi-rep:ExposureClassAxis", "rbi-core:ExposureDueToNonCentrallyClearedDerivativesMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostMap1230.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:AggregateOfCreditAndFinancialDerivativesMember");
                                    
                                    
                                    String zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostValue1228 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostMap1230);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1229 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostMap1230, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostValue1228 = zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1229 == null ? "" : zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1229.getValue();
                                    if(zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1229 != null ) {
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1229.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1229.getStartDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1229.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1229.getEndDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1229.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1229.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioConsolidated_Layout3ReplacementCostContext1227 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostMap1230 );
                                        
                                
                                if(zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostValue1228 != null && !"".equals(zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostValue1228)) {
                                    
                                    addContext(DBSLeverageRatioConsolidated_Layout3ReplacementCostContext1227, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType replacementCostValue1231 = new MonetaryItemType();
                                    replacementCostValue1231.setContextRef(DBSLeverageRatioConsolidated_Layout3ReplacementCostContext1227);
                                    
                                    replacementCostValue1231.setUnitRef(INR1226);
                                    replacementCostValue1231.setDecimals("INF");
                                    replacementCostValue1231.setValue(new BigDecimal(zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostValue1228));
                                    
                                    
                                    JAXBElement<MonetaryItemType> replacementCostElement1232 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(replacementCostValue1231);
                                    bodyElements.add(replacementCostElement1232);
                                
                            }
                        
                            
                                
                                Unit INR1233 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1233 = createUnitIfNotExist(INR1233, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - PotentialFutureExposure
                            
                                Map zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureMap1237 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureMap1237.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureMap1237.put("in-rbi-rep:ExposureClassAxis", "rbi-core:ExposureDueToNonCentrallyClearedDerivativesMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureMap1237.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:AggregateOfCreditAndFinancialDerivativesMember");
                                    
                                    
                                    String zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureValue1235 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureMap1237);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureFieldDataValue1236 = DBS06ReportUtil.retrieveFieldDataForElement(field.getPotentialFutureExposure(), zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureMap1237, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureValue1235 = zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureFieldDataValue1236 == null ? "" : zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureFieldDataValue1236.getValue();
                                    if(zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureFieldDataValue1236 != null ) {
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureFieldDataValue1236.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureFieldDataValue1236.getStartDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureFieldDataValue1236.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureFieldDataValue1236.getEndDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureFieldDataValue1236.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureFieldDataValue1236.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureContext1234 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureMap1237 );
                                        
                                
                                if(zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureValue1235 != null && !"".equals(zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureValue1235)) {
                                    
                                    addContext(DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureContext1234, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType potentialFutureExposureValue1238 = new MonetaryItemType();
                                    potentialFutureExposureValue1238.setContextRef(DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureContext1234);
                                    
                                    potentialFutureExposureValue1238.setUnitRef(INR1233);
                                    potentialFutureExposureValue1238.setDecimals("INF");
                                    potentialFutureExposureValue1238.setValue(new BigDecimal(zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureValue1235));
                                    
                                    
                                    JAXBElement<MonetaryItemType> potentialFutureExposureElement1239 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createPotentialFutureExposure(potentialFutureExposureValue1238);
                                    bodyElements.add(potentialFutureExposureElement1239);
                                
                            }
                        
                            
                                
                                Unit INR1240 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1240 = createUnitIfNotExist(INR1240, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - NotionalPrincipalAmount
                            
                                Map zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountMap1244 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountMap1244.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountMap1244.put("in-rbi-rep:ExposureClassAxis", "rbi-core:OtherExposuresMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountMap1244.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:AggregateOfCreditAndFinancialDerivativesMember");
                                    
                                    
                                    String zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountValue1242 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountMap1244);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1243 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountMap1244, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountValue1242 = zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1243 == null ? "" : zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1243.getValue();
                                    if(zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1243 != null ) {
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1243.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1243.getStartDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1243.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1243.getEndDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1243.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1243.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountContext1241 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountMap1244 );
                                        
                                
                                if(zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountValue1242 != null && !"".equals(zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountValue1242)) {
                                    
                                    addContext(DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountContext1241, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType notionalPrincipalAmountValue1245 = new MonetaryItemType();
                                    notionalPrincipalAmountValue1245.setContextRef(DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountContext1241);
                                    
                                    notionalPrincipalAmountValue1245.setUnitRef(INR1240);
                                    notionalPrincipalAmountValue1245.setDecimals("INF");
                                    notionalPrincipalAmountValue1245.setValue(new BigDecimal(zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountValue1242));
                                    
                                    
                                    JAXBElement<MonetaryItemType> notionalPrincipalAmountElement1246 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(notionalPrincipalAmountValue1245);
                                    bodyElements.add(notionalPrincipalAmountElement1246);
                                
                            }
                        
                            
                                
                                Unit INR1247 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1247 = createUnitIfNotExist(INR1247, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - ReplacementCost
                            
                                Map zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostMap1251 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostMap1251.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostMap1251.put("in-rbi-rep:ExposureClassAxis", "rbi-core:OtherExposuresMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostMap1251.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:AggregateOfCreditAndFinancialDerivativesMember");
                                    
                                    
                                    String zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostValue1249 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostMap1251);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1250 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostMap1251, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostValue1249 = zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1250 == null ? "" : zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1250.getValue();
                                    if(zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1250 != null ) {
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1250.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1250.getStartDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1250.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1250.getEndDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1250.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1250.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioConsolidated_Layout3ReplacementCostContext1248 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostMap1251 );
                                        
                                
                                if(zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostValue1249 != null && !"".equals(zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostValue1249)) {
                                    
                                    addContext(DBSLeverageRatioConsolidated_Layout3ReplacementCostContext1248, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType replacementCostValue1252 = new MonetaryItemType();
                                    replacementCostValue1252.setContextRef(DBSLeverageRatioConsolidated_Layout3ReplacementCostContext1248);
                                    
                                    replacementCostValue1252.setUnitRef(INR1247);
                                    replacementCostValue1252.setDecimals("INF");
                                    replacementCostValue1252.setValue(new BigDecimal(zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostValue1249));
                                    
                                    
                                    JAXBElement<MonetaryItemType> replacementCostElement1253 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(replacementCostValue1252);
                                    bodyElements.add(replacementCostElement1253);
                                
                            }
                        
                            
                                
                                Unit INR1254 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1254 = createUnitIfNotExist(INR1254, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - PotentialFutureExposure
                            
                                Map zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureMap1258 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureMap1258.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureMap1258.put("in-rbi-rep:ExposureClassAxis", "rbi-core:OtherExposuresMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureMap1258.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:AggregateOfCreditAndFinancialDerivativesMember");
                                    
                                    
                                    String zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureValue1256 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureMap1258);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureFieldDataValue1257 = DBS06ReportUtil.retrieveFieldDataForElement(field.getPotentialFutureExposure(), zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureMap1258, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureValue1256 = zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureFieldDataValue1257 == null ? "" : zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureFieldDataValue1257.getValue();
                                    if(zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureFieldDataValue1257 != null ) {
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureFieldDataValue1257.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureFieldDataValue1257.getStartDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureFieldDataValue1257.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureFieldDataValue1257.getEndDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureFieldDataValue1257.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureFieldDataValue1257.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureContext1255 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureMap1258 );
                                        
                                
                                if(zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureValue1256 != null && !"".equals(zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureValue1256)) {
                                    
                                    addContext(DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureContext1255, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType potentialFutureExposureValue1259 = new MonetaryItemType();
                                    potentialFutureExposureValue1259.setContextRef(DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureContext1255);
                                    
                                    potentialFutureExposureValue1259.setUnitRef(INR1254);
                                    potentialFutureExposureValue1259.setDecimals("INF");
                                    potentialFutureExposureValue1259.setValue(new BigDecimal(zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureValue1256));
                                    
                                    
                                    JAXBElement<MonetaryItemType> potentialFutureExposureElement1260 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createPotentialFutureExposure(potentialFutureExposureValue1259);
                                    bodyElements.add(potentialFutureExposureElement1260);
                                
                            }
                        
                            
                                
                                Unit INR1261 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1261 = createUnitIfNotExist(INR1261, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - NotionalPrincipalAmount
                            
                                Map zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountMap1265 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountMap1265.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountMap1265.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:ExemptedCCPLegOfClientClearedTradeExposuresMember");
                                    
                                    
                                    String zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountValue1263 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountMap1265);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1264 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountMap1265, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountValue1263 = zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1264 == null ? "" : zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1264.getValue();
                                    if(zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1264 != null ) {
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1264.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1264.getStartDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1264.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1264.getEndDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1264.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1264.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountContext1262 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountMap1265 );
                                        
                                
                                if(zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountValue1263 != null && !"".equals(zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountValue1263)) {
                                    
                                    addContext(DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountContext1262, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType notionalPrincipalAmountValue1266 = new MonetaryItemType();
                                    notionalPrincipalAmountValue1266.setContextRef(DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountContext1262);
                                    
                                    notionalPrincipalAmountValue1266.setUnitRef(INR1261);
                                    notionalPrincipalAmountValue1266.setDecimals("INF");
                                    notionalPrincipalAmountValue1266.setValue(new BigDecimal(zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountValue1263));
                                    
                                    
                                    JAXBElement<MonetaryItemType> notionalPrincipalAmountElement1267 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(notionalPrincipalAmountValue1266);
                                    bodyElements.add(notionalPrincipalAmountElement1267);
                                
                            }
                        
                            
                                
                                Unit INR1268 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1268 = createUnitIfNotExist(INR1268, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - ReplacementCost
                            
                                Map zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostMap1272 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostMap1272.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostMap1272.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:ExemptedCCPLegOfClientClearedTradeExposuresMember");
                                    
                                    
                                    String zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostValue1270 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostMap1272);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1271 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostMap1272, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostValue1270 = zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1271 == null ? "" : zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1271.getValue();
                                    if(zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1271 != null ) {
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1271.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1271.getStartDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1271.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1271.getEndDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1271.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1271.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioConsolidated_Layout3ReplacementCostContext1269 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostMap1272 );
                                        
                                
                                if(zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostValue1270 != null && !"".equals(zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostValue1270)) {
                                    
                                    addContext(DBSLeverageRatioConsolidated_Layout3ReplacementCostContext1269, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType replacementCostValue1273 = new MonetaryItemType();
                                    replacementCostValue1273.setContextRef(DBSLeverageRatioConsolidated_Layout3ReplacementCostContext1269);
                                    
                                    replacementCostValue1273.setUnitRef(INR1268);
                                    replacementCostValue1273.setDecimals("INF");
                                    replacementCostValue1273.setValue(new BigDecimal(zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostValue1270));
                                    
                                    
                                    JAXBElement<MonetaryItemType> replacementCostElement1274 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(replacementCostValue1273);
                                    bodyElements.add(replacementCostElement1274);
                                
                            }
                        
                            
                                
                                Unit INR1275 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1275 = createUnitIfNotExist(INR1275, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - PotentialFutureExposure
                            
                                Map zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureMap1279 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureMap1279.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureMap1279.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:ExemptedCCPLegOfClientClearedTradeExposuresMember");
                                    
                                    
                                    String zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureValue1277 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureMap1279);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureFieldDataValue1278 = DBS06ReportUtil.retrieveFieldDataForElement(field.getPotentialFutureExposure(), zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureMap1279, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureValue1277 = zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureFieldDataValue1278 == null ? "" : zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureFieldDataValue1278.getValue();
                                    if(zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureFieldDataValue1278 != null ) {
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureFieldDataValue1278.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureFieldDataValue1278.getStartDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureFieldDataValue1278.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureFieldDataValue1278.getEndDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureFieldDataValue1278.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureFieldDataValue1278.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureContext1276 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureMap1279 );
                                        
                                
                                if(zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureValue1277 != null && !"".equals(zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureValue1277)) {
                                    
                                    addContext(DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureContext1276, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType potentialFutureExposureValue1280 = new MonetaryItemType();
                                    potentialFutureExposureValue1280.setContextRef(DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureContext1276);
                                    
                                    potentialFutureExposureValue1280.setUnitRef(INR1275);
                                    potentialFutureExposureValue1280.setDecimals("INF");
                                    potentialFutureExposureValue1280.setValue(new BigDecimal(zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureValue1277));
                                    
                                    
                                    JAXBElement<MonetaryItemType> potentialFutureExposureElement1281 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createPotentialFutureExposure(potentialFutureExposureValue1280);
                                    bodyElements.add(potentialFutureExposureElement1281);
                                
                            }
                        
                            
                                
                                Unit INR1282 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1282 = createUnitIfNotExist(INR1282, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - NotionalPrincipalAmount
                            
                                Map zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountMap1286 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountMap1286.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountMap1286.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:EffectiveNotionalAmountOfWrittenCreditDerivativesMember");
                                    
                                    
                                    String zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountValue1284 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountMap1286);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1285 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountMap1286, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountValue1284 = zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1285 == null ? "" : zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1285.getValue();
                                    if(zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1285 != null ) {
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1285.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1285.getStartDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1285.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1285.getEndDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1285.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1285.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountContext1283 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountMap1286 );
                                        
                                
                                if(zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountValue1284 != null && !"".equals(zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountValue1284)) {
                                    
                                    addContext(DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountContext1283, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType notionalPrincipalAmountValue1287 = new MonetaryItemType();
                                    notionalPrincipalAmountValue1287.setContextRef(DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountContext1283);
                                    
                                    notionalPrincipalAmountValue1287.setUnitRef(INR1282);
                                    notionalPrincipalAmountValue1287.setDecimals("INF");
                                    notionalPrincipalAmountValue1287.setValue(new BigDecimal(zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountValue1284));
                                    
                                    
                                    JAXBElement<MonetaryItemType> notionalPrincipalAmountElement1288 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(notionalPrincipalAmountValue1287);
                                    bodyElements.add(notionalPrincipalAmountElement1288);
                                
                            }
                        
                            
                                
                                Unit INR1289 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1289 = createUnitIfNotExist(INR1289, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - NotionalPrincipalAmount
                            
                                Map zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountMap1293 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountMap1293.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountMap1293.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:NegativeChangeInFairValueOfWrittenCreditDerivativesMember");
                                    
                                    
                                    String zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountValue1291 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountMap1293);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1292 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountMap1293, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountValue1291 = zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1292 == null ? "" : zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1292.getValue();
                                    if(zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1292 != null ) {
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1292.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1292.getStartDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1292.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1292.getEndDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1292.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1292.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountContext1290 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountMap1293 );
                                        
                                
                                if(zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountValue1291 != null && !"".equals(zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountValue1291)) {
                                    
                                    addContext(DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountContext1290, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType notionalPrincipalAmountValue1294 = new MonetaryItemType();
                                    notionalPrincipalAmountValue1294.setContextRef(DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountContext1290);
                                    
                                    notionalPrincipalAmountValue1294.setUnitRef(INR1289);
                                    notionalPrincipalAmountValue1294.setDecimals("INF");
                                    notionalPrincipalAmountValue1294.setValue(new BigDecimal(zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountValue1291));
                                    
                                    
                                    JAXBElement<MonetaryItemType> notionalPrincipalAmountElement1295 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(notionalPrincipalAmountValue1294);
                                    bodyElements.add(notionalPrincipalAmountElement1295);
                                
                            }
                        
                            
                                
                                Unit INR1296 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1296 = createUnitIfNotExist(INR1296, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - NotionalPrincipalAmount
                            
                                Map zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountMap1300 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountMap1300.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountMap1300.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:EffectiveNotionalAmountOfWrittenCreditDerivativesAdjustedForNegativeChangeInFairValueMember");
                                    
                                    
                                    String zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountValue1298 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountMap1300);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1299 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountMap1300, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountValue1298 = zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1299 == null ? "" : zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1299.getValue();
                                    if(zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1299 != null ) {
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1299.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1299.getStartDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1299.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1299.getEndDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1299.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1299.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountContext1297 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountMap1300 );
                                        
                                
                                if(zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountValue1298 != null && !"".equals(zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountValue1298)) {
                                    
                                    addContext(DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountContext1297, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType notionalPrincipalAmountValue1301 = new MonetaryItemType();
                                    notionalPrincipalAmountValue1301.setContextRef(DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountContext1297);
                                    
                                    notionalPrincipalAmountValue1301.setUnitRef(INR1296);
                                    notionalPrincipalAmountValue1301.setDecimals("INF");
                                    notionalPrincipalAmountValue1301.setValue(new BigDecimal(zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountValue1298));
                                    
                                    
                                    JAXBElement<MonetaryItemType> notionalPrincipalAmountElement1302 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(notionalPrincipalAmountValue1301);
                                    bodyElements.add(notionalPrincipalAmountElement1302);
                                
                            }
                        
                            
                                
                                Unit INR1303 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1303 = createUnitIfNotExist(INR1303, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - NotionalPrincipalAmount
                            
                                Map zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountMap1307 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountMap1307.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountMap1307.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:CreditDerivativesBoughtMember");
                                    
                                    
                                    String zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountValue1305 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountMap1307);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1306 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountMap1307, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountValue1305 = zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1306 == null ? "" : zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1306.getValue();
                                    if(zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1306 != null ) {
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1306.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1306.getStartDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1306.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1306.getEndDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1306.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1306.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountContext1304 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountMap1307 );
                                        
                                
                                if(zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountValue1305 != null && !"".equals(zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountValue1305)) {
                                    
                                    addContext(DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountContext1304, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType notionalPrincipalAmountValue1308 = new MonetaryItemType();
                                    notionalPrincipalAmountValue1308.setContextRef(DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountContext1304);
                                    
                                    notionalPrincipalAmountValue1308.setUnitRef(INR1303);
                                    notionalPrincipalAmountValue1308.setDecimals("INF");
                                    notionalPrincipalAmountValue1308.setValue(new BigDecimal(zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountValue1305));
                                    
                                    
                                    JAXBElement<MonetaryItemType> notionalPrincipalAmountElement1309 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(notionalPrincipalAmountValue1308);
                                    bodyElements.add(notionalPrincipalAmountElement1309);
                                
                            }
                        
                            
                                
                                Unit INR1310 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1310 = createUnitIfNotExist(INR1310, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - NotionalPrincipalAmount
                            
                                Map zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountMap1314 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountMap1314.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountMap1314.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:NetAdjustedEffectiveNotionalAmountOfWrittenCreditDerivativesMember");
                                    
                                    
                                    String zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountValue1312 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountMap1314);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1313 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountMap1314, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountValue1312 = zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1313 == null ? "" : zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1313.getValue();
                                    if(zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1313 != null ) {
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1313.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1313.getStartDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1313.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1313.getEndDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1313.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1313.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountContext1311 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountMap1314 );
                                        
                                
                                if(zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountValue1312 != null && !"".equals(zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountValue1312)) {
                                    
                                    addContext(DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountContext1311, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType notionalPrincipalAmountValue1315 = new MonetaryItemType();
                                    notionalPrincipalAmountValue1315.setContextRef(DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountContext1311);
                                    
                                    notionalPrincipalAmountValue1315.setUnitRef(INR1310);
                                    notionalPrincipalAmountValue1315.setDecimals("INF");
                                    notionalPrincipalAmountValue1315.setValue(new BigDecimal(zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountValue1312));
                                    
                                    
                                    JAXBElement<MonetaryItemType> notionalPrincipalAmountElement1316 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(notionalPrincipalAmountValue1315);
                                    bodyElements.add(notionalPrincipalAmountElement1316);
                                
                            }
                        
                            
                                
                                Unit INR1317 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1317 = createUnitIfNotExist(INR1317, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - NotionalPrincipalAmount
                            
                                Map zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountMap1321 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountMap1321.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountMap1321.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:DeductionForAjustmentOfPFEAmountRelatingToWrittenCreditDerivativesMember");
                                    
                                    
                                    String zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountValue1319 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountMap1321);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1320 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountMap1321, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountValue1319 = zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1320 == null ? "" : zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1320.getValue();
                                    if(zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1320 != null ) {
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1320.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1320.getStartDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1320.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1320.getEndDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1320.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1320.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountContext1318 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountMap1321 );
                                        
                                
                                if(zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountValue1319 != null && !"".equals(zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountValue1319)) {
                                    
                                    addContext(DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountContext1318, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType notionalPrincipalAmountValue1322 = new MonetaryItemType();
                                    notionalPrincipalAmountValue1322.setContextRef(DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountContext1318);
                                    
                                    notionalPrincipalAmountValue1322.setUnitRef(INR1317);
                                    notionalPrincipalAmountValue1322.setDecimals("INF");
                                    notionalPrincipalAmountValue1322.setValue(new BigDecimal(zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountValue1319));
                                    
                                    
                                    JAXBElement<MonetaryItemType> notionalPrincipalAmountElement1323 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(notionalPrincipalAmountValue1322);
                                    bodyElements.add(notionalPrincipalAmountElement1323);
                                
                            }
                        
                            
                                
                                Unit INR1324 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1324 = createUnitIfNotExist(INR1324, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - NotionalPrincipalAmount
                            
                                Map zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountMap1328 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountMap1328.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountMap1328.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:WrittenCreditDerivativesNetMember");
                                    
                                    
                                    String zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountValue1326 = DBS06ReportUtil.retrieveValueForElement(field.getNotionalPrincipalAmount(), zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountMap1328);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1327 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNotionalPrincipalAmount(), zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountMap1328, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountValue1326 = zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1327 == null ? "" : zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1327.getValue();
                                    if(zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1327 != null ) {
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1327.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1327.getStartDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1327.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1327.getEndDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1327.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountFieldDataValue1327.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountContext1325 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountMap1328 );
                                        
                                
                                if(zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountValue1326 != null && !"".equals(zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountValue1326)) {
                                    
                                    addContext(DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountContext1325, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType notionalPrincipalAmountValue1329 = new MonetaryItemType();
                                    notionalPrincipalAmountValue1329.setContextRef(DBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountContext1325);
                                    
                                    notionalPrincipalAmountValue1329.setUnitRef(INR1324);
                                    notionalPrincipalAmountValue1329.setDecimals("INF");
                                    notionalPrincipalAmountValue1329.setValue(new BigDecimal(zeroDBSLeverageRatioConsolidated_Layout3NotionalPrincipalAmountValue1326));
                                    
                                    
                                    JAXBElement<MonetaryItemType> notionalPrincipalAmountElement1330 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNotionalPrincipalAmount(notionalPrincipalAmountValue1329);
                                    bodyElements.add(notionalPrincipalAmountElement1330);
                                
                            }
                        
                            
                                
                                Unit INR1331 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1331 = createUnitIfNotExist(INR1331, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - ReplacementCost
                            
                                Map zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostMap1335 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostMap1335.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostMap1335.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:GrossUpForDerivativeCollateralProvidedWhereDeductedFromTheBalanceSheetMember");
                                    
                                    
                                    String zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostValue1333 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostMap1335);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1334 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostMap1335, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostValue1333 = zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1334 == null ? "" : zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1334.getValue();
                                    if(zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1334 != null ) {
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1334.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1334.getStartDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1334.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1334.getEndDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1334.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1334.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioConsolidated_Layout3ReplacementCostContext1332 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostMap1335 );
                                        
                                
                                if(zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostValue1333 != null && !"".equals(zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostValue1333)) {
                                    
                                    addContext(DBSLeverageRatioConsolidated_Layout3ReplacementCostContext1332, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType replacementCostValue1336 = new MonetaryItemType();
                                    replacementCostValue1336.setContextRef(DBSLeverageRatioConsolidated_Layout3ReplacementCostContext1332);
                                    
                                    replacementCostValue1336.setUnitRef(INR1331);
                                    replacementCostValue1336.setDecimals("INF");
                                    replacementCostValue1336.setValue(new BigDecimal(zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostValue1333));
                                    
                                    
                                    JAXBElement<MonetaryItemType> replacementCostElement1337 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(replacementCostValue1336);
                                    bodyElements.add(replacementCostElement1337);
                                
                            }
                        
                            
                                
                                Unit INR1338 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1338 = createUnitIfNotExist(INR1338, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - ReplacementCost
                            
                                Map zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostMap1342 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostMap1342.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostMap1342.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:EligibleCashVariationMarginReceivedInDerivativeExpsouresMember");
                                    
                                    
                                    String zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostValue1340 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostMap1342);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1341 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostMap1342, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostValue1340 = zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1341 == null ? "" : zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1341.getValue();
                                    if(zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1341 != null ) {
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1341.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1341.getStartDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1341.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1341.getEndDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1341.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1341.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioConsolidated_Layout3ReplacementCostContext1339 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostMap1342 );
                                        
                                
                                if(zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostValue1340 != null && !"".equals(zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostValue1340)) {
                                    
                                    addContext(DBSLeverageRatioConsolidated_Layout3ReplacementCostContext1339, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType replacementCostValue1343 = new MonetaryItemType();
                                    replacementCostValue1343.setContextRef(DBSLeverageRatioConsolidated_Layout3ReplacementCostContext1339);
                                    
                                    replacementCostValue1343.setUnitRef(INR1338);
                                    replacementCostValue1343.setDecimals("INF");
                                    replacementCostValue1343.setValue(new BigDecimal(zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostValue1340));
                                    
                                    
                                    JAXBElement<MonetaryItemType> replacementCostElement1344 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(replacementCostValue1343);
                                    bodyElements.add(replacementCostElement1344);
                                
                            }
                        
                            
                                
                                Unit INR1345 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1345 = createUnitIfNotExist(INR1345, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - ReplacementCost
                            
                                Map zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostMap1349 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostMap1349.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostMap1349.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:ReceivableAssetsForCashVariationMarginProvidedInDerivativeExposuresMember");
                                    
                                    
                                    String zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostValue1347 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostMap1349);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1348 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostMap1349, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostValue1347 = zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1348 == null ? "" : zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1348.getValue();
                                    if(zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1348 != null ) {
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1348.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1348.getStartDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1348.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1348.getEndDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1348.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1348.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioConsolidated_Layout3ReplacementCostContext1346 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostMap1349 );
                                        
                                
                                if(zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostValue1347 != null && !"".equals(zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostValue1347)) {
                                    
                                    addContext(DBSLeverageRatioConsolidated_Layout3ReplacementCostContext1346, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType replacementCostValue1350 = new MonetaryItemType();
                                    replacementCostValue1350.setContextRef(DBSLeverageRatioConsolidated_Layout3ReplacementCostContext1346);
                                    
                                    replacementCostValue1350.setUnitRef(INR1345);
                                    replacementCostValue1350.setDecimals("INF");
                                    replacementCostValue1350.setValue(new BigDecimal(zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostValue1347));
                                    
                                    
                                    JAXBElement<MonetaryItemType> replacementCostElement1351 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(replacementCostValue1350);
                                    bodyElements.add(replacementCostElement1351);
                                
                            }
                        
                            
                                
                                Unit INR1352 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1352 = createUnitIfNotExist(INR1352, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - ReplacementCost
                            
                                Map zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostMap1356 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostMap1356.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostMap1356.put("rbi-core:LeverageRatioExposureAxis", "in-rbi-rep:DerivativesMember");
                                    
                                    
                                    String zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostValue1354 = DBS06ReportUtil.retrieveValueForElement(field.getReplacementCost(), zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostMap1356);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1355 = DBS06ReportUtil.retrieveFieldDataForElement(field.getReplacementCost(), zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostMap1356, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostValue1354 = zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1355 == null ? "" : zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1355.getValue();
                                    if(zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1355 != null ) {
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1355.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1355.getStartDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1355.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1355.getEndDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1355.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostFieldDataValue1355.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioConsolidated_Layout3ReplacementCostContext1353 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostMap1356 );
                                        
                                
                                if(zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostValue1354 != null && !"".equals(zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostValue1354)) {
                                    
                                    addContext(DBSLeverageRatioConsolidated_Layout3ReplacementCostContext1353, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType replacementCostValue1357 = new MonetaryItemType();
                                    replacementCostValue1357.setContextRef(DBSLeverageRatioConsolidated_Layout3ReplacementCostContext1353);
                                    
                                    replacementCostValue1357.setUnitRef(INR1352);
                                    replacementCostValue1357.setDecimals("INF");
                                    replacementCostValue1357.setValue(new BigDecimal(zeroDBSLeverageRatioConsolidated_Layout3ReplacementCostValue1354));
                                    
                                    
                                    JAXBElement<MonetaryItemType> replacementCostElement1358 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createReplacementCost(replacementCostValue1357);
                                    bodyElements.add(replacementCostElement1358);
                                
                            }
                        
                            
                                
                                Unit INR1359 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1359 = createUnitIfNotExist(INR1359, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - PotentialFutureExposure
                            
                                Map zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureMap1363 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureMap1363.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureMap1363.put("rbi-core:LeverageRatioExposureAxis", "in-rbi-rep:DerivativesMember");
                                    
                                    
                                    String zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureValue1361 = DBS06ReportUtil.retrieveValueForElement(field.getPotentialFutureExposure(), zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureMap1363);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureFieldDataValue1362 = DBS06ReportUtil.retrieveFieldDataForElement(field.getPotentialFutureExposure(), zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureMap1363, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureValue1361 = zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureFieldDataValue1362 == null ? "" : zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureFieldDataValue1362.getValue();
                                    if(zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureFieldDataValue1362 != null ) {
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureFieldDataValue1362.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureFieldDataValue1362.getStartDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureFieldDataValue1362.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureFieldDataValue1362.getEndDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureFieldDataValue1362.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureFieldDataValue1362.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureContext1360 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureMap1363 );
                                        
                                
                                if(zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureValue1361 != null && !"".equals(zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureValue1361)) {
                                    
                                    addContext(DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureContext1360, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType potentialFutureExposureValue1364 = new MonetaryItemType();
                                    potentialFutureExposureValue1364.setContextRef(DBSLeverageRatioConsolidated_Layout3PotentialFutureExposureContext1360);
                                    
                                    potentialFutureExposureValue1364.setUnitRef(INR1359);
                                    potentialFutureExposureValue1364.setDecimals("INF");
                                    potentialFutureExposureValue1364.setValue(new BigDecimal(zeroDBSLeverageRatioConsolidated_Layout3PotentialFutureExposureValue1361));
                                    
                                    
                                    JAXBElement<MonetaryItemType> potentialFutureExposureElement1365 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createPotentialFutureExposure(potentialFutureExposureValue1364);
                                    bodyElements.add(potentialFutureExposureElement1365);
                                
                            }
                        
                            
                                
                                Unit INR1366 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1366 = createUnitIfNotExist(INR1366, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - ExposureAmount
                            
                                Map zeroDBSLeverageRatioConsolidated_Layout3ExposureAmountMap1370 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout3ExposureAmountMap1370.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout3ExposureAmountMap1370.put("rbi-core:LeverageRatioExposureAxis", "in-rbi-rep:DerivativesMember");
                                    
                                    
                                    String zeroDBSLeverageRatioConsolidated_Layout3ExposureAmountValue1368 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), zeroDBSLeverageRatioConsolidated_Layout3ExposureAmountMap1370);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioConsolidated_Layout3ExposureAmountFieldDataValue1369 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), zeroDBSLeverageRatioConsolidated_Layout3ExposureAmountMap1370, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioConsolidated_Layout3ExposureAmountValue1368 = zeroDBSLeverageRatioConsolidated_Layout3ExposureAmountFieldDataValue1369 == null ? "" : zeroDBSLeverageRatioConsolidated_Layout3ExposureAmountFieldDataValue1369.getValue();
                                    if(zeroDBSLeverageRatioConsolidated_Layout3ExposureAmountFieldDataValue1369 != null ) {
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3ExposureAmountFieldDataValue1369.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioConsolidated_Layout3ExposureAmountFieldDataValue1369.getStartDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3ExposureAmountFieldDataValue1369.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioConsolidated_Layout3ExposureAmountFieldDataValue1369.getEndDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout3ExposureAmountFieldDataValue1369.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioConsolidated_Layout3ExposureAmountFieldDataValue1369.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioConsolidated_Layout3ExposureAmountContext1367 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioConsolidated_Layout3ExposureAmountMap1370 );
                                        
                                
                                if(zeroDBSLeverageRatioConsolidated_Layout3ExposureAmountValue1368 != null && !"".equals(zeroDBSLeverageRatioConsolidated_Layout3ExposureAmountValue1368)) {
                                    
                                    addContext(DBSLeverageRatioConsolidated_Layout3ExposureAmountContext1367, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType exposureAmountValue1371 = new MonetaryItemType();
                                    exposureAmountValue1371.setContextRef(DBSLeverageRatioConsolidated_Layout3ExposureAmountContext1367);
                                    
                                    exposureAmountValue1371.setUnitRef(INR1366);
                                    exposureAmountValue1371.setDecimals("INF");
                                    exposureAmountValue1371.setValue(new BigDecimal(zeroDBSLeverageRatioConsolidated_Layout3ExposureAmountValue1368));
                                    
                                    
                                    JAXBElement<MonetaryItemType> exposureAmountElement1372 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(exposureAmountValue1371);
                                    bodyElements.add(exposureAmountElement1372);
                                
                            }
                        
                        
                    
                    
            
                    
                    
                    
                    return "";
                    }

                
                    
                
                // if typemembers exist
                
                
                
                // create variable for subclass DBSLeverageRatioConsolidated_Layout4 if any typeMembers then List or Single
                //DBSLeverageRatioConsolidated_Layout4 dBSLeverageRatioConsolidated_Layout4 = mainReportData.getDBSLeverageRatioConsolidated_Layout4();
                
                    private String dBSLeverageRatioConsolidated_Layout4Method(DBSLeverageRatioConsolidated_Layout4 dBSLeverageRatioConsolidated_Layout4, List<String> contextIdentifiers,  List<Context> contextElements, List<Object> bodyElements, List<String> unitIdentifiers, List<Unit> unitElements, String bankCode, String startDateDefault, String endDateDefault, String periodDateDefault)
                
                    {
                        String startDate = startDateDefault;
                        String endDate = endDateDefault;
                        String periodDate = periodDateDefault;
                    DBSLeverageRatioConsolidated_Layout4 field = dBSLeverageRatioConsolidated_Layout4;
                    
                    
                        
                        
                            
                                
                                Unit INR1373 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1373 = createUnitIfNotExist(INR1373, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - ExposureAmount
                            
                                Map zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1377 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1377.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1377.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:GrossSFTAssetsMember");
                                    
                                    
                                    String zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountValue1375 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1377);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1376 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1377, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountValue1375 = zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1376 == null ? "" : zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1376.getValue();
                                    if(zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1376 != null ) {
                                        if(!zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1376.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1376.getStartDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1376.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1376.getEndDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1376.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1376.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioConsolidated_Layout4ExposureAmountContext1374 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1377 );
                                        
                                
                                if(zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountValue1375 != null && !"".equals(zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountValue1375)) {
                                    
                                    addContext(DBSLeverageRatioConsolidated_Layout4ExposureAmountContext1374, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType exposureAmountValue1378 = new MonetaryItemType();
                                    exposureAmountValue1378.setContextRef(DBSLeverageRatioConsolidated_Layout4ExposureAmountContext1374);
                                    
                                    exposureAmountValue1378.setUnitRef(INR1373);
                                    exposureAmountValue1378.setDecimals("INF");
                                    exposureAmountValue1378.setValue(new BigDecimal(zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountValue1375));
                                    
                                    
                                    JAXBElement<MonetaryItemType> exposureAmountElement1379 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(exposureAmountValue1378);
                                    bodyElements.add(exposureAmountElement1379);
                                
                            }
                        
                            
                                
                                Unit INR1380 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1380 = createUnitIfNotExist(INR1380, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - ExposureAmount
                            
                                Map zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1384 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1384.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1384.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:AdjustmentsForSFTSalesAccountingTransactionsMember");
                                    
                                    
                                    String zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountValue1382 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1384);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1383 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1384, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountValue1382 = zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1383 == null ? "" : zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1383.getValue();
                                    if(zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1383 != null ) {
                                        if(!zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1383.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1383.getStartDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1383.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1383.getEndDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1383.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1383.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioConsolidated_Layout4ExposureAmountContext1381 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1384 );
                                        
                                
                                if(zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountValue1382 != null && !"".equals(zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountValue1382)) {
                                    
                                    addContext(DBSLeverageRatioConsolidated_Layout4ExposureAmountContext1381, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType exposureAmountValue1385 = new MonetaryItemType();
                                    exposureAmountValue1385.setContextRef(DBSLeverageRatioConsolidated_Layout4ExposureAmountContext1381);
                                    
                                    exposureAmountValue1385.setUnitRef(INR1380);
                                    exposureAmountValue1385.setDecimals("INF");
                                    exposureAmountValue1385.setValue(new BigDecimal(zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountValue1382));
                                    
                                    
                                    JAXBElement<MonetaryItemType> exposureAmountElement1386 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(exposureAmountValue1385);
                                    bodyElements.add(exposureAmountElement1386);
                                
                            }
                        
                            
                                
                                Unit INR1387 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1387 = createUnitIfNotExist(INR1387, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - ExposureAmount
                            
                                Map zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1391 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1391.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1391.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:GrossSFTAssetsAfterAdjustmentsForSalesAccountingTransactionsMember");
                                    
                                    
                                    String zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountValue1389 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1391);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1390 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1391, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountValue1389 = zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1390 == null ? "" : zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1390.getValue();
                                    if(zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1390 != null ) {
                                        if(!zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1390.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1390.getStartDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1390.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1390.getEndDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1390.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1390.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioConsolidated_Layout4ExposureAmountContext1388 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1391 );
                                        
                                
                                if(zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountValue1389 != null && !"".equals(zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountValue1389)) {
                                    
                                    addContext(DBSLeverageRatioConsolidated_Layout4ExposureAmountContext1388, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType exposureAmountValue1392 = new MonetaryItemType();
                                    exposureAmountValue1392.setContextRef(DBSLeverageRatioConsolidated_Layout4ExposureAmountContext1388);
                                    
                                    exposureAmountValue1392.setUnitRef(INR1387);
                                    exposureAmountValue1392.setDecimals("INF");
                                    exposureAmountValue1392.setValue(new BigDecimal(zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountValue1389));
                                    
                                    
                                    JAXBElement<MonetaryItemType> exposureAmountElement1393 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(exposureAmountValue1392);
                                    bodyElements.add(exposureAmountElement1393);
                                
                            }
                        
                            
                                
                                Unit INR1394 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1394 = createUnitIfNotExist(INR1394, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - ExposureAmount
                            
                                Map zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1398 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1398.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1398.put("in-rbi-rep:ExposureClassAxis", "rbi-core:ExposureToQCCPsMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1398.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:GrossSFTAssetsAfterAdjustmentsForSalesAccountingTransactionsMember");
                                    
                                    
                                    String zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountValue1396 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1398);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1397 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1398, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountValue1396 = zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1397 == null ? "" : zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1397.getValue();
                                    if(zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1397 != null ) {
                                        if(!zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1397.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1397.getStartDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1397.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1397.getEndDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1397.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1397.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioConsolidated_Layout4ExposureAmountContext1395 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1398 );
                                        
                                
                                if(zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountValue1396 != null && !"".equals(zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountValue1396)) {
                                    
                                    addContext(DBSLeverageRatioConsolidated_Layout4ExposureAmountContext1395, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType exposureAmountValue1399 = new MonetaryItemType();
                                    exposureAmountValue1399.setContextRef(DBSLeverageRatioConsolidated_Layout4ExposureAmountContext1395);
                                    
                                    exposureAmountValue1399.setUnitRef(INR1394);
                                    exposureAmountValue1399.setDecimals("INF");
                                    exposureAmountValue1399.setValue(new BigDecimal(zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountValue1396));
                                    
                                    
                                    JAXBElement<MonetaryItemType> exposureAmountElement1400 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(exposureAmountValue1399);
                                    bodyElements.add(exposureAmountElement1400);
                                
                            }
                        
                            
                                
                                Unit INR1401 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1401 = createUnitIfNotExist(INR1401, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - ExposureAmount
                            
                                Map zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1405 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1405.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1405.put("in-rbi-rep:ExposureClassAxis", "rbi-core:ExposureToNonQCCPsMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1405.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:GrossSFTAssetsAfterAdjustmentsForSalesAccountingTransactionsMember");
                                    
                                    
                                    String zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountValue1403 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1405);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1404 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1405, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountValue1403 = zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1404 == null ? "" : zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1404.getValue();
                                    if(zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1404 != null ) {
                                        if(!zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1404.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1404.getStartDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1404.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1404.getEndDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1404.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1404.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioConsolidated_Layout4ExposureAmountContext1402 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1405 );
                                        
                                
                                if(zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountValue1403 != null && !"".equals(zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountValue1403)) {
                                    
                                    addContext(DBSLeverageRatioConsolidated_Layout4ExposureAmountContext1402, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType exposureAmountValue1406 = new MonetaryItemType();
                                    exposureAmountValue1406.setContextRef(DBSLeverageRatioConsolidated_Layout4ExposureAmountContext1402);
                                    
                                    exposureAmountValue1406.setUnitRef(INR1401);
                                    exposureAmountValue1406.setDecimals("INF");
                                    exposureAmountValue1406.setValue(new BigDecimal(zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountValue1403));
                                    
                                    
                                    JAXBElement<MonetaryItemType> exposureAmountElement1407 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(exposureAmountValue1406);
                                    bodyElements.add(exposureAmountElement1407);
                                
                            }
                        
                            
                                
                                Unit INR1408 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1408 = createUnitIfNotExist(INR1408, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - ExposureAmount
                            
                                Map zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1412 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1412.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1412.put("in-rbi-rep:ExposureClassAxis", "rbi-core:ExposureDueToOtherSFTsMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1412.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:GrossSFTAssetsAfterAdjustmentsForSalesAccountingTransactionsMember");
                                    
                                    
                                    String zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountValue1410 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1412);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1411 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1412, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountValue1410 = zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1411 == null ? "" : zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1411.getValue();
                                    if(zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1411 != null ) {
                                        if(!zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1411.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1411.getStartDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1411.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1411.getEndDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1411.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1411.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioConsolidated_Layout4ExposureAmountContext1409 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1412 );
                                        
                                
                                if(zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountValue1410 != null && !"".equals(zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountValue1410)) {
                                    
                                    addContext(DBSLeverageRatioConsolidated_Layout4ExposureAmountContext1409, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType exposureAmountValue1413 = new MonetaryItemType();
                                    exposureAmountValue1413.setContextRef(DBSLeverageRatioConsolidated_Layout4ExposureAmountContext1409);
                                    
                                    exposureAmountValue1413.setUnitRef(INR1408);
                                    exposureAmountValue1413.setDecimals("INF");
                                    exposureAmountValue1413.setValue(new BigDecimal(zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountValue1410));
                                    
                                    
                                    JAXBElement<MonetaryItemType> exposureAmountElement1414 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(exposureAmountValue1413);
                                    bodyElements.add(exposureAmountElement1414);
                                
                            }
                        
                            
                                
                                Unit INR1415 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1415 = createUnitIfNotExist(INR1415, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - ExposureAmount
                            
                                Map zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1419 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1419.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1419.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:NettedAmountsOfCashPayablesAndCashReceivablesOfGrossSFTAssetsMember");
                                    
                                    
                                    String zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountValue1417 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1419);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1418 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1419, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountValue1417 = zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1418 == null ? "" : zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1418.getValue();
                                    if(zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1418 != null ) {
                                        if(!zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1418.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1418.getStartDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1418.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1418.getEndDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1418.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1418.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioConsolidated_Layout4ExposureAmountContext1416 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1419 );
                                        
                                
                                if(zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountValue1417 != null && !"".equals(zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountValue1417)) {
                                    
                                    addContext(DBSLeverageRatioConsolidated_Layout4ExposureAmountContext1416, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType exposureAmountValue1420 = new MonetaryItemType();
                                    exposureAmountValue1420.setContextRef(DBSLeverageRatioConsolidated_Layout4ExposureAmountContext1416);
                                    
                                    exposureAmountValue1420.setUnitRef(INR1415);
                                    exposureAmountValue1420.setDecimals("INF");
                                    exposureAmountValue1420.setValue(new BigDecimal(zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountValue1417));
                                    
                                    
                                    JAXBElement<MonetaryItemType> exposureAmountElement1421 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(exposureAmountValue1420);
                                    bodyElements.add(exposureAmountElement1421);
                                
                            }
                        
                            
                                
                                Unit INR1422 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1422 = createUnitIfNotExist(INR1422, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - ExposureAmount
                            
                                Map zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1426 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1426.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1426.put("in-rbi-rep:ExposureClassAxis", "rbi-core:ExposureToQCCPsMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1426.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:NettedAmountsOfCashPayablesAndCashReceivablesOfGrossSFTAssetsMember");
                                    
                                    
                                    String zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountValue1424 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1426);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1425 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1426, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountValue1424 = zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1425 == null ? "" : zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1425.getValue();
                                    if(zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1425 != null ) {
                                        if(!zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1425.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1425.getStartDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1425.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1425.getEndDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1425.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1425.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioConsolidated_Layout4ExposureAmountContext1423 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1426 );
                                        
                                
                                if(zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountValue1424 != null && !"".equals(zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountValue1424)) {
                                    
                                    addContext(DBSLeverageRatioConsolidated_Layout4ExposureAmountContext1423, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType exposureAmountValue1427 = new MonetaryItemType();
                                    exposureAmountValue1427.setContextRef(DBSLeverageRatioConsolidated_Layout4ExposureAmountContext1423);
                                    
                                    exposureAmountValue1427.setUnitRef(INR1422);
                                    exposureAmountValue1427.setDecimals("INF");
                                    exposureAmountValue1427.setValue(new BigDecimal(zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountValue1424));
                                    
                                    
                                    JAXBElement<MonetaryItemType> exposureAmountElement1428 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(exposureAmountValue1427);
                                    bodyElements.add(exposureAmountElement1428);
                                
                            }
                        
                            
                                
                                Unit INR1429 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1429 = createUnitIfNotExist(INR1429, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - ExposureAmount
                            
                                Map zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1433 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1433.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1433.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:NettedAmountsOfGrossSFTAssetsMember");
                                    
                                    
                                    String zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountValue1431 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1433);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1432 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1433, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountValue1431 = zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1432 == null ? "" : zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1432.getValue();
                                    if(zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1432 != null ) {
                                        if(!zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1432.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1432.getStartDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1432.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1432.getEndDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1432.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1432.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioConsolidated_Layout4ExposureAmountContext1430 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1433 );
                                        
                                
                                if(zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountValue1431 != null && !"".equals(zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountValue1431)) {
                                    
                                    addContext(DBSLeverageRatioConsolidated_Layout4ExposureAmountContext1430, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType exposureAmountValue1434 = new MonetaryItemType();
                                    exposureAmountValue1434.setContextRef(DBSLeverageRatioConsolidated_Layout4ExposureAmountContext1430);
                                    
                                    exposureAmountValue1434.setUnitRef(INR1429);
                                    exposureAmountValue1434.setDecimals("INF");
                                    exposureAmountValue1434.setValue(new BigDecimal(zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountValue1431));
                                    
                                    
                                    JAXBElement<MonetaryItemType> exposureAmountElement1435 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(exposureAmountValue1434);
                                    bodyElements.add(exposureAmountElement1435);
                                
                            }
                        
                            
                                
                                Unit INR1436 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1436 = createUnitIfNotExist(INR1436, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - ExposureAmount
                            
                                Map zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1440 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1440.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1440.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:GrossCCRExpsoureForSFTAssetsMember");
                                    
                                    
                                    String zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountValue1438 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1440);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1439 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1440, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountValue1438 = zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1439 == null ? "" : zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1439.getValue();
                                    if(zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1439 != null ) {
                                        if(!zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1439.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1439.getStartDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1439.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1439.getEndDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1439.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1439.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioConsolidated_Layout4ExposureAmountContext1437 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1440 );
                                        
                                
                                if(zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountValue1438 != null && !"".equals(zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountValue1438)) {
                                    
                                    addContext(DBSLeverageRatioConsolidated_Layout4ExposureAmountContext1437, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType exposureAmountValue1441 = new MonetaryItemType();
                                    exposureAmountValue1441.setContextRef(DBSLeverageRatioConsolidated_Layout4ExposureAmountContext1437);
                                    
                                    exposureAmountValue1441.setUnitRef(INR1436);
                                    exposureAmountValue1441.setDecimals("INF");
                                    exposureAmountValue1441.setValue(new BigDecimal(zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountValue1438));
                                    
                                    
                                    JAXBElement<MonetaryItemType> exposureAmountElement1442 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(exposureAmountValue1441);
                                    bodyElements.add(exposureAmountElement1442);
                                
                            }
                        
                            
                                
                                Unit INR1443 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1443 = createUnitIfNotExist(INR1443, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - ExposureAmount
                            
                                Map zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1447 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1447.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1447.put("in-rbi-rep:ExposureClassAxis", "rbi-core:ExposureToQCCPsMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1447.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:GrossCCRExpsoureForSFTAssetsMember");
                                    
                                    
                                    String zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountValue1445 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1447);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1446 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1447, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountValue1445 = zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1446 == null ? "" : zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1446.getValue();
                                    if(zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1446 != null ) {
                                        if(!zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1446.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1446.getStartDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1446.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1446.getEndDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1446.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1446.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioConsolidated_Layout4ExposureAmountContext1444 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1447 );
                                        
                                
                                if(zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountValue1445 != null && !"".equals(zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountValue1445)) {
                                    
                                    addContext(DBSLeverageRatioConsolidated_Layout4ExposureAmountContext1444, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType exposureAmountValue1448 = new MonetaryItemType();
                                    exposureAmountValue1448.setContextRef(DBSLeverageRatioConsolidated_Layout4ExposureAmountContext1444);
                                    
                                    exposureAmountValue1448.setUnitRef(INR1443);
                                    exposureAmountValue1448.setDecimals("INF");
                                    exposureAmountValue1448.setValue(new BigDecimal(zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountValue1445));
                                    
                                    
                                    JAXBElement<MonetaryItemType> exposureAmountElement1449 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(exposureAmountValue1448);
                                    bodyElements.add(exposureAmountElement1449);
                                
                            }
                        
                            
                                
                                Unit INR1450 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1450 = createUnitIfNotExist(INR1450, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - ExposureAmount
                            
                                Map zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1454 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1454.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1454.put("in-rbi-rep:ExposureClassAxis", "rbi-core:ExposureToNonQCCPsMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1454.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:GrossCCRExpsoureForSFTAssetsMember");
                                    
                                    
                                    String zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountValue1452 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1454);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1453 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1454, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountValue1452 = zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1453 == null ? "" : zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1453.getValue();
                                    if(zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1453 != null ) {
                                        if(!zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1453.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1453.getStartDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1453.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1453.getEndDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1453.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1453.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioConsolidated_Layout4ExposureAmountContext1451 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1454 );
                                        
                                
                                if(zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountValue1452 != null && !"".equals(zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountValue1452)) {
                                    
                                    addContext(DBSLeverageRatioConsolidated_Layout4ExposureAmountContext1451, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType exposureAmountValue1455 = new MonetaryItemType();
                                    exposureAmountValue1455.setContextRef(DBSLeverageRatioConsolidated_Layout4ExposureAmountContext1451);
                                    
                                    exposureAmountValue1455.setUnitRef(INR1450);
                                    exposureAmountValue1455.setDecimals("INF");
                                    exposureAmountValue1455.setValue(new BigDecimal(zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountValue1452));
                                    
                                    
                                    JAXBElement<MonetaryItemType> exposureAmountElement1456 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(exposureAmountValue1455);
                                    bodyElements.add(exposureAmountElement1456);
                                
                            }
                        
                            
                                
                                Unit INR1457 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1457 = createUnitIfNotExist(INR1457, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - ExposureAmount
                            
                                Map zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1461 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1461.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1461.put("in-rbi-rep:ExposureClassAxis", "rbi-core:ExposureDueToOtherSFTsMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1461.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:GrossCCRExpsoureForSFTAssetsMember");
                                    
                                    
                                    String zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountValue1459 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1461);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1460 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1461, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountValue1459 = zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1460 == null ? "" : zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1460.getValue();
                                    if(zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1460 != null ) {
                                        if(!zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1460.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1460.getStartDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1460.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1460.getEndDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1460.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1460.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioConsolidated_Layout4ExposureAmountContext1458 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1461 );
                                        
                                
                                if(zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountValue1459 != null && !"".equals(zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountValue1459)) {
                                    
                                    addContext(DBSLeverageRatioConsolidated_Layout4ExposureAmountContext1458, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType exposureAmountValue1462 = new MonetaryItemType();
                                    exposureAmountValue1462.setContextRef(DBSLeverageRatioConsolidated_Layout4ExposureAmountContext1458);
                                    
                                    exposureAmountValue1462.setUnitRef(INR1457);
                                    exposureAmountValue1462.setDecimals("INF");
                                    exposureAmountValue1462.setValue(new BigDecimal(zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountValue1459));
                                    
                                    
                                    JAXBElement<MonetaryItemType> exposureAmountElement1463 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(exposureAmountValue1462);
                                    bodyElements.add(exposureAmountElement1463);
                                
                            }
                        
                            
                                
                                Unit INR1464 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1464 = createUnitIfNotExist(INR1464, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - ExposureAmount
                            
                                Map zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1468 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1468.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1468.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:AmountOfCCRExposureAfterNettingMember");
                                    
                                    
                                    String zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountValue1466 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1468);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1467 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1468, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountValue1466 = zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1467 == null ? "" : zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1467.getValue();
                                    if(zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1467 != null ) {
                                        if(!zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1467.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1467.getStartDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1467.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1467.getEndDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1467.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1467.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioConsolidated_Layout4ExposureAmountContext1465 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1468 );
                                        
                                
                                if(zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountValue1466 != null && !"".equals(zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountValue1466)) {
                                    
                                    addContext(DBSLeverageRatioConsolidated_Layout4ExposureAmountContext1465, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType exposureAmountValue1469 = new MonetaryItemType();
                                    exposureAmountValue1469.setContextRef(DBSLeverageRatioConsolidated_Layout4ExposureAmountContext1465);
                                    
                                    exposureAmountValue1469.setUnitRef(INR1464);
                                    exposureAmountValue1469.setDecimals("INF");
                                    exposureAmountValue1469.setValue(new BigDecimal(zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountValue1466));
                                    
                                    
                                    JAXBElement<MonetaryItemType> exposureAmountElement1470 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(exposureAmountValue1469);
                                    bodyElements.add(exposureAmountElement1470);
                                
                            }
                        
                            
                                
                                Unit INR1471 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1471 = createUnitIfNotExist(INR1471, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - ExposureAmount
                            
                                Map zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1475 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1475.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1475.put("in-rbi-rep:ExposureClassAxis", "rbi-core:ExposureToQCCPsMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1475.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:AmountOfCCRExposureAfterNettingMember");
                                    
                                    
                                    String zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountValue1473 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1475);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1474 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1475, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountValue1473 = zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1474 == null ? "" : zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1474.getValue();
                                    if(zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1474 != null ) {
                                        if(!zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1474.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1474.getStartDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1474.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1474.getEndDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1474.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1474.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioConsolidated_Layout4ExposureAmountContext1472 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1475 );
                                        
                                
                                if(zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountValue1473 != null && !"".equals(zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountValue1473)) {
                                    
                                    addContext(DBSLeverageRatioConsolidated_Layout4ExposureAmountContext1472, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType exposureAmountValue1476 = new MonetaryItemType();
                                    exposureAmountValue1476.setContextRef(DBSLeverageRatioConsolidated_Layout4ExposureAmountContext1472);
                                    
                                    exposureAmountValue1476.setUnitRef(INR1471);
                                    exposureAmountValue1476.setDecimals("INF");
                                    exposureAmountValue1476.setValue(new BigDecimal(zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountValue1473));
                                    
                                    
                                    JAXBElement<MonetaryItemType> exposureAmountElement1477 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(exposureAmountValue1476);
                                    bodyElements.add(exposureAmountElement1477);
                                
                            }
                        
                            
                                
                                Unit INR1478 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1478 = createUnitIfNotExist(INR1478, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - ExposureAmount
                            
                                Map zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1482 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1482.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1482.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:CCRExpsoureForSFTAssetsMember");
                                    
                                    
                                    String zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountValue1480 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1482);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1481 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1482, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountValue1480 = zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1481 == null ? "" : zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1481.getValue();
                                    if(zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1481 != null ) {
                                        if(!zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1481.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1481.getStartDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1481.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1481.getEndDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1481.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1481.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioConsolidated_Layout4ExposureAmountContext1479 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1482 );
                                        
                                
                                if(zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountValue1480 != null && !"".equals(zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountValue1480)) {
                                    
                                    addContext(DBSLeverageRatioConsolidated_Layout4ExposureAmountContext1479, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType exposureAmountValue1483 = new MonetaryItemType();
                                    exposureAmountValue1483.setContextRef(DBSLeverageRatioConsolidated_Layout4ExposureAmountContext1479);
                                    
                                    exposureAmountValue1483.setUnitRef(INR1478);
                                    exposureAmountValue1483.setDecimals("INF");
                                    exposureAmountValue1483.setValue(new BigDecimal(zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountValue1480));
                                    
                                    
                                    JAXBElement<MonetaryItemType> exposureAmountElement1484 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(exposureAmountValue1483);
                                    bodyElements.add(exposureAmountElement1484);
                                
                            }
                        
                            
                                
                                Unit INR1485 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1485 = createUnitIfNotExist(INR1485, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - ExposureAmount
                            
                                Map zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1489 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1489.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1489.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:AgentTransactionExposureForSFTAssetsMember");
                                    
                                    
                                    String zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountValue1487 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1489);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1488 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1489, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountValue1487 = zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1488 == null ? "" : zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1488.getValue();
                                    if(zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1488 != null ) {
                                        if(!zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1488.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1488.getStartDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1488.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1488.getEndDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1488.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1488.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioConsolidated_Layout4ExposureAmountContext1486 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1489 );
                                        
                                
                                if(zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountValue1487 != null && !"".equals(zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountValue1487)) {
                                    
                                    addContext(DBSLeverageRatioConsolidated_Layout4ExposureAmountContext1486, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType exposureAmountValue1490 = new MonetaryItemType();
                                    exposureAmountValue1490.setContextRef(DBSLeverageRatioConsolidated_Layout4ExposureAmountContext1486);
                                    
                                    exposureAmountValue1490.setUnitRef(INR1485);
                                    exposureAmountValue1490.setDecimals("INF");
                                    exposureAmountValue1490.setValue(new BigDecimal(zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountValue1487));
                                    
                                    
                                    JAXBElement<MonetaryItemType> exposureAmountElement1491 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(exposureAmountValue1490);
                                    bodyElements.add(exposureAmountElement1491);
                                
                            }
                        
                            
                                
                                Unit INR1492 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1492 = createUnitIfNotExist(INR1492, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - ExposureAmount
                            
                                Map zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1496 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1496.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1496.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:ExposureDueToGuaranteeIndemnityProvidedMember");
                                    
                                    
                                    String zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountValue1494 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1496);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1495 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1496, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountValue1494 = zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1495 == null ? "" : zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1495.getValue();
                                    if(zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1495 != null ) {
                                        if(!zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1495.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1495.getStartDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1495.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1495.getEndDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1495.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1495.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioConsolidated_Layout4ExposureAmountContext1493 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1496 );
                                        
                                
                                if(zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountValue1494 != null && !"".equals(zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountValue1494)) {
                                    
                                    addContext(DBSLeverageRatioConsolidated_Layout4ExposureAmountContext1493, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType exposureAmountValue1497 = new MonetaryItemType();
                                    exposureAmountValue1497.setContextRef(DBSLeverageRatioConsolidated_Layout4ExposureAmountContext1493);
                                    
                                    exposureAmountValue1497.setUnitRef(INR1492);
                                    exposureAmountValue1497.setDecimals("INF");
                                    exposureAmountValue1497.setValue(new BigDecimal(zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountValue1494));
                                    
                                    
                                    JAXBElement<MonetaryItemType> exposureAmountElement1498 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(exposureAmountValue1497);
                                    bodyElements.add(exposureAmountElement1498);
                                
                            }
                        
                            
                                
                                Unit INR1499 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1499 = createUnitIfNotExist(INR1499, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - ExposureAmount
                            
                                Map zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1503 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1503.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1503.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:FutherExposureBeyondTheGuaranteeOrIndemnityProvidedMember");
                                    
                                    
                                    String zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountValue1501 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1503);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1502 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1503, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountValue1501 = zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1502 == null ? "" : zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1502.getValue();
                                    if(zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1502 != null ) {
                                        if(!zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1502.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1502.getStartDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1502.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1502.getEndDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1502.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1502.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioConsolidated_Layout4ExposureAmountContext1500 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1503 );
                                        
                                
                                if(zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountValue1501 != null && !"".equals(zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountValue1501)) {
                                    
                                    addContext(DBSLeverageRatioConsolidated_Layout4ExposureAmountContext1500, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType exposureAmountValue1504 = new MonetaryItemType();
                                    exposureAmountValue1504.setContextRef(DBSLeverageRatioConsolidated_Layout4ExposureAmountContext1500);
                                    
                                    exposureAmountValue1504.setUnitRef(INR1499);
                                    exposureAmountValue1504.setDecimals("INF");
                                    exposureAmountValue1504.setValue(new BigDecimal(zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountValue1501));
                                    
                                    
                                    JAXBElement<MonetaryItemType> exposureAmountElement1505 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(exposureAmountValue1504);
                                    bodyElements.add(exposureAmountElement1505);
                                
                            }
                        
                            
                                
                                Unit INR1506 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1506 = createUnitIfNotExist(INR1506, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            // - ExposureAmount
                            
                                Map zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1510 = new HashMap<String, String>();
                                
                                
                                
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1510.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");
                                    
                                        
                                        
                                        zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1510.put("rbi-core:LeverageRatioExposureAxis", "rbi-core:TotalSecuritiesFinancingTransactionsExposuresMember");
                                    
                                    
                                    String zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountValue1508 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1510);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1509 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1510, "", "", "xs:date($refPeriodEndDate)");
                                    
                                    zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountValue1508 = zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1509 == null ? "" : zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1509.getValue();
                                    if(zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1509 != null ) {
                                        if(!zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1509.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1509.getStartDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1509.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1509.getEndDateValue();
                                        if(!zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1509.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountFieldDataValue1509.getInstantDateValue();
                                    }

                                    
                                            Context DBSLeverageRatioConsolidated_Layout4ExposureAmountContext1507 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountMap1510 );
                                        
                                
                                if(zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountValue1508 != null && !"".equals(zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountValue1508)) {
                                    
                                    addContext(DBSLeverageRatioConsolidated_Layout4ExposureAmountContext1507, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    MonetaryItemType exposureAmountValue1511 = new MonetaryItemType();
                                    exposureAmountValue1511.setContextRef(DBSLeverageRatioConsolidated_Layout4ExposureAmountContext1507);
                                    
                                    exposureAmountValue1511.setUnitRef(INR1506);
                                    exposureAmountValue1511.setDecimals("INF");
                                    exposureAmountValue1511.setValue(new BigDecimal(zeroDBSLeverageRatioConsolidated_Layout4ExposureAmountValue1508));
                                    
                                    
                                    JAXBElement<MonetaryItemType> exposureAmountElement1512 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(exposureAmountValue1511);
                                    bodyElements.add(exposureAmountElement1512);
                                
                            }
                        
                        
                    
                    
            
                    
                    
                    
                    return "";
                    }

                
                    
                
                // if typemembers exist
                
                
                
                // create variable for subclass DBSLeverageRatioConsolidated_Layout5 if any typeMembers then List or Single
                //DBSLeverageRatioConsolidated_Layout5 dBSLeverageRatioConsolidated_Layout5 = mainReportData.getDBSLeverageRatioConsolidated_Layout5();
                
                    private String dBSLeverageRatioConsolidated_Layout5Method(DBSLeverageRatioConsolidated_Layout5 dBSLeverageRatioConsolidated_Layout5, List<String> contextIdentifiers,  List<Context> contextElements, List<Object> bodyElements, List<String> unitIdentifiers, List<Unit> unitElements, String bankCode, String startDateDefault, String endDateDefault, String periodDateDefault)
                
                    {
                        String startDate = startDateDefault;
                        String endDate = endDateDefault;
                        String periodDate = periodDateDefault;
                    DBSLeverageRatioConsolidated_Layout5 field = dBSLeverageRatioConsolidated_Layout5;
                    
                    
                    
            
                    
                    
                        
                            
                            
                                
                                Unit INR1513 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1513 = createUnitIfNotExist(INR1513, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - Tier1Capital
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisMap1515 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisMap1515.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1516 = DBS06ReportUtil.retrieveValueForElement(field.getTier1Capital(), explictMember1DBSLeverageRatioConsolidated_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisMap1515);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1517 = DBS06ReportUtil.retrieveFieldDataForElement(field.getTier1Capital(), explictMember1DBSLeverageRatioConsolidated_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisMap1515, "", "", "xs:date($refPeriodEndDate)" );

                                explictMember1DBSLeverageRatioConsolidated_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1516 = explictMember1DBSLeverageRatioConsolidated_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1517 == null ? "" : explictMember1DBSLeverageRatioConsolidated_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1517.getValue();
                                    
                                if(explictMember1DBSLeverageRatioConsolidated_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1517 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1517.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1517.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1517.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1517.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1517.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1517.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1516 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1516)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisContext1514 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisMap1515 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisContext1514, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1519 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1519.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisContext1514);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1519.setUnitRef(INR1513);
                                        explictMember1DBSLeverageRatioConsolidated_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1519.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1519.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1516));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1518 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createTier1Capital(explictMember1DBSLeverageRatioConsolidated_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1519);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout5Tier1CapitalConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1518);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit INR1520 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("INR")).findAny().orElse(null);
                                INR1520 = createUnitIfNotExist(INR1520, "INR", "http://www.xbrl.org/2003/iso4217", "INR", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - ExposureAmount
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisMap1522 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisMap1522.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                        
                                        
                                        
                                        explictMember1DBSLeverageRatioConsolidated_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisMap1522.put("rbi-core:LeverageRatioExposureAxis", "in-rbi-rep:TotalExposureMember");
                                    
                                String explictMember1DBSLeverageRatioConsolidated_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1523 = DBS06ReportUtil.retrieveValueForElement(field.getExposureAmount(), explictMember1DBSLeverageRatioConsolidated_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisMap1522);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1524 = DBS06ReportUtil.retrieveFieldDataForElement(field.getExposureAmount(), explictMember1DBSLeverageRatioConsolidated_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisMap1522, "", "", "xs:date($refPeriodEndDate)" );

                                explictMember1DBSLeverageRatioConsolidated_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1523 = explictMember1DBSLeverageRatioConsolidated_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1524 == null ? "" : explictMember1DBSLeverageRatioConsolidated_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1524.getValue();
                                    
                                if(explictMember1DBSLeverageRatioConsolidated_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1524 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1524.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1524.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1524.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1524.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1524.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1524.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1523 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1523)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisContext1521 = DBS06ReportContextUtil.createAsOfContextWithMembers( bankCode, periodDate,  explictMember1DBSLeverageRatioConsolidated_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisMap1522 );
                                        
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisContext1521, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    MonetaryItemType explictMember1DBSLeverageRatioConsolidated_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1526 = new MonetaryItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1526.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisContext1521);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1526.setUnitRef(INR1520);
                                        explictMember1DBSLeverageRatioConsolidated_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1526.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1526.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1523));
                                    
                                    
                                    JAXBElement<MonetaryItemType> explictMember1DBSLeverageRatioConsolidated_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1525 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createExposureAmount(explictMember1DBSLeverageRatioConsolidated_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1526);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout5ExposureAmountConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1525);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                            
                            
                                
                                Unit pure1527 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                                pure1527 = createUnitIfNotExist(pure1527, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                                
                            
                            //rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis - BaselIILeverageRatio
                            
                        
                            
                                
                                Map explictMember1DBSLeverageRatioConsolidated_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisMap1529 = new HashMap<String, String>();
                                
                                
                                explictMember1DBSLeverageRatioConsolidated_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisMap1529.put("rbi-core:ConsolidatedAndSeparateFinancialStatementsAxis", "in-rbi-rep:ConsolidatedMember");                
                                
                                String explictMember1DBSLeverageRatioConsolidated_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1530 = DBS06ReportUtil.retrieveValueForElement(field.getBaselIILeverageRatio(), explictMember1DBSLeverageRatioConsolidated_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisMap1529);
                            
                                startDate = startDateDefault;
                                endDate = endDateDefault;
                                periodDate = periodDateDefault;
                                FieldDataValue explictMember1DBSLeverageRatioConsolidated_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1531 = DBS06ReportUtil.retrieveFieldDataForElement(field.getBaselIILeverageRatio(), explictMember1DBSLeverageRatioConsolidated_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisMap1529, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "" );

                                explictMember1DBSLeverageRatioConsolidated_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1530 = explictMember1DBSLeverageRatioConsolidated_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1531 == null ? "" : explictMember1DBSLeverageRatioConsolidated_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1531.getValue();
                                    
                                if(explictMember1DBSLeverageRatioConsolidated_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1531 != null ) {
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1531.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = explictMember1DBSLeverageRatioConsolidated_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1531.getStartDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1531.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = explictMember1DBSLeverageRatioConsolidated_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1531.getEndDateValue();
                                    if(!explictMember1DBSLeverageRatioConsolidated_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1531.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = explictMember1DBSLeverageRatioConsolidated_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberFieldDataValue1531.getInstantDateValue();
                                }

                                if(explictMember1DBSLeverageRatioConsolidated_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1530 != null && !"".equals(explictMember1DBSLeverageRatioConsolidated_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1530)) {
                                
                                    
                                        Context explictMember1DBSLeverageRatioConsolidated_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisContext1528 = DBS06ReportContextUtil.createFromToContextWithMembers( bankCode, startDate, endDate,  explictMember1DBSLeverageRatioConsolidated_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisMap1529 );
                                    
                                    addContext(explictMember1DBSLeverageRatioConsolidated_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisContext1528, contextElements, contextIdentifiers);
                                    
                                
                                    // create element JAXB Element
                
                                    PercentItemType explictMember1DBSLeverageRatioConsolidated_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1533 = new PercentItemType();
                                    explictMember1DBSLeverageRatioConsolidated_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1533.setContextRef(explictMember1DBSLeverageRatioConsolidated_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisContext1528);
                                    
                                    
                                        explictMember1DBSLeverageRatioConsolidated_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1533.setUnitRef(pure1527);
                                        explictMember1DBSLeverageRatioConsolidated_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1533.setDecimals("INF");
                                        explictMember1DBSLeverageRatioConsolidated_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1533.setValue(new BigDecimal(explictMember1DBSLeverageRatioConsolidated_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberValue1530));
                                    
                                    
                                    JAXBElement<PercentItemType> explictMember1DBSLeverageRatioConsolidated_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1532 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createBaselIILeverageRatio(explictMember1DBSLeverageRatioConsolidated_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberDataType1533);
                                    bodyElements.add(explictMember1DBSLeverageRatioConsolidated_Layout5BaselIILeverageRatioConsolidatedAndSeparateFinancialStatementsAxisConsolidatedMemberElement1532);
                                
                                }
                                // if uniquenamevalue is empty then don't do anything
                            

                            
                        
                        
                        
                    
                    
                    return "";
                    }

                
                    
                
                // if typemembers exist
                
                
                
                // create variable for subclass DBSAuthorisedSignatory_Layout1 if any typeMembers then List or Single
                //DBSAuthorisedSignatory_Layout1 dBSAuthorisedSignatory_Layout1 = mainReportData.getDBSAuthorisedSignatory_Layout1();
                
                    private String dBSAuthorisedSignatory_Layout1Method(DBSAuthorisedSignatory_Layout1 dBSAuthorisedSignatory_Layout1, List<String> contextIdentifiers,  List<Context> contextElements, List<Object> bodyElements, List<String> unitIdentifiers, List<Unit> unitElements, String bankCode, String startDateDefault, String endDateDefault, String periodDateDefault)
                
                    {
                        String startDate = startDateDefault;
                        String endDate = endDateDefault;
                        String periodDate = periodDateDefault;
                    DBSAuthorisedSignatory_Layout1 field = dBSAuthorisedSignatory_Layout1;
                    
                    
                        
                        
                            
                            Unit pure1534 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure1534 = createUnitIfNotExist(pure1534, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - NameOfSignatory
                            
                                Map zeroDBSAuthorisedSignatory_Layout1NameOfSignatoryMap1538 = new HashMap<String, String>();
                                
                                
                                
                                    
                                    String zeroDBSAuthorisedSignatory_Layout1NameOfSignatoryValue1536 = DBS06ReportUtil.retrieveValueForElement(field.getNameOfSignatory(), zeroDBSAuthorisedSignatory_Layout1NameOfSignatoryMap1538);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSAuthorisedSignatory_Layout1NameOfSignatoryFieldDataValue1537 = DBS06ReportUtil.retrieveFieldDataForElement(field.getNameOfSignatory(), zeroDBSAuthorisedSignatory_Layout1NameOfSignatoryMap1538, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBSAuthorisedSignatory_Layout1NameOfSignatoryValue1536 = zeroDBSAuthorisedSignatory_Layout1NameOfSignatoryFieldDataValue1537 == null ? "" : zeroDBSAuthorisedSignatory_Layout1NameOfSignatoryFieldDataValue1537.getValue();
                                    
                                    if(zeroDBSAuthorisedSignatory_Layout1NameOfSignatoryFieldDataValue1537 != null ) {
                                        if(!zeroDBSAuthorisedSignatory_Layout1NameOfSignatoryFieldDataValue1537.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSAuthorisedSignatory_Layout1NameOfSignatoryFieldDataValue1537.getStartDateValue();
                                        if(!zeroDBSAuthorisedSignatory_Layout1NameOfSignatoryFieldDataValue1537.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSAuthorisedSignatory_Layout1NameOfSignatoryFieldDataValue1537.getEndDateValue();
                                        if(!zeroDBSAuthorisedSignatory_Layout1NameOfSignatoryFieldDataValue1537.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSAuthorisedSignatory_Layout1NameOfSignatoryFieldDataValue1537.getInstantDateValue();
                                    }

                                    
                                        Context DBSAuthorisedSignatory_Layout1NameOfSignatoryContext1535 = DBS06ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                
                                if(zeroDBSAuthorisedSignatory_Layout1NameOfSignatoryValue1536 != null && !"".equals(zeroDBSAuthorisedSignatory_Layout1NameOfSignatoryValue1536)) {
                                    
                                    addContext(DBSAuthorisedSignatory_Layout1NameOfSignatoryContext1535, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    StringItemType nameOfSignatoryValue1539 = new StringItemType();
                                    nameOfSignatoryValue1539.setContextRef(DBSAuthorisedSignatory_Layout1NameOfSignatoryContext1535);
                                    
                                    nameOfSignatoryValue1539.setValue(zeroDBSAuthorisedSignatory_Layout1NameOfSignatoryValue1536);        
                                    
                                    
                                    JAXBElement<StringItemType> nameOfSignatoryElement1540 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createNameOfSignatory(nameOfSignatoryValue1539);
                                    bodyElements.add(nameOfSignatoryElement1540);
                                
                            }
                        
                            
                            Unit pure1541 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure1541 = createUnitIfNotExist(pure1541, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - DesignationOfSignatory
                            
                                Map zeroDBSAuthorisedSignatory_Layout1DesignationOfSignatoryMap1545 = new HashMap<String, String>();
                                
                                
                                
                                    
                                    String zeroDBSAuthorisedSignatory_Layout1DesignationOfSignatoryValue1543 = DBS06ReportUtil.retrieveValueForElement(field.getDesignationOfSignatory(), zeroDBSAuthorisedSignatory_Layout1DesignationOfSignatoryMap1545);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSAuthorisedSignatory_Layout1DesignationOfSignatoryFieldDataValue1544 = DBS06ReportUtil.retrieveFieldDataForElement(field.getDesignationOfSignatory(), zeroDBSAuthorisedSignatory_Layout1DesignationOfSignatoryMap1545, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBSAuthorisedSignatory_Layout1DesignationOfSignatoryValue1543 = zeroDBSAuthorisedSignatory_Layout1DesignationOfSignatoryFieldDataValue1544 == null ? "" : zeroDBSAuthorisedSignatory_Layout1DesignationOfSignatoryFieldDataValue1544.getValue();
                                    
                                    if(zeroDBSAuthorisedSignatory_Layout1DesignationOfSignatoryFieldDataValue1544 != null ) {
                                        if(!zeroDBSAuthorisedSignatory_Layout1DesignationOfSignatoryFieldDataValue1544.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSAuthorisedSignatory_Layout1DesignationOfSignatoryFieldDataValue1544.getStartDateValue();
                                        if(!zeroDBSAuthorisedSignatory_Layout1DesignationOfSignatoryFieldDataValue1544.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSAuthorisedSignatory_Layout1DesignationOfSignatoryFieldDataValue1544.getEndDateValue();
                                        if(!zeroDBSAuthorisedSignatory_Layout1DesignationOfSignatoryFieldDataValue1544.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSAuthorisedSignatory_Layout1DesignationOfSignatoryFieldDataValue1544.getInstantDateValue();
                                    }

                                    
                                        Context DBSAuthorisedSignatory_Layout1DesignationOfSignatoryContext1542 = DBS06ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                
                                if(zeroDBSAuthorisedSignatory_Layout1DesignationOfSignatoryValue1543 != null && !"".equals(zeroDBSAuthorisedSignatory_Layout1DesignationOfSignatoryValue1543)) {
                                    
                                    addContext(DBSAuthorisedSignatory_Layout1DesignationOfSignatoryContext1542, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    StringItemType designationOfSignatoryValue1546 = new StringItemType();
                                    designationOfSignatoryValue1546.setContextRef(DBSAuthorisedSignatory_Layout1DesignationOfSignatoryContext1542);
                                    
                                    designationOfSignatoryValue1546.setValue(zeroDBSAuthorisedSignatory_Layout1DesignationOfSignatoryValue1543);        
                                    
                                    
                                    JAXBElement<StringItemType> designationOfSignatoryElement1547 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createDesignationOfSignatory(designationOfSignatoryValue1546);
                                    bodyElements.add(designationOfSignatoryElement1547);
                                
                            }
                        
                            
                            Unit pure1548 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure1548 = createUnitIfNotExist(pure1548, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - AuthorisedSignatoryOfficialLandlineNumber
                            
                                Map zeroDBSAuthorisedSignatory_Layout1AuthorisedSignatoryOfficialLandlineNumberMap1552 = new HashMap<String, String>();
                                
                                
                                
                                    
                                    String zeroDBSAuthorisedSignatory_Layout1AuthorisedSignatoryOfficialLandlineNumberValue1550 = DBS06ReportUtil.retrieveValueForElement(field.getAuthorisedSignatoryOfficialLandlineNumber(), zeroDBSAuthorisedSignatory_Layout1AuthorisedSignatoryOfficialLandlineNumberMap1552);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSAuthorisedSignatory_Layout1AuthorisedSignatoryOfficialLandlineNumberFieldDataValue1551 = DBS06ReportUtil.retrieveFieldDataForElement(field.getAuthorisedSignatoryOfficialLandlineNumber(), zeroDBSAuthorisedSignatory_Layout1AuthorisedSignatoryOfficialLandlineNumberMap1552, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBSAuthorisedSignatory_Layout1AuthorisedSignatoryOfficialLandlineNumberValue1550 = zeroDBSAuthorisedSignatory_Layout1AuthorisedSignatoryOfficialLandlineNumberFieldDataValue1551 == null ? "" : zeroDBSAuthorisedSignatory_Layout1AuthorisedSignatoryOfficialLandlineNumberFieldDataValue1551.getValue();
                                    
                                    if(zeroDBSAuthorisedSignatory_Layout1AuthorisedSignatoryOfficialLandlineNumberFieldDataValue1551 != null ) {
                                        if(!zeroDBSAuthorisedSignatory_Layout1AuthorisedSignatoryOfficialLandlineNumberFieldDataValue1551.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSAuthorisedSignatory_Layout1AuthorisedSignatoryOfficialLandlineNumberFieldDataValue1551.getStartDateValue();
                                        if(!zeroDBSAuthorisedSignatory_Layout1AuthorisedSignatoryOfficialLandlineNumberFieldDataValue1551.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSAuthorisedSignatory_Layout1AuthorisedSignatoryOfficialLandlineNumberFieldDataValue1551.getEndDateValue();
                                        if(!zeroDBSAuthorisedSignatory_Layout1AuthorisedSignatoryOfficialLandlineNumberFieldDataValue1551.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSAuthorisedSignatory_Layout1AuthorisedSignatoryOfficialLandlineNumberFieldDataValue1551.getInstantDateValue();
                                    }

                                    
                                        Context DBSAuthorisedSignatory_Layout1AuthorisedSignatoryOfficialLandlineNumberContext1549 = DBS06ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                
                                if(zeroDBSAuthorisedSignatory_Layout1AuthorisedSignatoryOfficialLandlineNumberValue1550 != null && !"".equals(zeroDBSAuthorisedSignatory_Layout1AuthorisedSignatoryOfficialLandlineNumberValue1550)) {
                                    
                                    addContext(DBSAuthorisedSignatory_Layout1AuthorisedSignatoryOfficialLandlineNumberContext1549, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    StringItemType authorisedSignatoryOfficialLandlineNumberValue1553 = new StringItemType();
                                    authorisedSignatoryOfficialLandlineNumberValue1553.setContextRef(DBSAuthorisedSignatory_Layout1AuthorisedSignatoryOfficialLandlineNumberContext1549);
                                    
                                    authorisedSignatoryOfficialLandlineNumberValue1553.setValue(zeroDBSAuthorisedSignatory_Layout1AuthorisedSignatoryOfficialLandlineNumberValue1550);        
                                    
                                    
                                    JAXBElement<StringItemType> authorisedSignatoryOfficialLandlineNumberElement1554 = new org.rbi.in.xbrl.rbi_core.ObjectFactory().createAuthorisedSignatoryOfficialLandlineNumber(authorisedSignatoryOfficialLandlineNumberValue1553);
                                    bodyElements.add(authorisedSignatoryOfficialLandlineNumberElement1554);
                                
                            }
                        
                            
                            Unit pure1555 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure1555 = createUnitIfNotExist(pure1555, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - MobileNumberOfAuthorisedSignatory
                            
                                Map zeroDBSAuthorisedSignatory_Layout1MobileNumberOfAuthorisedSignatoryMap1559 = new HashMap<String, String>();
                                
                                
                                
                                    
                                    String zeroDBSAuthorisedSignatory_Layout1MobileNumberOfAuthorisedSignatoryValue1557 = DBS06ReportUtil.retrieveValueForElement(field.getMobileNumberOfAuthorisedSignatory(), zeroDBSAuthorisedSignatory_Layout1MobileNumberOfAuthorisedSignatoryMap1559);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSAuthorisedSignatory_Layout1MobileNumberOfAuthorisedSignatoryFieldDataValue1558 = DBS06ReportUtil.retrieveFieldDataForElement(field.getMobileNumberOfAuthorisedSignatory(), zeroDBSAuthorisedSignatory_Layout1MobileNumberOfAuthorisedSignatoryMap1559, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBSAuthorisedSignatory_Layout1MobileNumberOfAuthorisedSignatoryValue1557 = zeroDBSAuthorisedSignatory_Layout1MobileNumberOfAuthorisedSignatoryFieldDataValue1558 == null ? "" : zeroDBSAuthorisedSignatory_Layout1MobileNumberOfAuthorisedSignatoryFieldDataValue1558.getValue();
                                    
                                    if(zeroDBSAuthorisedSignatory_Layout1MobileNumberOfAuthorisedSignatoryFieldDataValue1558 != null ) {
                                        if(!zeroDBSAuthorisedSignatory_Layout1MobileNumberOfAuthorisedSignatoryFieldDataValue1558.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSAuthorisedSignatory_Layout1MobileNumberOfAuthorisedSignatoryFieldDataValue1558.getStartDateValue();
                                        if(!zeroDBSAuthorisedSignatory_Layout1MobileNumberOfAuthorisedSignatoryFieldDataValue1558.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSAuthorisedSignatory_Layout1MobileNumberOfAuthorisedSignatoryFieldDataValue1558.getEndDateValue();
                                        if(!zeroDBSAuthorisedSignatory_Layout1MobileNumberOfAuthorisedSignatoryFieldDataValue1558.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSAuthorisedSignatory_Layout1MobileNumberOfAuthorisedSignatoryFieldDataValue1558.getInstantDateValue();
                                    }

                                    
                                        Context DBSAuthorisedSignatory_Layout1MobileNumberOfAuthorisedSignatoryContext1556 = DBS06ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                
                                if(zeroDBSAuthorisedSignatory_Layout1MobileNumberOfAuthorisedSignatoryValue1557 != null && !"".equals(zeroDBSAuthorisedSignatory_Layout1MobileNumberOfAuthorisedSignatoryValue1557)) {
                                    
                                    addContext(DBSAuthorisedSignatory_Layout1MobileNumberOfAuthorisedSignatoryContext1556, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    StringItemType mobileNumberOfAuthorisedSignatoryValue1560 = new StringItemType();
                                    mobileNumberOfAuthorisedSignatoryValue1560.setContextRef(DBSAuthorisedSignatory_Layout1MobileNumberOfAuthorisedSignatoryContext1556);
                                    
                                    mobileNumberOfAuthorisedSignatoryValue1560.setValue(zeroDBSAuthorisedSignatory_Layout1MobileNumberOfAuthorisedSignatoryValue1557);        
                                    
                                    
                                    JAXBElement<StringItemType> mobileNumberOfAuthorisedSignatoryElement1561 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createMobileNumberOfAuthorisedSignatory(mobileNumberOfAuthorisedSignatoryValue1560);
                                    bodyElements.add(mobileNumberOfAuthorisedSignatoryElement1561);
                                
                            }
                        
                            
                            Unit pure1562 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure1562 = createUnitIfNotExist(pure1562, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - EMailIDOfAuthorisedReportingOfficial
                            
                                Map zeroDBSAuthorisedSignatory_Layout1EMailIDOfAuthorisedReportingOfficialMap1566 = new HashMap<String, String>();
                                
                                
                                
                                    
                                    String zeroDBSAuthorisedSignatory_Layout1EMailIDOfAuthorisedReportingOfficialValue1564 = DBS06ReportUtil.retrieveValueForElement(field.getEMailIDOfAuthorisedReportingOfficial(), zeroDBSAuthorisedSignatory_Layout1EMailIDOfAuthorisedReportingOfficialMap1566);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSAuthorisedSignatory_Layout1EMailIDOfAuthorisedReportingOfficialFieldDataValue1565 = DBS06ReportUtil.retrieveFieldDataForElement(field.getEMailIDOfAuthorisedReportingOfficial(), zeroDBSAuthorisedSignatory_Layout1EMailIDOfAuthorisedReportingOfficialMap1566, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBSAuthorisedSignatory_Layout1EMailIDOfAuthorisedReportingOfficialValue1564 = zeroDBSAuthorisedSignatory_Layout1EMailIDOfAuthorisedReportingOfficialFieldDataValue1565 == null ? "" : zeroDBSAuthorisedSignatory_Layout1EMailIDOfAuthorisedReportingOfficialFieldDataValue1565.getValue();
                                    
                                    if(zeroDBSAuthorisedSignatory_Layout1EMailIDOfAuthorisedReportingOfficialFieldDataValue1565 != null ) {
                                        if(!zeroDBSAuthorisedSignatory_Layout1EMailIDOfAuthorisedReportingOfficialFieldDataValue1565.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSAuthorisedSignatory_Layout1EMailIDOfAuthorisedReportingOfficialFieldDataValue1565.getStartDateValue();
                                        if(!zeroDBSAuthorisedSignatory_Layout1EMailIDOfAuthorisedReportingOfficialFieldDataValue1565.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSAuthorisedSignatory_Layout1EMailIDOfAuthorisedReportingOfficialFieldDataValue1565.getEndDateValue();
                                        if(!zeroDBSAuthorisedSignatory_Layout1EMailIDOfAuthorisedReportingOfficialFieldDataValue1565.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSAuthorisedSignatory_Layout1EMailIDOfAuthorisedReportingOfficialFieldDataValue1565.getInstantDateValue();
                                    }

                                    
                                        Context DBSAuthorisedSignatory_Layout1EMailIDOfAuthorisedReportingOfficialContext1563 = DBS06ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                
                                if(zeroDBSAuthorisedSignatory_Layout1EMailIDOfAuthorisedReportingOfficialValue1564 != null && !"".equals(zeroDBSAuthorisedSignatory_Layout1EMailIDOfAuthorisedReportingOfficialValue1564)) {
                                    
                                    addContext(DBSAuthorisedSignatory_Layout1EMailIDOfAuthorisedReportingOfficialContext1563, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    StringItemType eMailIDOfAuthorisedReportingOfficialValue1567 = new StringItemType();
                                    eMailIDOfAuthorisedReportingOfficialValue1567.setContextRef(DBSAuthorisedSignatory_Layout1EMailIDOfAuthorisedReportingOfficialContext1563);
                                    
                                    eMailIDOfAuthorisedReportingOfficialValue1567.setValue(zeroDBSAuthorisedSignatory_Layout1EMailIDOfAuthorisedReportingOfficialValue1564);        
                                    
                                    
                                    JAXBElement<StringItemType> eMailIDOfAuthorisedReportingOfficialElement1568 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createEMailIDOfAuthorisedReportingOfficial(eMailIDOfAuthorisedReportingOfficialValue1567);
                                    bodyElements.add(eMailIDOfAuthorisedReportingOfficialElement1568);
                                
                            }
                        
                            
                            Unit pure1569 = unitElements.stream().filter(u -> u.getId().equalsIgnoreCase("PURE")).findAny().orElse(null);
                            pure1569 = createUnitIfNotExist(pure1569, "PURE", "http://www.xbrl.org/2003/instance", "pure", unitElements);
                            
                            
                            // - Remarks
                            
                                Map zeroDBSAuthorisedSignatory_Layout1RemarksMap1573 = new HashMap<String, String>();
                                
                                
                                
                                    
                                    String zeroDBSAuthorisedSignatory_Layout1RemarksValue1571 = DBS06ReportUtil.retrieveValueForElement(field.getRemarks(), zeroDBSAuthorisedSignatory_Layout1RemarksMap1573);

                                    startDate = startDateDefault;
                                    endDate = endDateDefault;
                                    periodDate = periodDateDefault;
                                    FieldDataValue zeroDBSAuthorisedSignatory_Layout1RemarksFieldDataValue1572 = DBS06ReportUtil.retrieveFieldDataForElement(field.getRemarks(), zeroDBSAuthorisedSignatory_Layout1RemarksMap1573, "xs:date($refPeriodStartDate)", "xs:date($refPeriodEndDate)", "");
                                    
                                    zeroDBSAuthorisedSignatory_Layout1RemarksValue1571 = zeroDBSAuthorisedSignatory_Layout1RemarksFieldDataValue1572 == null ? "" : zeroDBSAuthorisedSignatory_Layout1RemarksFieldDataValue1572.getValue();
                                    
                                    if(zeroDBSAuthorisedSignatory_Layout1RemarksFieldDataValue1572 != null ) {
                                        if(!zeroDBSAuthorisedSignatory_Layout1RemarksFieldDataValue1572.getStartDateValue().equalsIgnoreCase("StartDate-Empty")) startDate = zeroDBSAuthorisedSignatory_Layout1RemarksFieldDataValue1572.getStartDateValue();
                                        if(!zeroDBSAuthorisedSignatory_Layout1RemarksFieldDataValue1572.getEndDateValue().equalsIgnoreCase("EndDate-Empty")) endDate = zeroDBSAuthorisedSignatory_Layout1RemarksFieldDataValue1572.getEndDateValue();
                                        if(!zeroDBSAuthorisedSignatory_Layout1RemarksFieldDataValue1572.getInstantDateValue().equalsIgnoreCase("InstantDate-Empty")) periodDate = zeroDBSAuthorisedSignatory_Layout1RemarksFieldDataValue1572.getInstantDateValue();
                                    }

                                    
                                        Context DBSAuthorisedSignatory_Layout1RemarksContext1570 = DBS06ReportContextUtil.createFromToContext( bankCode, startDate, endDate  );
                                        
                                
                                if(zeroDBSAuthorisedSignatory_Layout1RemarksValue1571 != null && !"".equals(zeroDBSAuthorisedSignatory_Layout1RemarksValue1571)) {
                                    
                                    addContext(DBSAuthorisedSignatory_Layout1RemarksContext1570, contextElements, contextIdentifiers);
                                    
                                    
                                    
                                    StringItemType remarksValue1574 = new StringItemType();
                                    remarksValue1574.setContextRef(DBSAuthorisedSignatory_Layout1RemarksContext1570);
                                    
                                    remarksValue1574.setValue(zeroDBSAuthorisedSignatory_Layout1RemarksValue1571);        
                                    
                                    
                                    JAXBElement<StringItemType> remarksElement1575 = new org.rbi.in.xbrl._2012_04_25.rbi.ObjectFactory().createRemarks(remarksValue1574);
                                    bodyElements.add(remarksElement1575);
                                
                            }
                        
                        
                    
                    
            
                    
                    
                    
                    return "";
                    }

                
                    
                
                // if typemembers exist
                
                
                
            
            private Unit createUnitIfNotExist(Unit unitObj, String unitId, String namespaceURI, String qNameValue, List<Unit> unitElements) {
                if(unitObj == null){
                    unitObj = new org.xbrl._2003.instance.ObjectFactory().createUnit();
                    unitObj.setId(unitId);
                    QName unitMeasureValue = new QName(namespaceURI, qNameValue);
                    unitObj.getMeasure().add(unitMeasureValue);
                    unitElements.add(unitObj);
                }
                return unitObj;
            }

            private void addContext(Context uniqueIdForContext, List<Context> contextElements, List<String> contextIdentifiers){
                if(!contextIdentifiers.contains(uniqueIdForContext.getId())) {
                    contextElements.add(uniqueIdForContext);
                    contextIdentifiers.add(uniqueIdForContext.getId());
                }
            }
    
        }
    
    

